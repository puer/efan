ARM GAS  D:\App\cygwin\tmp\ccHTI0vd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f0xx_hal.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_MspInit,"ax",%progbits
  20              		.align	2
  21              		.weak	HAL_MspInit
  22              		.code	16
  23              		.thumb_func
  25              	HAL_MspInit:
  26              	.LFB37:
  27              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @file    stm32f0xx_hal.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @verbatim
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The HAL contains two APIs categories:
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Initialization and de-initialization functions
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Control functions
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @endverbatim
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @attention
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * are permitted provided that the following conditions are met:
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      this list of conditions and the following disclaimer.
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
ARM GAS  D:\App\cygwin\tmp\ccHTI0vd.s 			page 2


  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      and/or other materials provided with the distribution.
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      without specific prior written permission.
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #include "stm32f0xx_hal.h"
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @addtogroup STM32F0xx_HAL_Driver
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL HAL
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief HAL module driver.
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private define ------------------------------------------------------------*/
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** 
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief STM32F0xx HAL Driver version number V1.7.2
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_MAIN   (0x01) /*!< [31:24] main version */
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB1   (0x07) /*!< [23:16] sub1 version */
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB2   (0x02) /*!< [15:8]  sub2 version */
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_RC     (0x00) /*!< [7:0]  release candidate */ 
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION         ((__STM32F0xx_HAL_VERSION_MAIN << 24U)\
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB1 << 16U)\
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB2 << 8U )\
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_RC))
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define IDCODE_DEVID_MASK    (0x00000FFFU)
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Macros HAL Private Macros
ARM GAS  D:\App\cygwin\tmp\ccHTI0vd.s 			page 3


  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Private Variables
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __IO uint32_t uwTick;
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    Initialization and de-initialization functions
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****               ##### Initialization and de-initialization functions #####
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    [..]  This section provides functions allowing to:
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           configuration. It initializes the source of time base also when timeout 
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           is needed and the backup domain when enabled.
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) de-Initializes common part of the HAL.
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated 
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           Tick interrupt priority. 
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Systick timer is used by default as source of time base, but user 
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              handled in milliseconds basis.
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             ISR process will be blocked. 
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****        (++) functions affecting time base configurations are declared as __Weak  
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This function configures the Flash prefetch,
ARM GAS  D:\App\cygwin\tmp\ccHTI0vd.s 			page 4


 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Configures time base source, NVIC and Low level hardware
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called at the beginning of program after reset and before 
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       the clock configuration
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note The time base configuration is based on HSI clock when exiting from Reset.
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Once done, time base tick start incrementing.
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       In the default implementation,Systick is used as source of time base.
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The tick variable is incremented each 1ms in its ISR.
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Init the low level hardware */
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspInit();
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function de-Initializes common part of the HAL and stops the source
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        of time base.
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is optional.
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* De-Init the low level hardware */
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspDeInit();
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Initializes the MSP.
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspInit(void)
ARM GAS  D:\App\cygwin\tmp\ccHTI0vd.s 			page 5


 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
  28              		.loc 1 203 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
  33              		.loc 1 207 0
  34              		@ sp needed
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE37:
  39 0002 C046     		.section	.text.HAL_MspDeInit,"ax",%progbits
  40              		.align	2
  41              		.weak	HAL_MspDeInit
  42              		.code	16
  43              		.thumb_func
  45              	HAL_MspDeInit:
  46              	.LFB38:
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  DeInitializes the MSP.
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspDeInit(void)
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
  47              		.loc 1 214 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
  52              		.loc 1 218 0
  53              		@ sp needed
  54 0000 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE38:
  58 0002 C046     		.section	.text.HAL_DeInit,"ax",%progbits
  59              		.align	2
  60              		.global	HAL_DeInit
  61              		.code	16
  62              		.thumb_func
  64              	HAL_DeInit:
  65              	.LFB36:
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
  66              		.loc 1 180 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70 0000 10B5     		push	{r4, lr}
  71              	.LCFI0:
ARM GAS  D:\App\cygwin\tmp\ccHTI0vd.s 			page 6


  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 4, -8
  74              		.cfi_offset 14, -4
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  75              		.loc 1 182 0
  76 0002 074B     		ldr	r3, .L4
  77 0004 0121     		movs	r1, #1
  78 0006 4942     		rsbs	r1, r1, #0
  79 0008 1961     		str	r1, [r3, #16]
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  80              		.loc 1 183 0
  81 000a 0022     		movs	r2, #0
  82 000c 1A61     		str	r2, [r3, #16]
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  83              		.loc 1 185 0
  84 000e D960     		str	r1, [r3, #12]
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  85              		.loc 1 186 0
  86 0010 DA60     		str	r2, [r3, #12]
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
  87              		.loc 1 188 0
  88 0012 9962     		str	r1, [r3, #40]
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  89              		.loc 1 189 0
  90 0014 9A62     		str	r2, [r3, #40]
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     
  91              		.loc 1 192 0
  92 0016 FFF7FEFF 		bl	HAL_MspDeInit
  93              	.LVL0:
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  94              		.loc 1 196 0
  95 001a 0020     		movs	r0, #0
  96              		@ sp needed
  97 001c 10BD     		pop	{r4, pc}
  98              	.L5:
  99 001e C046     		.align	2
 100              	.L4:
 101 0020 00100240 		.word	1073876992
 102              		.cfi_endproc
 103              	.LFE36:
 105              		.global	__aeabi_uidiv
 106              		.section	.text.HAL_InitTick,"ax",%progbits
 107              		.align	2
 108              		.weak	HAL_InitTick
 109              		.code	16
 110              		.thumb_func
 112              	HAL_InitTick:
 113              	.LFB39:
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function configures the source of the time base. 
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Tick interrupt priority.
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig(). 
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
ARM GAS  D:\App\cygwin\tmp\ccHTI0vd.s 			page 7


 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The the SysTick interrupt must have higher priority (numerically lower) 
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The function is declared as __Weak  to be overwritten  in case of other
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementation  in user file.
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 114              		.loc 1 237 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              	.LVL1:
 119 0000 10B5     		push	{r4, lr}
 120              	.LCFI1:
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 4, -8
 123              		.cfi_offset 14, -4
 124 0002 0400     		movs	r4, r0
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000U);
 125              		.loc 1 239 0
 126 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 127              	.LVL2:
 128 0008 FA21     		movs	r1, #250
 129 000a 8900     		lsls	r1, r1, #2
 130 000c FFF7FEFF 		bl	__aeabi_uidiv
 131              	.LVL3:
 132 0010 FFF7FEFF 		bl	HAL_SYSTICK_Config
 133              	.LVL4:
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /*Configure the SysTick IRQ priority */
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0U);
 134              		.loc 1 242 0
 135 0014 0022     		movs	r2, #0
 136 0016 2100     		movs	r1, r4
 137 0018 0120     		movs	r0, #1
 138 001a 4042     		rsbs	r0, r0, #0
 139 001c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 140              	.LVL5:
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    /* Return function status */
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 141              		.loc 1 246 0
 142 0020 0020     		movs	r0, #0
 143              		@ sp needed
 144              	.LVL6:
 145 0022 10BD     		pop	{r4, pc}
 146              		.cfi_endproc
 147              	.LFE39:
 149              		.section	.text.HAL_Init,"ax",%progbits
 150              		.align	2
 151              		.global	HAL_Init
 152              		.code	16
ARM GAS  D:\App\cygwin\tmp\ccHTI0vd.s 			page 8


 153              		.thumb_func
 155              	HAL_Init:
 156              	.LFB35:
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 157              		.loc 1 156 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161 0000 10B5     		push	{r4, lr}
 162              	.LCFI2:
 163              		.cfi_def_cfa_offset 8
 164              		.cfi_offset 4, -8
 165              		.cfi_offset 14, -4
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 166              		.loc 1 159 0
 167 0002 064A     		ldr	r2, .L8
 168 0004 1168     		ldr	r1, [r2]
 169 0006 1023     		movs	r3, #16
 170 0008 0B43     		orrs	r3, r1
 171 000a 1360     		str	r3, [r2]
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 172              		.loc 1 164 0
 173 000c 0020     		movs	r0, #0
 174 000e FFF7FEFF 		bl	HAL_InitTick
 175              	.LVL7:
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 176              		.loc 1 167 0
 177 0012 FFF7FEFF 		bl	HAL_MspInit
 178              	.LVL8:
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 179              		.loc 1 171 0
 180 0016 0020     		movs	r0, #0
 181              		@ sp needed
 182 0018 10BD     		pop	{r4, pc}
 183              	.L9:
 184 001a C046     		.align	2
 185              	.L8:
 186 001c 00200240 		.word	1073881088
 187              		.cfi_endproc
 188              	.LFE35:
 190              		.section	.text.HAL_IncTick,"ax",%progbits
 191              		.align	2
 192              		.weak	HAL_IncTick
 193              		.code	16
 194              		.thumb_func
 196              	HAL_IncTick:
 197              	.LFB40:
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    HAL Control functions
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
ARM GAS  D:\App\cygwin\tmp\ccHTI0vd.s 			page 9


 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                       ##### HAL Control functions #####
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]  This section provides functions allowing to:
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a tick value in millisecond
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a blocking delay in millisecond
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Suspend the time base source interrupt
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Resume the time base source interrupt
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the HAL API driver version
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device identifier
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device revision identifier
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during Sleep mode
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        used as application time base.
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       in Systick ISR.
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_IncTick(void)
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 198              		.loc 1 285 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uwTick++;
 203              		.loc 1 286 0
 204 0000 024A     		ldr	r2, .L11
 205 0002 1368     		ldr	r3, [r2]
 206 0004 0133     		adds	r3, r3, #1
 207 0006 1360     		str	r3, [r2]
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 208              		.loc 1 287 0
 209              		@ sp needed
 210 0008 7047     		bx	lr
 211              	.L12:
 212 000a C046     		.align	2
 213              	.L11:
 214 000c 00000000 		.word	uwTick
 215              		.cfi_endproc
 216              	.LFE40:
 218              		.section	.text.HAL_GetTick,"ax",%progbits
 219              		.align	2
 220              		.weak	HAL_GetTick
 221              		.code	16
 222              		.thumb_func
 224              	HAL_GetTick:
 225              	.LFB41:
ARM GAS  D:\App\cygwin\tmp\ccHTI0vd.s 			page 10


 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Provides a tick value in millisecond.
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note   This function is declared as __weak  to be overwritten  in case of other 
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick value
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 226              		.loc 1 296 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTick;
 231              		.loc 1 297 0
 232 0000 014B     		ldr	r3, .L14
 233 0002 1868     		ldr	r0, [r3]
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 234              		.loc 1 298 0
 235              		@ sp needed
 236 0004 7047     		bx	lr
 237              	.L15:
 238 0006 C046     		.align	2
 239              	.L14:
 240 0008 00000000 		.word	uwTick
 241              		.cfi_endproc
 242              	.LFE41:
 244              		.section	.text.HAL_Delay,"ax",%progbits
 245              		.align	2
 246              		.weak	HAL_Delay
 247              		.code	16
 248              		.thumb_func
 250              	HAL_Delay:
 251              	.LFB42:
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function provides accurate delay (in milliseconds) based 
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        on variable incremented.
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is incremented.
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note ThiS function is declared as __weak to be overwritten in case of other
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_Delay(__IO uint32_t Delay)
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 252              		.loc 1 312 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 8
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              	.LVL9:
 257 0000 30B5     		push	{r4, r5, lr}
 258              	.LCFI3:
 259              		.cfi_def_cfa_offset 12
ARM GAS  D:\App\cygwin\tmp\ccHTI0vd.s 			page 11


 260              		.cfi_offset 4, -12
 261              		.cfi_offset 5, -8
 262              		.cfi_offset 14, -4
 263 0002 83B0     		sub	sp, sp, #12
 264              	.LCFI4:
 265              		.cfi_def_cfa_offset 24
 266 0004 0190     		str	r0, [sp, #4]
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 267              		.loc 1 313 0
 268 0006 FFF7FEFF 		bl	HAL_GetTick
 269              	.LVL10:
 270 000a 0500     		movs	r5, r0
 271              	.LVL11:
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t wait = Delay;
 272              		.loc 1 314 0
 273 000c 019C     		ldr	r4, [sp, #4]
 274              	.LVL12:
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Add a period to guarantee minimum wait */
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 275              		.loc 1 317 0
 276 000e 631C     		adds	r3, r4, #1
 277 0010 00D0     		beq	.L18
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****      wait++;
 278              		.loc 1 319 0
 279 0012 0134     		adds	r4, r4, #1
 280              	.LVL13:
 281              	.L18:
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 282              		.loc 1 322 0 discriminator 1
 283 0014 FFF7FEFF 		bl	HAL_GetTick
 284              	.LVL14:
 285 0018 401B     		subs	r0, r0, r5
 286 001a A042     		cmp	r0, r4
 287 001c FAD3     		bcc	.L18
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 288              		.loc 1 325 0
 289 001e 03B0     		add	sp, sp, #12
 290              		@ sp needed
 291              	.LVL15:
 292              	.LVL16:
 293 0020 30BD     		pop	{r4, r5, pc}
 294              		.cfi_endproc
 295              	.LFE42:
 297 0022 C046     		.section	.text.HAL_SuspendTick,"ax",%progbits
 298              		.align	2
 299              		.weak	HAL_SuspendTick
 300              		.code	16
 301              		.thumb_func
 303              	HAL_SuspendTick:
 304              	.LFB43:
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
ARM GAS  D:\App\cygwin\tmp\ccHTI0vd.s 			page 12


 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Suspend Tick increment.
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be disabled and so Tick increment 
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is suspended.
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_SuspendTick(void)
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 305              		.loc 1 339 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Disable SysTick Interrupt */
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 310              		.loc 1 341 0
 311 0000 024A     		ldr	r2, .L20
 312 0002 1368     		ldr	r3, [r2]
 313 0004 0221     		movs	r1, #2
 314 0006 8B43     		bics	r3, r1
 315 0008 1360     		str	r3, [r2]
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 316              		.loc 1 342 0
 317              		@ sp needed
 318 000a 7047     		bx	lr
 319              	.L21:
 320              		.align	2
 321              	.L20:
 322 000c 10E000E0 		.word	-536813552
 323              		.cfi_endproc
 324              	.LFE43:
 326              		.section	.text.HAL_ResumeTick,"ax",%progbits
 327              		.align	2
 328              		.weak	HAL_ResumeTick
 329              		.code	16
 330              		.thumb_func
 332              	HAL_ResumeTick:
 333              	.LFB44:
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Resume Tick increment.
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be enabled and so Tick increment 
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is resumed.
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak  to be overwritten  in case of other
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_ResumeTick(void)
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 334              		.loc 1 355 0
ARM GAS  D:\App\cygwin\tmp\ccHTI0vd.s 			page 13


 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              		@ link register save eliminated.
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Enable SysTick Interrupt */
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 339              		.loc 1 357 0
 340 0000 024A     		ldr	r2, .L23
 341 0002 1168     		ldr	r1, [r2]
 342 0004 0223     		movs	r3, #2
 343 0006 0B43     		orrs	r3, r1
 344 0008 1360     		str	r3, [r2]
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 345              		.loc 1 358 0
 346              		@ sp needed
 347 000a 7047     		bx	lr
 348              	.L24:
 349              		.align	2
 350              	.L23:
 351 000c 10E000E0 		.word	-536813552
 352              		.cfi_endproc
 353              	.LFE44:
 355              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 356              		.align	2
 357              		.global	HAL_GetHalVersion
 358              		.code	16
 359              		.thumb_func
 361              	HAL_GetHalVersion:
 362              	.LFB45:
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This method returns the HAL revision
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 363              		.loc 1 365 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367              		@ link register save eliminated.
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  return __STM32F0xx_HAL_VERSION;
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 368              		.loc 1 367 0
 369 0000 0048     		ldr	r0, .L26
 370              		@ sp needed
 371 0002 7047     		bx	lr
 372              	.L27:
 373              		.align	2
 374              	.L26:
 375 0004 00020701 		.word	17236480
 376              		.cfi_endproc
 377              	.LFE45:
 379              		.section	.text.HAL_GetREVID,"ax",%progbits
 380              		.align	2
 381              		.global	HAL_GetREVID
 382              		.code	16
ARM GAS  D:\App\cygwin\tmp\ccHTI0vd.s 			page 14


 383              		.thumb_func
 385              	HAL_GetREVID:
 386              	.LFB46:
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device revision identifier.
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device revision identifier
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetREVID(void)
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 387              		.loc 1 374 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 392              		.loc 1 375 0
 393 0000 014B     		ldr	r3, .L29
 394 0002 1868     		ldr	r0, [r3]
 395 0004 000C     		lsrs	r0, r0, #16
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 396              		.loc 1 376 0
 397              		@ sp needed
 398 0006 7047     		bx	lr
 399              	.L30:
 400              		.align	2
 401              	.L29:
 402 0008 00580140 		.word	1073829888
 403              		.cfi_endproc
 404              	.LFE46:
 406              		.section	.text.HAL_GetDEVID,"ax",%progbits
 407              		.align	2
 408              		.global	HAL_GetDEVID
 409              		.code	16
 410              		.thumb_func
 412              	HAL_GetDEVID:
 413              	.LFB47:
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device identifier.
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetDEVID(void)
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 414              		.loc 1 383 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 419              		.loc 1 384 0
 420 0000 024B     		ldr	r3, .L32
 421 0002 1868     		ldr	r0, [r3]
 422 0004 0005     		lsls	r0, r0, #20
 423 0006 000D     		lsrs	r0, r0, #20
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 424              		.loc 1 385 0
ARM GAS  D:\App\cygwin\tmp\ccHTI0vd.s 			page 15


 425              		@ sp needed
 426 0008 7047     		bx	lr
 427              	.L33:
 428 000a C046     		.align	2
 429              	.L32:
 430 000c 00580140 		.word	1073829888
 431              		.cfi_endproc
 432              	.LFE47:
 434              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 435              		.align	2
 436              		.global	HAL_GetUIDw0
 437              		.code	16
 438              		.thumb_func
 440              	HAL_GetUIDw0:
 441              	.LFB48:
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 442              		.loc 1 392 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              		@ link register save eliminated.
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 447              		.loc 1 393 0
 448 0000 014B     		ldr	r3, .L35
 449 0002 1868     		ldr	r0, [r3]
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 450              		.loc 1 394 0
 451              		@ sp needed
 452 0004 7047     		bx	lr
 453              	.L36:
 454 0006 C046     		.align	2
 455              	.L35:
 456 0008 ACF7FF1F 		.word	536868780
 457              		.cfi_endproc
 458              	.LFE48:
 460              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 461              		.align	2
 462              		.global	HAL_GetUIDw1
 463              		.code	16
 464              		.thumb_func
 466              	HAL_GetUIDw1:
 467              	.LFB49:
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 468              		.loc 1 401 0
 469              		.cfi_startproc
ARM GAS  D:\App\cygwin\tmp\ccHTI0vd.s 			page 16


 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 473              		.loc 1 402 0
 474 0000 014B     		ldr	r3, .L38
 475 0002 1868     		ldr	r0, [r3]
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 476              		.loc 1 403 0
 477              		@ sp needed
 478 0004 7047     		bx	lr
 479              	.L39:
 480 0006 C046     		.align	2
 481              	.L38:
 482 0008 B0F7FF1F 		.word	536868784
 483              		.cfi_endproc
 484              	.LFE49:
 486              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 487              		.align	2
 488              		.global	HAL_GetUIDw2
 489              		.code	16
 490              		.thumb_func
 492              	HAL_GetUIDw2:
 493              	.LFB50:
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 494              		.loc 1 410 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498              		@ link register save eliminated.
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 499              		.loc 1 411 0
 500 0000 014B     		ldr	r3, .L41
 501 0002 1868     		ldr	r0, [r3]
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 502              		.loc 1 412 0
 503              		@ sp needed
 504 0004 7047     		bx	lr
 505              	.L42:
 506 0006 C046     		.align	2
 507              	.L41:
 508 0008 B4F7FF1F 		.word	536868788
 509              		.cfi_endproc
 510              	.LFE50:
 512              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 513              		.align	2
 514              		.global	HAL_DBGMCU_EnableDBGStopMode
 515              		.code	16
 516              		.thumb_func
 518              	HAL_DBGMCU_EnableDBGStopMode:
 519              	.LFB51:
ARM GAS  D:\App\cygwin\tmp\ccHTI0vd.s 			page 17


 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode       
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 520              		.loc 1 419 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 525              		.loc 1 420 0
 526 0000 024A     		ldr	r2, .L44
 527 0002 5168     		ldr	r1, [r2, #4]
 528 0004 0223     		movs	r3, #2
 529 0006 0B43     		orrs	r3, r1
 530 0008 5360     		str	r3, [r2, #4]
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 531              		.loc 1 421 0
 532              		@ sp needed
 533 000a 7047     		bx	lr
 534              	.L45:
 535              		.align	2
 536              	.L44:
 537 000c 00580140 		.word	1073829888
 538              		.cfi_endproc
 539              	.LFE51:
 541              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 542              		.align	2
 543              		.global	HAL_DBGMCU_DisableDBGStopMode
 544              		.code	16
 545              		.thumb_func
 547              	HAL_DBGMCU_DisableDBGStopMode:
 548              	.LFB52:
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode       
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 549              		.loc 1 428 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553              		@ link register save eliminated.
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 554              		.loc 1 429 0
 555 0000 024A     		ldr	r2, .L47
 556 0002 5368     		ldr	r3, [r2, #4]
 557 0004 0221     		movs	r1, #2
 558 0006 8B43     		bics	r3, r1
 559 0008 5360     		str	r3, [r2, #4]
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 560              		.loc 1 430 0
ARM GAS  D:\App\cygwin\tmp\ccHTI0vd.s 			page 18


 561              		@ sp needed
 562 000a 7047     		bx	lr
 563              	.L48:
 564              		.align	2
 565              	.L47:
 566 000c 00580140 		.word	1073829888
 567              		.cfi_endproc
 568              	.LFE52:
 570              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 571              		.align	2
 572              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 573              		.code	16
 574              		.thumb_func
 576              	HAL_DBGMCU_EnableDBGStandbyMode:
 577              	.LFB53:
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode       
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 578              		.loc 1 437 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              		@ link register save eliminated.
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 583              		.loc 1 438 0
 584 0000 024A     		ldr	r2, .L50
 585 0002 5168     		ldr	r1, [r2, #4]
 586 0004 0423     		movs	r3, #4
 587 0006 0B43     		orrs	r3, r1
 588 0008 5360     		str	r3, [r2, #4]
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 589              		.loc 1 439 0
 590              		@ sp needed
 591 000a 7047     		bx	lr
 592              	.L51:
 593              		.align	2
 594              	.L50:
 595 000c 00580140 		.word	1073829888
 596              		.cfi_endproc
 597              	.LFE53:
 599              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 600              		.align	2
 601              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 602              		.code	16
 603              		.thumb_func
 605              	HAL_DBGMCU_DisableDBGStandbyMode:
 606              	.LFB54:
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode       
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
ARM GAS  D:\App\cygwin\tmp\ccHTI0vd.s 			page 19


 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 607              		.loc 1 446 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              		@ link register save eliminated.
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 612              		.loc 1 447 0
 613 0000 024A     		ldr	r2, .L53
 614 0002 5368     		ldr	r3, [r2, #4]
 615 0004 0421     		movs	r1, #4
 616 0006 8B43     		bics	r3, r1
 617 0008 5360     		str	r3, [r2, #4]
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 618              		.loc 1 448 0
 619              		@ sp needed
 620 000a 7047     		bx	lr
 621              	.L54:
 622              		.align	2
 623              	.L53:
 624 000c 00580140 		.word	1073829888
 625              		.cfi_endproc
 626              	.LFE54:
 628              		.comm	uwTick,4,4
 629              		.text
 630              	.Letext0:
 631              		.file 2 "d:\\app\\armgcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 632              		.file 3 "d:\\app\\armgcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 633              		.file 4 "Drivers/CMSIS/Include/core_cm0.h"
 634              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h"
 635              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 636              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 637              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  D:\App\cygwin\tmp\ccHTI0vd.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal.c
D:\App\cygwin\tmp\ccHTI0vd.s:20     .text.HAL_MspInit:00000000 $t
D:\App\cygwin\tmp\ccHTI0vd.s:25     .text.HAL_MspInit:00000000 HAL_MspInit
D:\App\cygwin\tmp\ccHTI0vd.s:40     .text.HAL_MspDeInit:00000000 $t
D:\App\cygwin\tmp\ccHTI0vd.s:45     .text.HAL_MspDeInit:00000000 HAL_MspDeInit
D:\App\cygwin\tmp\ccHTI0vd.s:59     .text.HAL_DeInit:00000000 $t
D:\App\cygwin\tmp\ccHTI0vd.s:64     .text.HAL_DeInit:00000000 HAL_DeInit
D:\App\cygwin\tmp\ccHTI0vd.s:101    .text.HAL_DeInit:00000020 $d
D:\App\cygwin\tmp\ccHTI0vd.s:107    .text.HAL_InitTick:00000000 $t
D:\App\cygwin\tmp\ccHTI0vd.s:112    .text.HAL_InitTick:00000000 HAL_InitTick
D:\App\cygwin\tmp\ccHTI0vd.s:150    .text.HAL_Init:00000000 $t
D:\App\cygwin\tmp\ccHTI0vd.s:155    .text.HAL_Init:00000000 HAL_Init
D:\App\cygwin\tmp\ccHTI0vd.s:186    .text.HAL_Init:0000001c $d
D:\App\cygwin\tmp\ccHTI0vd.s:191    .text.HAL_IncTick:00000000 $t
D:\App\cygwin\tmp\ccHTI0vd.s:196    .text.HAL_IncTick:00000000 HAL_IncTick
D:\App\cygwin\tmp\ccHTI0vd.s:214    .text.HAL_IncTick:0000000c $d
                            *COM*:00000004 uwTick
D:\App\cygwin\tmp\ccHTI0vd.s:219    .text.HAL_GetTick:00000000 $t
D:\App\cygwin\tmp\ccHTI0vd.s:224    .text.HAL_GetTick:00000000 HAL_GetTick
D:\App\cygwin\tmp\ccHTI0vd.s:240    .text.HAL_GetTick:00000008 $d
D:\App\cygwin\tmp\ccHTI0vd.s:245    .text.HAL_Delay:00000000 $t
D:\App\cygwin\tmp\ccHTI0vd.s:250    .text.HAL_Delay:00000000 HAL_Delay
D:\App\cygwin\tmp\ccHTI0vd.s:298    .text.HAL_SuspendTick:00000000 $t
D:\App\cygwin\tmp\ccHTI0vd.s:303    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
D:\App\cygwin\tmp\ccHTI0vd.s:322    .text.HAL_SuspendTick:0000000c $d
D:\App\cygwin\tmp\ccHTI0vd.s:327    .text.HAL_ResumeTick:00000000 $t
D:\App\cygwin\tmp\ccHTI0vd.s:332    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
D:\App\cygwin\tmp\ccHTI0vd.s:351    .text.HAL_ResumeTick:0000000c $d
D:\App\cygwin\tmp\ccHTI0vd.s:356    .text.HAL_GetHalVersion:00000000 $t
D:\App\cygwin\tmp\ccHTI0vd.s:361    .text.HAL_GetHalVersion:00000000 HAL_GetHalVersion
D:\App\cygwin\tmp\ccHTI0vd.s:375    .text.HAL_GetHalVersion:00000004 $d
D:\App\cygwin\tmp\ccHTI0vd.s:380    .text.HAL_GetREVID:00000000 $t
D:\App\cygwin\tmp\ccHTI0vd.s:385    .text.HAL_GetREVID:00000000 HAL_GetREVID
D:\App\cygwin\tmp\ccHTI0vd.s:402    .text.HAL_GetREVID:00000008 $d
D:\App\cygwin\tmp\ccHTI0vd.s:407    .text.HAL_GetDEVID:00000000 $t
D:\App\cygwin\tmp\ccHTI0vd.s:412    .text.HAL_GetDEVID:00000000 HAL_GetDEVID
D:\App\cygwin\tmp\ccHTI0vd.s:430    .text.HAL_GetDEVID:0000000c $d
D:\App\cygwin\tmp\ccHTI0vd.s:435    .text.HAL_GetUIDw0:00000000 $t
D:\App\cygwin\tmp\ccHTI0vd.s:440    .text.HAL_GetUIDw0:00000000 HAL_GetUIDw0
D:\App\cygwin\tmp\ccHTI0vd.s:456    .text.HAL_GetUIDw0:00000008 $d
D:\App\cygwin\tmp\ccHTI0vd.s:461    .text.HAL_GetUIDw1:00000000 $t
D:\App\cygwin\tmp\ccHTI0vd.s:466    .text.HAL_GetUIDw1:00000000 HAL_GetUIDw1
D:\App\cygwin\tmp\ccHTI0vd.s:482    .text.HAL_GetUIDw1:00000008 $d
D:\App\cygwin\tmp\ccHTI0vd.s:487    .text.HAL_GetUIDw2:00000000 $t
D:\App\cygwin\tmp\ccHTI0vd.s:492    .text.HAL_GetUIDw2:00000000 HAL_GetUIDw2
D:\App\cygwin\tmp\ccHTI0vd.s:508    .text.HAL_GetUIDw2:00000008 $d
D:\App\cygwin\tmp\ccHTI0vd.s:513    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 $t
D:\App\cygwin\tmp\ccHTI0vd.s:518    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 HAL_DBGMCU_EnableDBGStopMode
D:\App\cygwin\tmp\ccHTI0vd.s:537    .text.HAL_DBGMCU_EnableDBGStopMode:0000000c $d
D:\App\cygwin\tmp\ccHTI0vd.s:542    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 $t
D:\App\cygwin\tmp\ccHTI0vd.s:547    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 HAL_DBGMCU_DisableDBGStopMode
D:\App\cygwin\tmp\ccHTI0vd.s:566    .text.HAL_DBGMCU_DisableDBGStopMode:0000000c $d
D:\App\cygwin\tmp\ccHTI0vd.s:571    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 $t
D:\App\cygwin\tmp\ccHTI0vd.s:576    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 HAL_DBGMCU_EnableDBGStandbyMode
D:\App\cygwin\tmp\ccHTI0vd.s:595    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000c $d
D:\App\cygwin\tmp\ccHTI0vd.s:600    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 $t
ARM GAS  D:\App\cygwin\tmp\ccHTI0vd.s 			page 21


D:\App\cygwin\tmp\ccHTI0vd.s:605    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 HAL_DBGMCU_DisableDBGStandbyMode
D:\App\cygwin\tmp\ccHTI0vd.s:624    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
