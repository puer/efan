ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f0xx_hal_adc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_ConversionStop,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  24              	ADC_ConversionStop:
  25              	.LFB59:
  26              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @file    stm32f0xx_hal_adc.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC)
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *             ++ Initialization and Configuration of ADC
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *           + Operation functions
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *             ++ Start, stop, get result of conversions of regular
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *                group, using 3 possible modes: polling, interruption or DMA.
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *           + Control functions
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *             ++ Channels configuration on regular group
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *             ++ Analog Watchdog configuration
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *           + State functions
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *             ++ ADC state machine management
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *             ++ Interrupts and flags management
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *          Other functions (extended functions) are available in file 
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *          "stm32f0xx_hal_adc_ex.c".
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   @verbatim
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   ==============================================================================
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                      ##### ADC peripheral features #####
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   ==============================================================================
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   [..]
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   (+) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of 
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       analog watchdog or overrun events.
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   (+) Single and continuous conversion modes.
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 2


  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   (+) Programmable sampling time (common for all channels)
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   (+) ADC conversion of regular group.
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   (+) ADC calibration
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   (+) ADC supply requirements: 2.4 V to 3.6 V at full speed and down to 1.8 V at 
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       slower speed.
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to 
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       Vdda or to an external voltage reference).
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                      ##### How to use this driver #####
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   ==============================================================================
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     [..]
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      ============================================================
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      [..]
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     (#) Enable the ADC interface
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (++) As prerequisite, ADC clock must be configured at RCC top level.
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****            Caution: On STM32F0, ADC clock frequency max is 14MHz (refer
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                     to device datasheet).
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                     Therefore, ADC clock prescaler must be configured in 
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                     function of ADC clock source frequency to remain below
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                     this maximum frequency.
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         (++) Two clock settings are mandatory: 
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                    Two possible clock sources: synchronous clock derived from APB clock
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                    or asynchronous clock derived from ADC dedicated HSI RC oscillator
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                    14MHz.
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                    If asynchronous clock is selected, parameter "HSI14State" must be set either:
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                    - to "...HSI14State = RCC_HSI14_ADC_CONTROL" to let the ADC control 
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                      the HSI14 oscillator enable/disable (if not used to supply the main 
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                      system clock): feature used if ADC mode LowPowerAutoPowerOff is 
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                      enabled.
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                    - to "...HSI14State = RCC_HSI14_ON" to maintain the HSI14 oscillator
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                      always enabled: can be used to supply the main system clock.
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****              (+++) Example:
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                    other device clock parameters configuration:
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                (+++) __HAL_RCC_ADC1_CLK_ENABLE();                         (mandatory)
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 3


  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                HI14 enable or let under control of ADC:           (optional: if asynchronous clock 
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                (+++) RCC_OscInitTypeDef   RCC_OscInitStructure;
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI14;
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSI14CalibrationValue = RCC_HSI14CALIBRATION_DEFAULT;
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSI14State = RCC_HSI14_ADC_CONTROL;
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                (+++) RCC_OscInitStructure.PLL...   (optional if used for system clock)
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     (#) ADC pins configuration
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****               using function HAL_GPIO_Init()
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****          (++) Configure the NVIC for ADC
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler() 
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****               into the function of corresponding ADC interruption vector 
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****               ADCx_IRQHandler().
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****               using function HAL_DMA_Init().
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler() 
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****               into the function of corresponding DMA interruption vector 
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      *** Configuration of ADC, group regular, channels parameters ***
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      ================================================================
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      [..]
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         using function HAL_ADC_Init().
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number, 
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         monitored, thresholds, ...)
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      *** Execution of ADC conversions ***
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      ====================================
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      [..]
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         conversion accuracy
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 4


 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         transfer by DMA.
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         (++) ADC conversion by polling:
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                 using function HAL_ADC_Start()
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           (+++) Wait for ADC conversion completion 
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           (+++) Retrieve conversion results 
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         (++) ADC conversion by interruption: 
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                 (this function must be implemented in user program)
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           (+++) Retrieve conversion results 
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                 (these functions must be implemented in user program)
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                 destination variable address.
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      [..]
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      *** Deinitialization of ADC ***
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      ============================================================
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      [..]
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     (#) Disable the ADC interface
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         (++) ADC clock disable
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****              (+++) Example:
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                    other device clock parameters configuration:
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 5


 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI14;
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSI14State = RCC_HSI14_OFF; (if not used for system clock
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     (#) ADC pins configuration
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****          (++) Deinitialize the DMA
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****               using function HAL_DMA_Init().
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     [..]
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     @endverbatim
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   ******************************************************************************
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @attention
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * Redistribution and use in source and binary forms, with or without modification,
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * are permitted provided that the following conditions are met:
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *      this list of conditions and the following disclaimer.
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *      this list of conditions and the following disclaimer in the documentation
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *      and/or other materials provided with the distribution.
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *      may be used to endorse or promote products derived from this software
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *      without specific prior written permission.
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   ******************************************************************************  
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** #include "stm32f0xx_hal.h"
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /** @addtogroup STM32F0xx_HAL_Driver
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @{
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 6


 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /** @defgroup ADC ADC
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief ADC HAL module driver
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @{
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @{
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Fixed timeout values for ADC calibration, enable settling time, disable  */
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* settling time.                                                           */
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Values defined to be higher than worst cases: low clock frequency,       */
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* maximum prescaler.                                                       */
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Ex of profile low frequency : Clock source at 0.1 MHz, ADC clock         */
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* prescaler 4, sampling time 7.5 ADC clock cycles, resolution 12 bits.     */
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Unit: ms                                                                 */
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   #define ADC_ENABLE_TIMEOUT             ( 2U)
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   #define ADC_DISABLE_TIMEOUT            ( 2U)
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   #define ADC_STOP_CONVERSION_TIMEOUT    ( 2U)
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Delay for ADC stabilization time.                                        */
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Maximum delay is 1us (refer to device datasheet, parameter tSTAB).       */
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Unit: us                                                                 */
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   #define ADC_STAB_DELAY_US               ( 1U)
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Delay for temperature sensor stabilization time.                         */
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Maximum delay is 10us (refer to device datasheet, parameter tSTART).     */
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Unit: us                                                                 */
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   #define ADC_TEMPSENSOR_DELAY_US         ( 10U)
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     * @}
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     */
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @{
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** static HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc);
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** static HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef* hadc);
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** static HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef* hadc);
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma);
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma);
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma);
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     * @}
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     */
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /* Exported functions ---------------------------------------------------------*/
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 7


 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @{
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization/de-initialization functions 
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****  *  @brief    Initialization and Configuration functions 
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****  *
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** @verbatim    
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****  ===============================================================================
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****  ===============================================================================
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (+) Initialize and configure the ADC. 
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (+) De-initialize the ADC
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** @endverbatim
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @{
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Initializes the ADC peripheral and regular group according to  
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         depending on both possible clock sources: APB clock of HSI clock.
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         See commented example code below that can be copied and uncommented 
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         into HAL_ADC_MspInit().
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef  
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC  
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         before HAL_ADC_Init().
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         For parameters constraints, see comments of structure 
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire 
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments 
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval HAL status
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   uint32_t tmpCFGR1 = 0U;
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check ADC handle */
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if(hadc == NULL)
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     return HAL_ERROR;
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check the parameters */
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign)); 
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 8


 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));   
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));   
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoPowerOff));
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* As prerequisite, into HAL_ADC_MspInit(), ADC clock must be configured    */
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* at RCC top level depending on both possible clock sources:               */
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* APB clock or HSI clock.                                                  */
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Refer to header of this file for more details on clock enabling procedure*/
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* - ADC voltage regulator enable                                           */
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Initialize ADC error code */
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Allocate lock resource and initialize it */
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Init the low level hardware */
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* correctly completed.                                                     */
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* and if there is no conversion on going on regular group (ADC can be      */ 
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* enabled anyway, in case of call of this function to update a parameter   */
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* on the fly).                                                             */
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) &&
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (tmp_hal_status == HAL_OK)                                &&
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)          )
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Set ADC state */
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*  - ADC clock mode                                                      */
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*  - ADC clock prescaler                                                 */
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*  - ADC resolution                                                      */
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (ADC_IS_ENABLE(hadc) == RESET)
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Some parameters of this register are not reset, since they are set   */
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* by other functions and must be kept in case of usage of this         */
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* without needing to reconfigure all other ADC groups/channels         */
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* parameters):                                                         */
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 9


 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /*     (set into HAL_ADC_ConfigChannel() )                              */
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Configuration of ADC resolution                                      */
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR1,
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  ADC_CFGR1_RES        ,
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  hadc->Init.Resolution );
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Configuration of ADC clock mode: clock source AHB or HSI with        */
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* selectable prescaler                                                 */
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR2    ,
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  ADC_CFGR2_CKMODE         ,
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  hadc->Init.ClockPrescaler );
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*  - discontinuous mode                                                  */
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*  - LowPowerAutoWait mode                                               */
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*  - LowPowerAutoPowerOff mode                                           */
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*  - continuous conversion mode                                          */
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*  - overrun                                                             */
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*  - external trigger to start conversion                                */
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*  - external trigger polarity                                           */
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*  - data alignment                                                      */
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*  - resolution                                                          */
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*  - scan direction                                                      */
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*  - DMA continuous request                                              */
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     hadc->Instance->CFGR1 &= ~( ADC_CFGR1_DISCEN  |
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_CFGR1_AUTOFF  |
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_CFGR1_AUTDLY  |
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_CFGR1_CONT    |
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_CFGR1_OVRMOD  |
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_CFGR1_EXTSEL  |
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_CFGR1_EXTEN   |
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_CFGR1_ALIGN   |
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_CFGR1_SCANDIR |
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_CFGR1_DMACFG   );
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     tmpCFGR1 |= (ADC_CFGR1_AUTOWAIT(hadc->Init.LowPowerAutoWait)        |
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  ADC_CFGR1_AUTOOFF(hadc->Init.LowPowerAutoPowerOff)     |
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  ADC_CFGR1_CONTINUOUS(hadc->Init.ContinuousConvMode)    |
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                  |
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  hadc->Init.DataAlign                                   |
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  ADC_SCANDIR(hadc->Init.ScanConvMode)                   |
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  ADC_CFGR1_DMACONTREQ(hadc->Init.DMAContinuousRequests)  );
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Enable discontinuous mode only if continuous mode is disabled */
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       if (hadc->Init.ContinuousConvMode == DISABLE)
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* Enable the selected ADC group regular discontinuous mode */
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         tmpCFGR1 |= ADC_CFGR1_DISCEN;
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       else
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* ADC regular group discontinuous was intended to be enabled,        */
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 10


 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* but ADC regular group modes continuous and sequencer discontinuous */
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* cannot be enabled simultaneously.                                  */
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* Update ADC state machine to error */
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* Set ADC error code to ADC IP internal error */
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Enable external trigger if trigger selection is different of software  */
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* start.                                                                 */
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*       software start.                                                  */
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       tmpCFGR1 |= ( hadc->Init.ExternalTrigConv    |
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                     hadc->Init.ExternalTrigConvEdge );
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Update ADC configuration register with previous settings */
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     hadc->Instance->CFGR1 |= tmpCFGR1;
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Channel sampling time configuration */
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Management of parameters "SamplingTimeCommon" and "SamplingTime"       */
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* (obsolete): sampling time set in this function if parameter            */
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*  "SamplingTimeCommon" has been set to a valid sampling time.           */
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Otherwise, sampling time is set into ADC channel initialization        */
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* structure with parameter "SamplingTime" (obsolete).                    */
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Channel sampling time configuration */
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Clear the old sample time */
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       hadc->Instance->SMPR &= ~(ADC_SMPR_SMP);
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Set the new sample time */
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       hadc->Instance->SMPR |= ADC_SMPR_SET(hadc->Init.SamplingTimeCommon);
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Check back that ADC registers have effectively been configured to      */
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* ensure of no potential problem of ADC core IP clocking.                */
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Check through register CFGR1 (excluding analog watchdog configuration: */
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* set into separate dedicated function, and bits of ADC resolution set   */
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* out of temporary variable 'tmpCFGR1').                                 */
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if ((hadc->Instance->CFGR1 & ~(ADC_CFGR1_AWDCH | ADC_CFGR1_AWDEN | ADC_CFGR1_AWDSGL | ADC_CFGR1
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****          == tmpCFGR1)
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Set ADC error code to none */
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Set the ADC state */
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 11


 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     else
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Update ADC state machine to error */
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_ERROR_INTERNAL);
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Set ADC error code to ADC IP internal error */
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   else
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Update ADC state machine to error */
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Return function status */
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   return tmp_hal_status;
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done 
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is  
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behaviour in
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same 
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         common group is still running.
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval HAL status
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check ADC handle */
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if(hadc == NULL)
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      return HAL_ERROR;
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check the parameters */
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Set ADC state */
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Stop potential conversion on going, on regular group */
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 12


 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {   
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Disable the ADC peripheral */
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (tmp_hal_status != HAL_ERROR)
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Change ADC state */
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_READY;
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* correctly completed.                                                     */
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if (tmp_hal_status != HAL_ERROR)
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* ========== Reset ADC registers ========== */
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Reset register IER */
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD   | ADC_IT_OVR  |
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_IT_EOS   | ADC_IT_EOC  |
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_IT_EOSMP | ADC_IT_RDY   ) );
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Reset register ISR */
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD   | ADC_FLAG_OVR  |
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_FLAG_EOSMP | ADC_FLAG_RDY   ) );
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Reset register CR */
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Bits ADC_CR_ADCAL, ADC_CR_ADSTP, ADC_CR_ADSTART are in access mode     */
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* "read-set": no direct reset applicable.                                */
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Reset register CFGR1 */
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     hadc->Instance->CFGR1 &= ~(ADC_CFGR1_AWDCH   | ADC_CFGR1_AWDEN  | ADC_CFGR1_AWDSGL | ADC_CFGR1_
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                ADC_CFGR1_EXTEN   | ADC_CFGR1_EXTSEL | ADC_CFGR1_ALIGN  | ADC_CFGR1_
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                ADC_CFGR1_SCANDIR | ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN              
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Reset register CFGR2 */
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Note: Update of ADC clock mode is conditioned to ADC state disabled:   */
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*       already done above.                                              */
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     hadc->Instance->CFGR2 &= ~ADC_CFGR2_CKMODE;
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Reset register SMPR */
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     hadc->Instance->SMPR &= ~ADC_SMPR_SMP;
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Reset register TR1 */
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     hadc->Instance->TR &= ~(ADC_TR_HT | ADC_TR_LT);
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Reset register CHSELR */
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     hadc->Instance->CHSELR &= ~(ADC_CHSELR_CHSEL18 | ADC_CHSELR_CHSEL17 | ADC_CHSELR_CHSEL16 |
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_CHSELR_CHSEL15 | ADC_CHSELR_CHSEL14 | ADC_CHSELR_CHSEL13 | ADC_
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_CHSELR_CHSEL11 | ADC_CHSELR_CHSEL10 | ADC_CHSELR_CHSEL9  | ADC_
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 13


 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_CHSELR_CHSEL7  | ADC_CHSELR_CHSEL6  | ADC_CHSELR_CHSEL5  | ADC_
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_CHSELR_CHSEL3  | ADC_CHSELR_CHSEL2  | ADC_CHSELR_CHSEL1  | ADC_
 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Reset register DR */
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* bits in access mode read only, no direct reset applicable*/
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Reset register CCR */
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     ADC->CCR &= ~(ADC_CCR_ALL);
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* ========== Hard reset ADC peripheral ========== */
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Performs a global reset of the entire ADC peripheral: ADC state is     */
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* forced to a similar state after device power-on.                       */
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* If needed, copy-paste and uncomment the following reset code into      */
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* function "void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)":              */
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*                                                                        */
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*  __HAL_RCC_ADC1_FORCE_RESET()                                                  */
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*  __HAL_RCC_ADC1_RELEASE_RESET()                                                */
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* DeInit the low level hardware */
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     HAL_ADC_MspDeInit(hadc);
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Set ADC error code to none */
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Set ADC state */
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_RESET; 
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Process unlocked */
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Return function status */
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   return tmp_hal_status;
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Initializes the ADC MSP.
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval None
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   UNUSED(hadc);
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****    */ 
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  DeInitializes the ADC MSP.
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval None
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 14


 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   UNUSED(hadc);
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****    */ 
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @}
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 IO operation functions
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****  *  @brief    IO operation functions 
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****  *
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** @verbatim   
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****  ===============================================================================
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                       ##### IO operation functions #####
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****  ===============================================================================  
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (+) Start conversion of regular group.
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (+) Stop conversion of regular group.
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (+) Poll for conversion event.
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (+) Get result of regular channel conversion.
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (+) Handle ADC interrupt request
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** @endverbatim
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @{
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Enables ADC, starts conversion of regular group.
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         Interruptions enabled in this function: None.
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval HAL status
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check the parameters */
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Process locked */
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     __HAL_LOCK(hadc);
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Enable the ADC peripheral */
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* If low power mode AutoPowerOff is enabled, power-on/off phases are     */
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* performed automatically by hardware.                                   */
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 15


 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (hadc->Init.LowPowerAutoPowerOff != ENABLE)
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       tmp_hal_status = ADC_Enable(hadc);
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Set ADC state                                                        */
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Reset ADC all error code fields */
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Process unlocked */
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Clear regular group conversion flag and overrun flag */
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC           */
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* operations)                                                          */
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* trigger event.                                                       */
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       hadc->Instance->CR |= ADC_CR_ADSTART;
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   else
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Return function status */
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   return tmp_hal_status;
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group, disable ADC peripheral.
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval HAL status.
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** { 
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check the parameters */
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Process locked */
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 16


 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   __HAL_LOCK(hadc);
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on regular group */
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Set ADC state */
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Process unlocked */
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Return function status */
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   return tmp_hal_status;
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are 
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still 
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval HAL status
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   uint32_t tickstart;
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   uint32_t tmp_Flag_EOC;
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****  
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check the parameters */
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* If end of conversion selected to end of sequence */
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 17


 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     tmp_Flag_EOC = ADC_FLAG_EOS;
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* If end of conversion selected to end of each conversion */
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   else /* ADC_EOC_SINGLE_CONV */
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Verification that ADC configuration is compliant with polling for      */
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* each conversion:                                                       */
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* several ranks and polling for end of each conversion.                  */
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* For code simplicity sake, this particular case is generalized to       */
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN))
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Update ADC state machine to error */
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Process unlocked */
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       return HAL_ERROR;
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     else
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       tmp_Flag_EOC = (ADC_FLAG_EOC | ADC_FLAG_EOS);
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Get tick count */
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   tickstart = HAL_GetTick();
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Wait until End of Conversion flag is raised */
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   while(HAL_IS_BIT_CLR(hadc->Instance->ISR, tmp_Flag_EOC))
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       if((Timeout == 0) || ((HAL_GetTick()-tickstart) > Timeout))
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* Update ADC state machine to timeout */
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* Process unlocked */
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         return HAL_TIMEOUT;
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Update ADC state machine */
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)   )
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 18


 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* If End of Sequence is reached, disable interrupts */
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit             */
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* ADSTART==0 (no conversion on going)                                  */
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* Disable ADC end of single conversion interrupt on group regular */
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* Note: Overrun interrupt was enabled with EOC interrupt in          */
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* HAL_Start_IT(), but is not disabled here because can be used       */
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* by overrun IRQ process below.                                      */
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* Set ADC state */
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY,
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                           HAL_ADC_STATE_READY);
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       else
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* Change ADC state to error state */
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* Set ADC error code to ADC IP internal error */
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Clear end of conversion flag of regular group if low power feature       */
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* "LowPowerAutoWait " is disabled, to not interfere with this feature      */
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* until data register is read using function HAL_ADC_GetValue().           */
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if (hadc->Init.LowPowerAutoWait == DISABLE)
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Clear regular group conversion flag */
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Return ADC state */
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   return HAL_OK;
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Poll for conversion event.
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  EventType the ADC event type.
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *          This parameter can be one of the following values:
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *            @arg ADC_AWD_EVENT: ADC Analog watchdog event
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *            @arg ADC_OVR_EVENT: ADC Overrun event
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval HAL status
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   uint32_t tickstart=0; 
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check the parameters */
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 19


1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Get tick count */
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   tickstart = HAL_GetTick();   
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check selected event flag */
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   while(__HAL_ADC_GET_FLAG(hadc, EventType) == RESET)
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* Update ADC state machine to timeout */
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* Process unlocked */
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         return HAL_TIMEOUT;
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   switch(EventType)
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Analog watchdog (level out of window) event */
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   case ADC_AWD_EVENT:
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Set ADC state */
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     break;
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Overrun event */
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   default: /* Case ADC_OVR_EVENT */
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* If overrun is set to overwrite previous data, overrun event is not     */
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* considered as an error.                                                */
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* overrun ")                                                             */
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Set ADC state */
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Set ADC error code to overrun */
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Clear ADC Overrun flag */
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     break;
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Return ADC state */
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 20


1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   return HAL_OK;
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Enables ADC, starts conversion of regular group with interruption.
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         Interruptions enabled in this function:
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *          - EOC (end of conversion of regular group) or EOS (end of 
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *            sequence of regular group) depending on ADC initialization 
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *            parameter "EOCSelection"
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *          - overrun (if available)
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval HAL status
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check the parameters */
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Process locked */
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     __HAL_LOCK(hadc);
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Enable the ADC peripheral */
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* If low power mode AutoPowerOff is enabled, power-on/off phases are     */
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* performed automatically by hardware.                                   */
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (hadc->Init.LowPowerAutoPowerOff != ENABLE)
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       tmp_hal_status = ADC_Enable(hadc);
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Set ADC state                                                        */
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Reset ADC all error code fields */
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Process unlocked */
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Clear regular group conversion flag and overrun flag */
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC           */
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* operations)                                                          */
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 21


1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Enable ADC end of conversion interrupt */
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Enable ADC overrun interrupt */  
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       switch(hadc->Init.EOCSelection)
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         case ADC_EOC_SEQ_CONV: 
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOS | ADC_IT_OVR));
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           break;
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         default:
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           break;
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* trigger event.                                                       */
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       hadc->Instance->CR |= ADC_CR_ADSTART;
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   else
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }    
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Return function status */
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   return tmp_hal_status;
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group, disable interruption of 
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval HAL status.
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check the parameters */
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Process locked */
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   __HAL_LOCK(hadc);
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on regular group */
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****    
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 22


1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Set ADC state */
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Process unlocked */
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Return function status */
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   return tmp_hal_status;
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Enables ADC, starts conversion of regular group and transfers result
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         through DMA.
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         Interruptions enabled in this function:
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *          - DMA transfer complete
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *          - DMA half transfer
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *          - overrun
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  pData The destination Buffer address.
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  Length The length of data to be transferred from ADC peripheral to memory.
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval None
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check the parameters */
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Process locked */
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     __HAL_LOCK(hadc);
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Enable the ADC peripheral */
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* If low power mode AutoPowerOff is enabled, power-on/off phases are       */
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* performed automatically by hardware.                                     */
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (hadc->Init.LowPowerAutoPowerOff != ENABLE)
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       tmp_hal_status = ADC_Enable(hadc);
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 23


1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Set ADC state                                                        */
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Reset ADC all error code fields */
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Process unlocked */
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Set the DMA transfer complete callback */
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Set the DMA half transfer complete callback */
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Set the DMA error callback */
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC   */
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* start (in case of SW start):                                         */
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Clear regular group conversion flag and overrun flag */
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC           */
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* operations)                                                          */
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Enable ADC DMA mode */
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       hadc->Instance->CFGR1 |= ADC_CFGR1_DMAEN;
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Start the DMA channel */
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****            
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* trigger event.                                                       */
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       hadc->Instance->CR |= ADC_CR_ADSTART;
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   else
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Return function status */
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   return tmp_hal_status;
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 24


1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group, disable ADC DMA transfer, disable 
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         ADC peripheral.
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval HAL status.
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {  
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check the parameters */
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Process locked */
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   __HAL_LOCK(hadc);
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on regular group */
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration ADC_CFGR_DMACFG is kept) */
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     hadc->Instance->CFGR1 &= ~ADC_CFGR1_DMAEN;
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);   
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Check if DMA channel effectively disabled */
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (tmp_hal_status != HAL_OK)
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Update ADC state machine to error */
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed, to keep  */
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* in memory a potential failing status.                                  */
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     else
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       ADC_Disable(hadc);
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 25


1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Set ADC state */
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Process unlocked */
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Return function status */
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   return tmp_hal_status;
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS 
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *            to flag EOC.
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         To clear this flag, either use function: 
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion() 
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval ADC group regular conversion data
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check the parameters */
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Return ADC converted value */ 
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   return hadc->Instance->DR;
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
1389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Handles ADC interrupt request.  
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
1393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval None
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check the parameters */
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 26


1401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* ========== Check End of Conversion flag for regular group ========== */
1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if( (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC)) || 
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOS))   )
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
1407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Set ADC state */
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
1411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.        */
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
1416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* If End of Sequence is reached, disable interrupts */
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* ADSTART==0 (no conversion on going)                                */
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         {
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           /* Disable ADC end of single conversion interrupt on group regular */
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           /* Note: Overrun interrupt was enabled with EOC interrupt in        */
1427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           /* HAL_Start_IT(), but is not disabled here because can be used     */
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           /* by overrun IRQ process below.                                    */
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           /* Set ADC state */
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State,
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                             HAL_ADC_STATE_READY);
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         }
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         else
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         {
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           /* Change ADC state to error state */
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           
1441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           /* Set ADC error code to ADC IP internal error */
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         }
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Conversion complete callback */
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Note: into callback, to determine if conversion has been triggered     */
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*       from EOC or EOS, possibility to use:                             */
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*        " if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "                */
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       HAL_ADC_ConvCpltCallback(hadc);
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Clear regular group conversion flag */
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
1456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*       conversion flags clear induces the release of the preserved data.*/
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 27


1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS) );
1460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****    
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* ========== Check Analog watchdog flags ========== */
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD))
1464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Set ADC state */
1466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Level out of window callback */ 
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
1470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Clear ADC Analog watchdog flag */
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
1473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****    
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
1475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_OVR) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_OVR))
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
1483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* overrun ")                                                             */
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* error.                                                                 */
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if ((hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)            ||
1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         HAL_IS_BIT_SET(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN)  )
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Set ADC error code to overrun */
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Clear ADC overrun flag */
1493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Error callback */ 
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
1497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Clear the Overrun flag */
1500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
1507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Conversion complete callback in non blocking mode 
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval None
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   UNUSED(hadc);
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 28


1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****    */
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non blocking mode 
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval None
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
1528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   UNUSED(hadc);
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
1537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Analog watchdog callback in non blocking mode. 
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval None
1540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   UNUSED(hadc);
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****             function HAL_ADC_LevelOoutOfWindowCallback must be implemented in the user file.
1548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  ADC error callback in non blocking mode
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *        (ADC conversion with interruption or transfer by DMA)
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval None
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
1559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   UNUSED(hadc);
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @}
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 29


1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****  *  @brief    Peripheral Control functions 
1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****  *
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** @verbatim   
1576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****  ===============================================================================
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****              ##### Peripheral Control functions #####
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****  ===============================================================================  
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (+) Configure channels on regular group
1581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (+) Configure the analog watchdog
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** @endverbatim
1584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @{
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Configures the the selected channel to be linked to the regular
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         group.
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
1591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         VrefInt/Vbat/TempSensor.
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         Sampling time constraints must be respected (sampling time can be 
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         adjusted in function of ADC clock frequency and sampling time 
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         setting).
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         Refer to device datasheet for timings values, parameters TS_vrefint,
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         TS_vbat, TS_temp (values rough order: 5us to 17us).
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         These internal paths can be be disabled using function 
1598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         HAL_ADC_DeInit().
1599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         This function initializes channel into regular group, following  
1601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters 
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         of structure "ADC_ChannelConfTypeDef" on the fly, without reseting 
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         the ADC.
1604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         For parameters constraints, see comments of structure 
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         "ADC_ChannelConfTypeDef".
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
1608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  sConfig Structure of ADC channel for regular group.
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval HAL status
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0U;
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check the parameters */
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
1619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_RANK(sConfig->Rank));
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if (! IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
1625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Process locked */
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   __HAL_LOCK(hadc);
1628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 30


1629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* conversion on going on regular group:                                    */
1632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /*  - Channel number                                                        */
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /*  - Channel sampling time                                                 */
1634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /*  - Management of internal measurement channels: VrefInt/TempSensor/Vbat  */
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
1637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Configure channel: depending on rank setting, add it or remove it from */
1638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* ADC conversion sequencer.                                              */
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (sConfig->Rank != ADC_RANK_NONE)
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Regular sequence configuration */
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Set the channel selection register from the selected channel */
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       hadc->Instance->CHSELR |= ADC_CHSELR_CHANNEL(sConfig->Channel);
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Channel sampling time configuration */
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Management of parameters "SamplingTimeCommon" and "SamplingTime"     */
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* (obsolete): sampling time set in this function with                  */
1648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* parameter "SamplingTime" (obsolete) only if not already set into     */
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* ADC initialization structure with parameter "SamplingTimeCommon".    */
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       if (! IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
1651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* Modify sampling time if needed (not needed in case of reoccurrence */
1653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* for several channels programmed consecutively into the sequencer)  */
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         if (sConfig->SamplingTime != ADC_GET_SAMPLINGTIME(hadc))
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         {
1656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           /* Channel sampling time configuration */
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           /* Clear the old sample time */
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           hadc->Instance->SMPR &= ~(ADC_SMPR_SMP);
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           /* Set the new sample time */
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           hadc->Instance->SMPR |= ADC_SMPR_SET(sConfig->SamplingTime);
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         }
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Management of internal measurement channels: VrefInt/TempSensor/Vbat */
1666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* internal measurement paths enable: If internal channel selected,     */
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* enable dedicated internal buffers and path.                          */
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Note: these internal measurement paths can be disabled using         */
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /*       HAL_ADC_DeInit() or removing the channel from sequencer with   */
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /*       channel configuration parameter "Rank".                        */
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       if(ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
1673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* If Channel_16 is selected, enable Temp. sensor measurement path. */
1674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* If Channel_17 is selected, enable VREFINT measurement path. */
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* If Channel_18 is selected, enable VBAT measurement path. */
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         ADC->CCR |= ADC_CHANNEL_INTERNAL_PATH(sConfig->Channel);
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* If Temp. sensor is selected, wait for stabilization delay */
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
1680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         {
1681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           /* Compute number of CPU cycles to wait for */
1683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           while(wait_loop_index != 0U)
1685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           {
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 31


1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****             wait_loop_index--;
1687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           }
1688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         }
1689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
1691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     else
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Regular sequence configuration */
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Reset the channel selection register from the selected channel */
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       hadc->Instance->CHSELR &= ~ADC_CHSELR_CHANNEL(sConfig->Channel);
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Management of internal measurement channels: VrefInt/TempSensor/Vbat */
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* internal measurement paths disable: If internal channel selected,    */
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* disable dedicated internal buffers and path.                         */
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       if(ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* If Channel_16 is selected, disable Temp. sensor measurement path. */
1703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* If Channel_17 is selected, disable VREFINT measurement path. */
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* If Channel_18 is selected, disable VBAT measurement path. */
1705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         ADC->CCR &= ~ADC_CHANNEL_INTERNAL_PATH(sConfig->Channel);
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
1708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****    
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
1712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* parameters.                                                              */
1714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   else
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
1716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Update ADC state machine to error */
1717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Process unlocked */
1723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Return function status */
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   return tmp_hal_status;
1727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Configures the analog watchdog.
1732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         This function initializes the selected analog watchdog, following  
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters 
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without reseting 
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         the ADC.
1737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         For parameters constraints, see comments of structure 
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
1740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
1741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  AnalogWDGConfig Structure of ADC analog watchdog configuration
1742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval HAL status
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 32


1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
1745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check the parameters */
1752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Verify if threshold is within the selected ADC resolution */
1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
1758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if(AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
1762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
1764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Process locked */
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   __HAL_LOCK(hadc);
1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
1770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* conversion on going on regular group:                                    */
1771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
1772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /*  - Analog watchdog thresholds                                            */
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
1774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
1775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Configuration of analog watchdog:                                      */
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*  - Set the analog watchdog enable mode: one or overall group of        */
1777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*    channels.                                                           */
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*  - Set the Analog watchdog channel (is not used if watchdog            */
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /*    mode "all channels": ADC_CFGR_AWD1SGL=0).                           */
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     hadc->Instance->CFGR1 &= ~( ADC_CFGR1_AWDSGL |
1781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_CFGR1_AWDEN  |
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_CFGR1_AWDCH   );
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     hadc->Instance->CFGR1 |= ( AnalogWDGConfig->WatchdogMode            |
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                ADC_CFGR_AWDCH(AnalogWDGConfig->Channel)  );
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Shift the offset in function of the selected ADC resolution: Thresholds*/
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* have to be left-aligned on bit 11, the LSB (right bits) are set to 0   */
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     tmpAWDHighThresholdShifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighThre
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
1791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Set the high and low thresholds */
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     hadc->Instance->TR &= ~(ADC_TR_HT | ADC_TR_LT);
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     hadc->Instance->TR |=  ( ADC_TRX_HIGHTHRESHOLD (tmpAWDHighThresholdShifted) |
1795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                              tmpAWDLowThresholdShifted                           );
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Clear the ADC Analog watchdog flag (in case of left enabled by         */
1798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* previous ADC operations) to be ready to use for HAL_ADC_IRQHandler()   */
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* or HAL_ADC_PollForEvent().                                             */
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 33


1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_IT_AWD);
1801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Configure ADC Analog watchdog interrupt */
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if(AnalogWDGConfig->ITMode == ENABLE)
1804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Enable the ADC Analog watchdog interrupt */
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD);
1807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     else
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Disable the ADC Analog watchdog interrupt */
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD);
1812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
1813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
1815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* If a conversion is on going on regular group, no update could be done    */
1816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* on neither of the AWD configuration structure parameters.                */
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   else
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Update ADC state machine to error */
1820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
1824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Process unlocked */
1827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Return function status */
1830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   return tmp_hal_status;
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
1832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
1835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @}
1836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
1840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****  *  @brief    Peripheral State functions
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****  *
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** @verbatim
1843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****  ===============================================================================
1844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****             ##### Peripheral State and Errors functions #####
1845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****  ===============================================================================  
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     [..]
1847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the  
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     peripheral.
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (+) Check the ADC state
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (+) Check the ADC error code
1851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** @endverbatim
1853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @{
1854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 34


1857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Return the ADC state
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be 
1859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         compared with states bits.
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         For example:                                                         
1861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *           " if (HAL_IS_BIT_SET(HAL_ADC_GetState(hadc1), HAL_ADC_STATE_REG_BUSY)) "
1862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *           " if (HAL_IS_BIT_SET(HAL_ADC_GetState(hadc1), HAL_ADC_STATE_AWD1)    ) "
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
1864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval HAL state
1865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef* hadc)
1867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check the parameters */
1869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Return ADC state */
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   return hadc->State;
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
1874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
1876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Return the ADC error code
1877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval ADC Error Code
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
1881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   return hadc->ErrorCode;
1883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
1884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @}
1887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */  
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
1890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @}
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
1894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @{
1895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
1898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Enable the selected ADC.
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
1900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @note   If low power mode AutoPowerOff is enabled, power-on/off phases are
1902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         performed automatically by hardware.
1903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         In this mode, this function is useless and must not be called because 
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         flag ADC_FLAG_RDY is not usable.
1905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         Therefore, this function must be called under condition of
1906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         "if (hadc->Init.LowPowerAutoPowerOff != ENABLE)".
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval HAL status.
1909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** static HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc)
1911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   uint32_t tickstart = 0U;
1913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0U;
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 35


1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
1917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
1918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
1920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (ADC_ENABLING_CONDITIONS(hadc) == RESET)
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Update ADC state machine to error */
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Set ADC error code to ADC IP internal error */
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       return HAL_ERROR;
1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Enable the ADC peripheral */
1934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
1935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Delay for ADC stabilization time */
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
1938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     wait_loop_index = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     while(wait_loop_index != 0U)
1940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       wait_loop_index--;
1942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
1943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Get tick count */
1945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     tickstart = HAL_GetTick();
1946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Wait for ADC effectively enabled */
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
1949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       if((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
1952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* Update ADC state machine to error */
1953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* Set ADC error code to ADC IP internal error */
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         return HAL_ERROR;
1959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
1960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }   
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****    
1964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Return HAL status */
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   return HAL_OK;
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
1967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
1968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
1969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Disable the selected ADC.
1970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 36


1971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         stopped.
1972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval HAL status.
1974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** static HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef* hadc)
1976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   uint32_t tickstart = 0U;
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
1980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
1981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /*       disabled.                                                          */
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if (ADC_IS_ENABLE(hadc) != RESET)
1983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
1985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (ADC_DISABLING_CONDITIONS(hadc) != RESET)
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Disable the ADC peripheral */
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       __HAL_ADC_DISABLE(hadc);
1989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
1990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     else
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Update ADC state machine to error */
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Set ADC error code to ADC IP internal error */
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       return HAL_ERROR;
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
2000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Get tick count */
2003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     tickstart = HAL_GetTick();
2004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADEN))
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
2007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       if((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* Update ADC state machine to error */
2010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* Set ADC error code to ADC IP internal error */
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         return HAL_ERROR;
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
2017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
2018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
2020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Return HAL status */
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   return HAL_OK;
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
2023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
2024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
2025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
2026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  Stop ADC conversion.
2027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 37


2028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   *         stopped to disable the ADC.
2029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hadc ADC handle
2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval HAL status.
2031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** static HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef* hadc)
2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
  27              		.loc 1 2033 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0400     		movs	r4, r0
  40              	.LVL1:
2034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   uint32_t tickstart = 0U;
2035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check the parameters */
2037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
2039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Verification if ADC is not already stopped on regular group to bypass    */
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* this function if not needed.                                             */
2041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc))
  41              		.loc 1 2041 0
  42 0004 0368     		ldr	r3, [r0]
  43 0006 9A68     		ldr	r2, [r3, #8]
  44 0008 5207     		lsls	r2, r2, #29
  45 000a 22D5     		bpl	.L6
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
2043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Stop potential conversion on going on regular group */
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
2046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADSTART) && 
  46              		.loc 1 2046 0
  47 000c 9A68     		ldr	r2, [r3, #8]
  48 000e 5207     		lsls	r2, r2, #29
  49 0010 06D5     		bpl	.L3
2047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)                  )
  50              		.loc 1 2047 0 discriminator 1
  51 0012 9A68     		ldr	r2, [r3, #8]
2046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)                  )
  52              		.loc 1 2046 0 discriminator 1
  53 0014 9207     		lsls	r2, r2, #30
  54 0016 03D4     		bmi	.L3
2048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
2049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* Stop conversions on regular group */
2050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       hadc->Instance->CR |= ADC_CR_ADSTP;
  55              		.loc 1 2050 0
  56 0018 9968     		ldr	r1, [r3, #8]
  57 001a 1022     		movs	r2, #16
  58 001c 0A43     		orrs	r2, r1
  59 001e 9A60     		str	r2, [r3, #8]
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 38


  60              	.L3:
2051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
2052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
2053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Wait for conversion effectively stopped */
2054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Get tick count */
2055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     tickstart = HAL_GetTick();
  61              		.loc 1 2055 0
  62 0020 FFF7FEFF 		bl	HAL_GetTick
  63              	.LVL2:
  64 0024 0500     		movs	r5, r0
  65              	.LVL3:
2056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
2057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     while((hadc->Instance->CR & ADC_CR_ADSTART) != RESET)
  66              		.loc 1 2057 0
  67 0026 0EE0     		b	.L4
  68              	.LVL4:
  69              	.L5:
2058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
2059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       if((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
  70              		.loc 1 2059 0
  71 0028 FFF7FEFF 		bl	HAL_GetTick
  72              	.LVL5:
  73 002c 401B     		subs	r0, r0, r5
  74 002e 0228     		cmp	r0, #2
  75 0030 09D9     		bls	.L4
2060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
2061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* Update ADC state machine to error */
2062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
  76              		.loc 1 2062 0
  77 0032 626C     		ldr	r2, [r4, #68]
  78 0034 1023     		movs	r3, #16
  79 0036 1343     		orrs	r3, r2
  80 0038 6364     		str	r3, [r4, #68]
2063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
2064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* Set ADC error code to ADC IP internal error */
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
  81              		.loc 1 2065 0
  82 003a A26C     		ldr	r2, [r4, #72]
  83 003c 0123     		movs	r3, #1
  84 003e 1343     		orrs	r3, r2
  85 0040 A364     		str	r3, [r4, #72]
2066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
2067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         return HAL_ERROR;
  86              		.loc 1 2067 0
  87 0042 0120     		movs	r0, #1
  88 0044 06E0     		b	.L2
  89              	.L4:
2057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
  90              		.loc 1 2057 0
  91 0046 2368     		ldr	r3, [r4]
  92 0048 9B68     		ldr	r3, [r3, #8]
  93 004a 5B07     		lsls	r3, r3, #29
  94 004c ECD4     		bmi	.L5
2068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
2069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
2070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
2071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 39


2072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****    
2073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Return HAL status */
2074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   return HAL_OK;
  95              		.loc 1 2074 0
  96 004e 0020     		movs	r0, #0
  97 0050 00E0     		b	.L2
  98              	.LVL6:
  99              	.L6:
 100 0052 0020     		movs	r0, #0
 101              	.LVL7:
 102              	.L2:
2075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 103              		.loc 1 2075 0
 104              		@ sp needed
 105              	.LVL8:
 106 0054 70BD     		pop	{r4, r5, r6, pc}
 107              		.cfi_endproc
 108              	.LFE59:
 110 0056 C046     		.section	.text.ADC_Disable,"ax",%progbits
 111              		.align	2
 112              		.code	16
 113              		.thumb_func
 115              	ADC_Disable:
 116              	.LFB58:
1976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   uint32_t tickstart = 0U;
 117              		.loc 1 1976 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              	.LVL9:
 122 0000 70B5     		push	{r4, r5, r6, lr}
 123              	.LCFI1:
 124              		.cfi_def_cfa_offset 16
 125              		.cfi_offset 4, -16
 126              		.cfi_offset 5, -12
 127              		.cfi_offset 6, -8
 128              		.cfi_offset 14, -4
 129 0002 0400     		movs	r4, r0
 130              	.LVL10:
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 131              		.loc 1 1982 0
 132 0004 0268     		ldr	r2, [r0]
 133 0006 9368     		ldr	r3, [r2, #8]
 134 0008 0321     		movs	r1, #3
 135 000a 0B40     		ands	r3, r1
 136 000c 012B     		cmp	r3, #1
 137 000e 07D1     		bne	.L13
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 138              		.loc 1 1982 0 is_stmt 0 discriminator 1
 139 0010 1368     		ldr	r3, [r2]
 140 0012 DB07     		lsls	r3, r3, #31
 141 0014 06D4     		bmi	.L14
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 142              		.loc 1 1982 0 discriminator 4
 143 0016 D368     		ldr	r3, [r2, #12]
 144 0018 1B04     		lsls	r3, r3, #16
 145 001a 05D4     		bmi	.L15
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 40


1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 146              		.loc 1 1982 0
 147 001c 0023     		movs	r3, #0
 148 001e 04E0     		b	.L8
 149              	.L13:
 150 0020 0023     		movs	r3, #0
 151 0022 02E0     		b	.L8
 152              	.L14:
 153 0024 0123     		movs	r3, #1
 154 0026 00E0     		b	.L8
 155              	.L15:
 156 0028 0123     		movs	r3, #1
 157              	.L8:
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 158              		.loc 1 1982 0 discriminator 8
 159 002a 002B     		cmp	r3, #0
 160 002c 2ED0     		beq	.L16
1985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 161              		.loc 1 1985 0 is_stmt 1
 162 002e 9368     		ldr	r3, [r2, #8]
 163 0030 0521     		movs	r1, #5
 164 0032 0B40     		ands	r3, r1
 165 0034 012B     		cmp	r3, #1
 166 0036 0AD1     		bne	.L10
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 167              		.loc 1 1988 0
 168 0038 9168     		ldr	r1, [r2, #8]
 169 003a 0133     		adds	r3, r3, #1
 170 003c 0B43     		orrs	r3, r1
 171 003e 9360     		str	r3, [r2, #8]
 172 0040 2368     		ldr	r3, [r4]
 173 0042 0322     		movs	r2, #3
 174 0044 1A60     		str	r2, [r3]
2003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 175              		.loc 1 2003 0
 176 0046 FFF7FEFF 		bl	HAL_GetTick
 177              	.LVL11:
 178 004a 0500     		movs	r5, r0
 179              	.LVL12:
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 180              		.loc 1 2005 0
 181 004c 18E0     		b	.L11
 182              	.LVL13:
 183              	.L10:
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 184              		.loc 1 1993 0
 185 004e 626C     		ldr	r2, [r4, #68]
 186 0050 1023     		movs	r3, #16
 187 0052 1343     		orrs	r3, r2
 188 0054 6364     		str	r3, [r4, #68]
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 189              		.loc 1 1996 0
 190 0056 A26C     		ldr	r2, [r4, #72]
 191 0058 0123     		movs	r3, #1
 192 005a 1343     		orrs	r3, r2
 193 005c A364     		str	r3, [r4, #72]
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 41


 194              		.loc 1 1998 0
 195 005e 0120     		movs	r0, #1
 196              	.LVL14:
 197 0060 15E0     		b	.L9
 198              	.LVL15:
 199              	.L12:
2007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 200              		.loc 1 2007 0
 201 0062 FFF7FEFF 		bl	HAL_GetTick
 202              	.LVL16:
 203 0066 401B     		subs	r0, r0, r5
 204 0068 0228     		cmp	r0, #2
 205 006a 09D9     		bls	.L11
2010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 206              		.loc 1 2010 0
 207 006c 626C     		ldr	r2, [r4, #68]
 208 006e 1023     		movs	r3, #16
 209 0070 1343     		orrs	r3, r2
 210 0072 6364     		str	r3, [r4, #68]
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
 211              		.loc 1 2013 0
 212 0074 A26C     		ldr	r2, [r4, #72]
 213 0076 0123     		movs	r3, #1
 214 0078 1343     		orrs	r3, r2
 215 007a A364     		str	r3, [r4, #72]
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
 216              		.loc 1 2015 0
 217 007c 0120     		movs	r0, #1
 218 007e 06E0     		b	.L9
 219              	.L11:
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 220              		.loc 1 2005 0
 221 0080 2368     		ldr	r3, [r4]
 222 0082 9B68     		ldr	r3, [r3, #8]
 223 0084 DB07     		lsls	r3, r3, #31
 224 0086 ECD4     		bmi	.L12
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 225              		.loc 1 2021 0
 226 0088 0020     		movs	r0, #0
 227 008a 00E0     		b	.L9
 228              	.LVL17:
 229              	.L16:
 230 008c 0020     		movs	r0, #0
 231              	.LVL18:
 232              	.L9:
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 233              		.loc 1 2022 0
 234              		@ sp needed
 235              	.LVL19:
 236 008e 70BD     		pop	{r4, r5, r6, pc}
 237              		.cfi_endproc
 238              	.LFE58:
 240              		.global	__aeabi_uidiv
 241              		.section	.text.ADC_Enable,"ax",%progbits
 242              		.align	2
 243              		.code	16
 244              		.thumb_func
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 42


 246              	ADC_Enable:
 247              	.LFB57:
1911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   uint32_t tickstart = 0U;
 248              		.loc 1 1911 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 8
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              	.LVL20:
 253 0000 30B5     		push	{r4, r5, lr}
 254              	.LCFI2:
 255              		.cfi_def_cfa_offset 12
 256              		.cfi_offset 4, -12
 257              		.cfi_offset 5, -8
 258              		.cfi_offset 14, -4
 259 0002 83B0     		sub	sp, sp, #12
 260              	.LCFI3:
 261              		.cfi_def_cfa_offset 24
 262 0004 0400     		movs	r4, r0
 263              	.LVL21:
1913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 264              		.loc 1 1913 0
 265 0006 0023     		movs	r3, #0
 266 0008 0193     		str	r3, [sp, #4]
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 267              		.loc 1 1919 0
 268 000a 0268     		ldr	r2, [r0]
 269 000c 9368     		ldr	r3, [r2, #8]
 270 000e 0321     		movs	r1, #3
 271 0010 0B40     		ands	r3, r1
 272 0012 012B     		cmp	r3, #1
 273 0014 07D1     		bne	.L25
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 274              		.loc 1 1919 0 is_stmt 0 discriminator 1
 275 0016 1368     		ldr	r3, [r2]
 276 0018 DB07     		lsls	r3, r3, #31
 277 001a 06D4     		bmi	.L26
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 278              		.loc 1 1919 0 discriminator 4
 279 001c D368     		ldr	r3, [r2, #12]
 280 001e 1B04     		lsls	r3, r3, #16
 281 0020 05D4     		bmi	.L27
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 282              		.loc 1 1919 0
 283 0022 0023     		movs	r3, #0
 284 0024 04E0     		b	.L18
 285              	.L25:
 286 0026 0023     		movs	r3, #0
 287 0028 02E0     		b	.L18
 288              	.L26:
 289 002a 0123     		movs	r3, #1
 290 002c 00E0     		b	.L18
 291              	.L27:
 292 002e 0123     		movs	r3, #1
 293              	.L18:
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 294              		.loc 1 1919 0 discriminator 8
 295 0030 002B     		cmp	r3, #0
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 43


 296 0032 37D1     		bne	.L28
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 297              		.loc 1 1922 0 is_stmt 1
 298 0034 9168     		ldr	r1, [r2, #8]
 299 0036 1D4B     		ldr	r3, .L29
 300 0038 1942     		tst	r1, r3
 301 003a 09D0     		beq	.L20
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 302              		.loc 1 1925 0
 303 003c 626C     		ldr	r2, [r4, #68]
 304 003e 1023     		movs	r3, #16
 305 0040 1343     		orrs	r3, r2
 306 0042 6364     		str	r3, [r4, #68]
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 307              		.loc 1 1928 0
 308 0044 A26C     		ldr	r2, [r4, #72]
 309 0046 0123     		movs	r3, #1
 310 0048 1343     		orrs	r3, r2
 311 004a A364     		str	r3, [r4, #72]
1930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 312              		.loc 1 1930 0
 313 004c 0120     		movs	r0, #1
 314              	.LVL22:
 315 004e 2AE0     		b	.L19
 316              	.LVL23:
 317              	.L20:
1934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 318              		.loc 1 1934 0
 319 0050 9168     		ldr	r1, [r2, #8]
 320 0052 0123     		movs	r3, #1
 321 0054 0B43     		orrs	r3, r1
 322 0056 9360     		str	r3, [r2, #8]
1938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     while(wait_loop_index != 0U)
 323              		.loc 1 1938 0
 324 0058 154B     		ldr	r3, .L29+4
 325 005a 1868     		ldr	r0, [r3]
 326              	.LVL24:
 327 005c 1549     		ldr	r1, .L29+8
 328 005e FFF7FEFF 		bl	__aeabi_uidiv
 329              	.LVL25:
 330 0062 0190     		str	r0, [sp, #4]
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 331              		.loc 1 1939 0
 332 0064 02E0     		b	.L21
 333              	.L22:
1941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 334              		.loc 1 1941 0
 335 0066 019B     		ldr	r3, [sp, #4]
 336 0068 013B     		subs	r3, r3, #1
 337 006a 0193     		str	r3, [sp, #4]
 338              	.L21:
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 339              		.loc 1 1939 0
 340 006c 019B     		ldr	r3, [sp, #4]
 341 006e 002B     		cmp	r3, #0
 342 0070 F9D1     		bne	.L22
1945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 44


 343              		.loc 1 1945 0
 344 0072 FFF7FEFF 		bl	HAL_GetTick
 345              	.LVL26:
 346 0076 0500     		movs	r5, r0
 347              	.LVL27:
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 348              		.loc 1 1948 0
 349 0078 0EE0     		b	.L23
 350              	.LVL28:
 351              	.L24:
1950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 352              		.loc 1 1950 0
 353 007a FFF7FEFF 		bl	HAL_GetTick
 354              	.LVL29:
 355 007e 401B     		subs	r0, r0, r5
 356 0080 0228     		cmp	r0, #2
 357 0082 09D9     		bls	.L23
1953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 358              		.loc 1 1953 0
 359 0084 626C     		ldr	r2, [r4, #68]
 360 0086 1023     		movs	r3, #16
 361 0088 1343     		orrs	r3, r2
 362 008a 6364     		str	r3, [r4, #68]
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 363              		.loc 1 1956 0
 364 008c A26C     		ldr	r2, [r4, #72]
 365 008e 0123     		movs	r3, #1
 366 0090 1343     		orrs	r3, r2
 367 0092 A364     		str	r3, [r4, #72]
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
 368              		.loc 1 1958 0
 369 0094 0120     		movs	r0, #1
 370 0096 06E0     		b	.L19
 371              	.L23:
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 372              		.loc 1 1948 0
 373 0098 2368     		ldr	r3, [r4]
 374 009a 1B68     		ldr	r3, [r3]
 375 009c DB07     		lsls	r3, r3, #31
 376 009e ECD5     		bpl	.L24
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 377              		.loc 1 1965 0
 378 00a0 0020     		movs	r0, #0
 379 00a2 00E0     		b	.L19
 380              	.LVL30:
 381              	.L28:
 382 00a4 0020     		movs	r0, #0
 383              	.LVL31:
 384              	.L19:
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 385              		.loc 1 1966 0
 386 00a6 03B0     		add	sp, sp, #12
 387              		@ sp needed
 388              	.LVL32:
 389 00a8 30BD     		pop	{r4, r5, pc}
 390              	.L30:
 391 00aa C046     		.align	2
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 45


 392              	.L29:
 393 00ac 17000080 		.word	-2147483625
 394 00b0 00000000 		.word	SystemCoreClock
 395 00b4 40420F00 		.word	1000000
 396              		.cfi_endproc
 397              	.LFE57:
 399              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 400              		.align	2
 401              		.weak	HAL_ADC_MspInit
 402              		.code	16
 403              		.thumb_func
 405              	HAL_ADC_MspInit:
 406              	.LFB37:
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 407              		.loc 1 702 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411              		@ link register save eliminated.
 412              	.LVL33:
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 413              		.loc 1 709 0
 414              		@ sp needed
 415 0000 7047     		bx	lr
 416              		.cfi_endproc
 417              	.LFE37:
 419 0002 C046     		.section	.text.HAL_ADC_Init,"ax",%progbits
 420              		.align	2
 421              		.global	HAL_ADC_Init
 422              		.code	16
 423              		.thumb_func
 425              	HAL_ADC_Init:
 426              	.LFB35:
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 427              		.loc 1 360 0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431              	.LVL34:
 432 0000 70B5     		push	{r4, r5, r6, lr}
 433              	.LCFI4:
 434              		.cfi_def_cfa_offset 16
 435              		.cfi_offset 4, -16
 436              		.cfi_offset 5, -12
 437              		.cfi_offset 6, -8
 438              		.cfi_offset 14, -4
 439 0002 041E     		subs	r4, r0, #0
 440              	.LVL35:
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 441              		.loc 1 365 0
 442 0004 00D1     		bne	.LCB421
 443 0006 B4E0     		b	.L46	@long jump
 444              	.LCB421:
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 445              		.loc 1 394 0
 446 0008 436C     		ldr	r3, [r0, #68]
 447 000a 002B     		cmp	r3, #0
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 46


 448 000c 04D1     		bne	.L34
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 449              		.loc 1 397 0
 450 000e 8364     		str	r3, [r0, #72]
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 451              		.loc 1 400 0
 452 0010 4022     		movs	r2, #64
 453 0012 8354     		strb	r3, [r0, r2]
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 454              		.loc 1 403 0
 455 0014 FFF7FEFF 		bl	HAL_ADC_MspInit
 456              	.LVL36:
 457              	.L34:
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (tmp_hal_status == HAL_OK)                                &&
 458              		.loc 1 411 0
 459 0018 636C     		ldr	r3, [r4, #68]
 460 001a DB06     		lsls	r3, r3, #27
 461 001c 00D5     		bpl	.LCB437
 462 001e A2E0     		b	.L35	@long jump
 463              	.LCB437:
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 464              		.loc 1 413 0
 465 0020 2268     		ldr	r2, [r4]
 466 0022 9368     		ldr	r3, [r2, #8]
 467 0024 0421     		movs	r1, #4
 468 0026 0B40     		ands	r3, r1
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)          )
 469              		.loc 1 412 0
 470 0028 00D0     		beq	.LCB443
 471 002a 9CE0     		b	.L35	@long jump
 472              	.LCB443:
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 473              		.loc 1 416 0
 474 002c 606C     		ldr	r0, [r4, #68]
 475 002e 5249     		ldr	r1, .L51
 476 0030 0140     		ands	r1, r0
 477 0032 0220     		movs	r0, #2
 478 0034 0143     		orrs	r1, r0
 479 0036 6164     		str	r1, [r4, #68]
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 480              		.loc 1 425 0
 481 0038 9168     		ldr	r1, [r2, #8]
 482 003a 0130     		adds	r0, r0, #1
 483 003c 0140     		ands	r1, r0
 484 003e 0129     		cmp	r1, #1
 485 0040 07D1     		bne	.L47
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 486              		.loc 1 425 0 is_stmt 0 discriminator 1
 487 0042 1168     		ldr	r1, [r2]
 488 0044 C907     		lsls	r1, r1, #31
 489 0046 06D4     		bmi	.L48
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 490              		.loc 1 425 0 discriminator 4
 491 0048 D168     		ldr	r1, [r2, #12]
 492 004a 0904     		lsls	r1, r1, #16
 493 004c 05D4     		bmi	.L49
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 47


 494              		.loc 1 425 0
 495 004e 0021     		movs	r1, #0
 496 0050 04E0     		b	.L36
 497              	.L47:
 498 0052 0021     		movs	r1, #0
 499 0054 02E0     		b	.L36
 500              	.L48:
 501 0056 0121     		movs	r1, #1
 502 0058 00E0     		b	.L36
 503              	.L49:
 504 005a 0121     		movs	r1, #1
 505              	.L36:
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 506              		.loc 1 425 0 discriminator 8
 507 005c 0029     		cmp	r1, #0
 508 005e 0CD1     		bne	.L37
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  ADC_CFGR1_RES        ,
 509              		.loc 1 436 0 is_stmt 1
 510 0060 D168     		ldr	r1, [r2, #12]
 511 0062 1820     		movs	r0, #24
 512 0064 8143     		bics	r1, r0
 513 0066 A068     		ldr	r0, [r4, #8]
 514 0068 0143     		orrs	r1, r0
 515 006a D160     		str	r1, [r2, #12]
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  ADC_CFGR2_CKMODE         ,
 516              		.loc 1 442 0
 517 006c 2168     		ldr	r1, [r4]
 518 006e 0A69     		ldr	r2, [r1, #16]
 519 0070 9200     		lsls	r2, r2, #2
 520 0072 9208     		lsrs	r2, r2, #2
 521 0074 6068     		ldr	r0, [r4, #4]
 522 0076 0243     		orrs	r2, r0
 523 0078 0A61     		str	r2, [r1, #16]
 524              	.L37:
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_CFGR1_AUTOFF  |
 525              		.loc 1 459 0
 526 007a 2168     		ldr	r1, [r4]
 527 007c C868     		ldr	r0, [r1, #12]
 528 007e 3F4A     		ldr	r2, .L51+4
 529 0080 0240     		ands	r2, r0
 530 0082 CA60     		str	r2, [r1, #12]
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  ADC_CFGR1_AUTOOFF(hadc->Init.LowPowerAutoPowerOff)     |
 531              		.loc 1 470 0
 532 0084 A269     		ldr	r2, [r4, #24]
 533 0086 9103     		lsls	r1, r2, #14
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  ADC_CFGR1_CONTINUOUS(hadc->Init.ContinuousConvMode)    |
 534              		.loc 1 471 0
 535 0088 E269     		ldr	r2, [r4, #28]
 536 008a D203     		lsls	r2, r2, #15
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  ADC_CFGR1_AUTOOFF(hadc->Init.LowPowerAutoPowerOff)     |
 537              		.loc 1 470 0
 538 008c 0A43     		orrs	r2, r1
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                  |
 539              		.loc 1 472 0
 540 008e 206A     		ldr	r0, [r4, #32]
 541 0090 4103     		lsls	r1, r0, #13
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  ADC_CFGR1_CONTINUOUS(hadc->Init.ContinuousConvMode)    |
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 48


 542              		.loc 1 471 0
 543 0092 0A43     		orrs	r2, r1
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                  |
 544              		.loc 1 472 0
 545 0094 616B     		ldr	r1, [r4, #52]
 546 0096 0129     		cmp	r1, #1
 547 0098 02D0     		beq	.L50
 548 009a 8021     		movs	r1, #128
 549 009c 4901     		lsls	r1, r1, #5
 550 009e 00E0     		b	.L38
 551              	.L50:
 552 00a0 1900     		movs	r1, r3
 553              	.L38:
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                  |
 554              		.loc 1 472 0 is_stmt 0 discriminator 4
 555 00a2 0A43     		orrs	r2, r1
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  hadc->Init.DataAlign                                   |
 556              		.loc 1 473 0 is_stmt 1 discriminator 4
 557 00a4 E168     		ldr	r1, [r4, #12]
 558 00a6 0A43     		orrs	r2, r1
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  ADC_SCANDIR(hadc->Init.ScanConvMode)                   |
 559              		.loc 1 474 0 discriminator 4
 560 00a8 2169     		ldr	r1, [r4, #16]
 561 00aa 0229     		cmp	r1, #2
 562 00ac 00D1     		bne	.L39
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  ADC_SCANDIR(hadc->Init.ScanConvMode)                   |
 563              		.loc 1 474 0 is_stmt 0
 564 00ae 0423     		movs	r3, #4
 565              	.L39:
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  ADC_SCANDIR(hadc->Init.ScanConvMode)                   |
 566              		.loc 1 474 0 discriminator 4
 567 00b0 1343     		orrs	r3, r2
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 568              		.loc 1 476 0 is_stmt 1 discriminator 4
 569 00b2 226B     		ldr	r2, [r4, #48]
 570 00b4 5200     		lsls	r2, r2, #1
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                  ADC_CFGR1_DMACONTREQ(hadc->Init.DMAContinuousRequests)  );
 571              		.loc 1 475 0 discriminator 4
 572 00b6 1343     		orrs	r3, r2
 573              	.LVL37:
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 574              		.loc 1 479 0 discriminator 4
 575 00b8 626A     		ldr	r2, [r4, #36]
 576 00ba 012A     		cmp	r2, #1
 577 00bc 0DD1     		bne	.L40
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 578              		.loc 1 481 0
 579 00be 0028     		cmp	r0, #0
 580 00c0 03D1     		bne	.L41
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
 581              		.loc 1 484 0
 582 00c2 8022     		movs	r2, #128
 583 00c4 5202     		lsls	r2, r2, #9
 584 00c6 1343     		orrs	r3, r2
 585              	.LVL38:
 586 00c8 07E0     		b	.L40
 587              	.L41:
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 49


 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
 588              		.loc 1 493 0
 589 00ca 616C     		ldr	r1, [r4, #68]
 590 00cc 2022     		movs	r2, #32
 591 00ce 0A43     		orrs	r2, r1
 592 00d0 6264     		str	r2, [r4, #68]
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
 593              		.loc 1 496 0
 594 00d2 A16C     		ldr	r1, [r4, #72]
 595 00d4 0122     		movs	r2, #1
 596 00d6 0A43     		orrs	r2, r1
 597 00d8 A264     		str	r2, [r4, #72]
 598              	.L40:
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 599              		.loc 1 505 0
 600 00da A26A     		ldr	r2, [r4, #40]
 601 00dc C221     		movs	r1, #194
 602 00de FF31     		adds	r1, r1, #255
 603 00e0 8A42     		cmp	r2, r1
 604 00e2 02D0     		beq	.L42
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                     hadc->Init.ExternalTrigConvEdge );
 605              		.loc 1 507 0
 606 00e4 E16A     		ldr	r1, [r4, #44]
 607 00e6 0A43     		orrs	r2, r1
 608 00e8 1343     		orrs	r3, r2
 609              	.LVL39:
 610              	.L42:
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 611              		.loc 1 512 0
 612 00ea 2168     		ldr	r1, [r4]
 613 00ec CA68     		ldr	r2, [r1, #12]
 614 00ee 1A43     		orrs	r2, r3
 615 00f0 CA60     		str	r2, [r1, #12]
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 616              		.loc 1 520 0
 617 00f2 A26B     		ldr	r2, [r4, #56]
 618 00f4 8021     		movs	r1, #128
 619 00f6 4905     		lsls	r1, r1, #21
 620 00f8 8A42     		cmp	r2, r1
 621 00fa 0DD0     		beq	.L43
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 622              		.loc 1 520 0 is_stmt 0 discriminator 1
 623 00fc 012A     		cmp	r2, #1
 624 00fe 0BD0     		beq	.L43
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 625              		.loc 1 520 0 discriminator 2
 626 0100 022A     		cmp	r2, #2
 627 0102 09D0     		beq	.L43
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 628              		.loc 1 520 0 discriminator 3
 629 0104 032A     		cmp	r2, #3
 630 0106 07D0     		beq	.L43
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 631              		.loc 1 520 0 discriminator 4
 632 0108 042A     		cmp	r2, #4
 633 010a 05D0     		beq	.L43
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 50


 634              		.loc 1 520 0 discriminator 5
 635 010c 052A     		cmp	r2, #5
 636 010e 03D0     		beq	.L43
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 637              		.loc 1 520 0 discriminator 6
 638 0110 062A     		cmp	r2, #6
 639 0112 01D0     		beq	.L43
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 640              		.loc 1 520 0 discriminator 7
 641 0114 072A     		cmp	r2, #7
 642 0116 0AD1     		bne	.L44
 643              	.L43:
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 644              		.loc 1 524 0 is_stmt 1
 645 0118 2068     		ldr	r0, [r4]
 646 011a 4169     		ldr	r1, [r0, #20]
 647 011c 0722     		movs	r2, #7
 648 011e 9143     		bics	r1, r2
 649 0120 4161     		str	r1, [r0, #20]
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 650              		.loc 1 527 0
 651 0122 2168     		ldr	r1, [r4]
 652 0124 4869     		ldr	r0, [r1, #20]
 653 0126 A56B     		ldr	r5, [r4, #56]
 654 0128 2A40     		ands	r2, r5
 655 012a 0243     		orrs	r2, r0
 656 012c 4A61     		str	r2, [r1, #20]
 657              	.L44:
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****          == tmpCFGR1)
 658              		.loc 1 535 0
 659 012e 2268     		ldr	r2, [r4]
 660 0130 D168     		ldr	r1, [r2, #12]
 661 0132 134A     		ldr	r2, .L51+8
 662 0134 0A40     		ands	r2, r1
 663 0136 9342     		cmp	r3, r2
 664 0138 09D1     		bne	.L45
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 665              		.loc 1 539 0
 666 013a 0023     		movs	r3, #0
 667              	.LVL40:
 668 013c A364     		str	r3, [r4, #72]
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 669              		.loc 1 542 0
 670 013e 636C     		ldr	r3, [r4, #68]
 671 0140 0322     		movs	r2, #3
 672 0142 9343     		bics	r3, r2
 673 0144 023A     		subs	r2, r2, #2
 674 0146 1343     		orrs	r3, r2
 675 0148 6364     		str	r3, [r4, #68]
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   uint32_t tmpCFGR1 = 0U;
 676              		.loc 1 361 0
 677 014a 0020     		movs	r0, #0
 678 014c 12E0     		b	.L33
 679              	.LVL41:
 680              	.L45:
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 681              		.loc 1 549 0
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 51


 682 014e 636C     		ldr	r3, [r4, #68]
 683              	.LVL42:
 684 0150 1222     		movs	r2, #18
 685 0152 9343     		bics	r3, r2
 686 0154 023A     		subs	r2, r2, #2
 687 0156 1343     		orrs	r3, r2
 688 0158 6364     		str	r3, [r4, #68]
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 689              		.loc 1 554 0
 690 015a A26C     		ldr	r2, [r4, #72]
 691 015c 0123     		movs	r3, #1
 692 015e 1343     		orrs	r3, r2
 693 0160 A364     		str	r3, [r4, #72]
 694              	.LVL43:
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 695              		.loc 1 556 0
 696 0162 0120     		movs	r0, #1
 697 0164 06E0     		b	.L33
 698              	.LVL44:
 699              	.L35:
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
 700              		.loc 1 563 0
 701 0166 626C     		ldr	r2, [r4, #68]
 702 0168 1023     		movs	r3, #16
 703 016a 1343     		orrs	r3, r2
 704 016c 6364     		str	r3, [r4, #68]
 705              	.LVL45:
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 706              		.loc 1 565 0
 707 016e 0120     		movs	r0, #1
 708 0170 00E0     		b	.L33
 709              	.LVL46:
 710              	.L46:
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 711              		.loc 1 367 0
 712 0172 0120     		movs	r0, #1
 713              	.LVL47:
 714              	.L33:
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 715              		.loc 1 570 0
 716              		@ sp needed
 717              	.LVL48:
 718 0174 70BD     		pop	{r4, r5, r6, pc}
 719              	.L52:
 720 0176 C046     		.align	2
 721              	.L51:
 722 0178 FDFEFFFF 		.word	-259
 723 017c 1902FEFF 		.word	-130535
 724 0180 E7FF3F83 		.word	-2092957721
 725              		.cfi_endproc
 726              	.LFE35:
 728              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 729              		.align	2
 730              		.weak	HAL_ADC_MspDeInit
 731              		.code	16
 732              		.thumb_func
 734              	HAL_ADC_MspDeInit:
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 52


 735              	.LFB38:
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 736              		.loc 1 717 0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 0
 739              		@ frame_needed = 0, uses_anonymous_args = 0
 740              		@ link register save eliminated.
 741              	.LVL49:
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 742              		.loc 1 724 0
 743              		@ sp needed
 744 0000 7047     		bx	lr
 745              		.cfi_endproc
 746              	.LFE38:
 748 0002 C046     		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 749              		.align	2
 750              		.global	HAL_ADC_DeInit
 751              		.code	16
 752              		.thumb_func
 754              	HAL_ADC_DeInit:
 755              	.LFB36:
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 756              		.loc 1 586 0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 0
 759              		@ frame_needed = 0, uses_anonymous_args = 0
 760              	.LVL50:
 761 0000 70B5     		push	{r4, r5, r6, lr}
 762              	.LCFI5:
 763              		.cfi_def_cfa_offset 16
 764              		.cfi_offset 4, -16
 765              		.cfi_offset 5, -12
 766              		.cfi_offset 6, -8
 767              		.cfi_offset 14, -4
 768 0002 041E     		subs	r4, r0, #0
 769              	.LVL51:
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 770              		.loc 1 590 0
 771 0004 41D0     		beq	.L58
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 772              		.loc 1 599 0
 773 0006 426C     		ldr	r2, [r0, #68]
 774 0008 0223     		movs	r3, #2
 775 000a 1343     		orrs	r3, r2
 776 000c 4364     		str	r3, [r0, #68]
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 777              		.loc 1 602 0
 778 000e FFF7FEFF 		bl	ADC_ConversionStop
 779              	.LVL52:
 780 0012 051E     		subs	r5, r0, #0
 781              	.LVL53:
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {   
 782              		.loc 1 605 0
 783 0014 07D1     		bne	.L56
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 784              		.loc 1 608 0
 785 0016 2000     		movs	r0, r4
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 53


 786              	.LVL54:
 787 0018 FFF7FEFF 		bl	ADC_Disable
 788              	.LVL55:
 789 001c 0500     		movs	r5, r0
 790              	.LVL56:
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 791              		.loc 1 611 0
 792 001e 0128     		cmp	r0, #1
 793 0020 01D0     		beq	.L56
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 794              		.loc 1 614 0
 795 0022 0123     		movs	r3, #1
 796 0024 6364     		str	r3, [r4, #68]
 797              	.LVL57:
 798              	.L56:
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 799              		.loc 1 621 0
 800 0026 012D     		cmp	r5, #1
 801 0028 2AD0     		beq	.L57
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_IT_EOS   | ADC_IT_EOC  |
 802              		.loc 1 626 0
 803 002a 2168     		ldr	r1, [r4]
 804 002c 4B68     		ldr	r3, [r1, #4]
 805 002e 9F22     		movs	r2, #159
 806 0030 9343     		bics	r3, r2
 807 0032 4B60     		str	r3, [r1, #4]
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 808              		.loc 1 631 0
 809 0034 2368     		ldr	r3, [r4]
 810 0036 1A60     		str	r2, [r3]
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_
 811              		.loc 1 640 0
 812 0038 2268     		ldr	r2, [r4]
 813 003a D168     		ldr	r1, [r2, #12]
 814 003c 144B     		ldr	r3, .L59
 815 003e 0B40     		ands	r3, r1
 816 0040 D360     		str	r3, [r2, #12]
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 817              		.loc 1 648 0
 818 0042 2268     		ldr	r2, [r4]
 819 0044 1369     		ldr	r3, [r2, #16]
 820 0046 9B00     		lsls	r3, r3, #2
 821 0048 9B08     		lsrs	r3, r3, #2
 822 004a 1361     		str	r3, [r2, #16]
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 823              		.loc 1 651 0
 824 004c 2268     		ldr	r2, [r4]
 825 004e 5369     		ldr	r3, [r2, #20]
 826 0050 0721     		movs	r1, #7
 827 0052 8B43     		bics	r3, r1
 828 0054 5361     		str	r3, [r2, #20]
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 829              		.loc 1 654 0
 830 0056 2268     		ldr	r2, [r4]
 831 0058 116A     		ldr	r1, [r2, #32]
 832 005a 0E4B     		ldr	r3, .L59+4
 833 005c 0B40     		ands	r3, r1
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 54


 834 005e 1362     		str	r3, [r2, #32]
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_CHSELR_CHSEL15 | ADC_CHSELR_CHSEL14 | ADC_CHSELR_CHSEL13 | ADC_
 835              		.loc 1 657 0
 836 0060 2268     		ldr	r2, [r4]
 837 0062 936A     		ldr	r3, [r2, #40]
 838 0064 DB0C     		lsrs	r3, r3, #19
 839 0066 DB04     		lsls	r3, r3, #19
 840 0068 9362     		str	r3, [r2, #40]
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 841              		.loc 1 667 0
 842 006a 0B4A     		ldr	r2, .L59+8
 843 006c 1168     		ldr	r1, [r2]
 844 006e 0B4B     		ldr	r3, .L59+12
 845 0070 0B40     		ands	r3, r1
 846 0072 1360     		str	r3, [r2]
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 847              		.loc 1 679 0
 848 0074 2000     		movs	r0, r4
 849 0076 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 850              	.LVL58:
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 851              		.loc 1 682 0
 852 007a 0023     		movs	r3, #0
 853 007c A364     		str	r3, [r4, #72]
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 854              		.loc 1 685 0
 855 007e 6364     		str	r3, [r4, #68]
 856              	.L57:
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 857              		.loc 1 689 0
 858 0080 0022     		movs	r2, #0
 859 0082 4023     		movs	r3, #64
 860 0084 E254     		strb	r2, [r4, r3]
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 861              		.loc 1 692 0
 862 0086 2800     		movs	r0, r5
 863 0088 00E0     		b	.L55
 864              	.LVL59:
 865              	.L58:
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 866              		.loc 1 592 0
 867 008a 0120     		movs	r0, #1
 868              	.LVL60:
 869              	.L55:
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 870              		.loc 1 693 0
 871              		@ sp needed
 872              	.LVL61:
 873 008c 70BD     		pop	{r4, r5, r6, pc}
 874              	.L60:
 875 008e C046     		.align	2
 876              	.L59:
 877 0090 00023E83 		.word	-2093088256
 878 0094 00F000F0 		.word	-268374016
 879 0098 08270140 		.word	1073817352
 880 009c FFFF3FFF 		.word	-12582913
 881              		.cfi_endproc
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 55


 882              	.LFE36:
 884              		.section	.text.HAL_ADC_Start,"ax",%progbits
 885              		.align	2
 886              		.global	HAL_ADC_Start
 887              		.code	16
 888              		.thumb_func
 890              	HAL_ADC_Start:
 891              	.LFB39:
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 892              		.loc 1 759 0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 0
 895              		@ frame_needed = 0, uses_anonymous_args = 0
 896              	.LVL62:
 897 0000 10B5     		push	{r4, lr}
 898              	.LCFI6:
 899              		.cfi_def_cfa_offset 8
 900              		.cfi_offset 4, -8
 901              		.cfi_offset 14, -4
 902 0002 0400     		movs	r4, r0
 903              	.LVL63:
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 904              		.loc 1 766 0
 905 0004 0368     		ldr	r3, [r0]
 906 0006 9B68     		ldr	r3, [r3, #8]
 907 0008 5B07     		lsls	r3, r3, #29
 908 000a 23D4     		bmi	.L64
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 909              		.loc 1 769 0
 910 000c 4023     		movs	r3, #64
 911 000e C35C     		ldrb	r3, [r0, r3]
 912 0010 012B     		cmp	r3, #1
 913 0012 21D0     		beq	.L65
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 914              		.loc 1 769 0 is_stmt 0 discriminator 2
 915 0014 0122     		movs	r2, #1
 916 0016 4023     		movs	r3, #64
 917 0018 C254     		strb	r2, [r0, r3]
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 918              		.loc 1 774 0 is_stmt 1 discriminator 2
 919 001a C369     		ldr	r3, [r0, #28]
 920 001c 012B     		cmp	r3, #1
 921 001e 02D0     		beq	.L66
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 922              		.loc 1 776 0
 923 0020 FFF7FEFF 		bl	ADC_Enable
 924              	.LVL64:
 925 0024 00E0     		b	.L63
 926              	.LVL65:
 927              	.L66:
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 928              		.loc 1 760 0
 929 0026 0020     		movs	r0, #0
 930              	.LVL66:
 931              	.L63:
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 932              		.loc 1 780 0
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 56


 933 0028 0028     		cmp	r0, #0
 934 002a 16D1     		bne	.L62
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 935              		.loc 1 785 0
 936 002c 626C     		ldr	r2, [r4, #68]
 937 002e 0B4B     		ldr	r3, .L68
 938 0030 1340     		ands	r3, r2
 939 0032 8022     		movs	r2, #128
 940 0034 5200     		lsls	r2, r2, #1
 941 0036 1343     		orrs	r3, r2
 942 0038 6364     		str	r3, [r4, #68]
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 943              		.loc 1 790 0
 944 003a 0023     		movs	r3, #0
 945 003c A364     		str	r3, [r4, #72]
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 946              		.loc 1 795 0
 947 003e C03A     		subs	r2, r2, #192
 948 0040 A354     		strb	r3, [r4, r2]
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 949              		.loc 1 800 0
 950 0042 2368     		ldr	r3, [r4]
 951 0044 243A     		subs	r2, r2, #36
 952 0046 1A60     		str	r2, [r3]
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 953              		.loc 1 806 0
 954 0048 2268     		ldr	r2, [r4]
 955 004a 9168     		ldr	r1, [r2, #8]
 956 004c 0423     		movs	r3, #4
 957 004e 0B43     		orrs	r3, r1
 958 0050 9360     		str	r3, [r2, #8]
 959 0052 02E0     		b	.L62
 960              	.LVL67:
 961              	.L64:
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 962              		.loc 1 811 0
 963 0054 0220     		movs	r0, #2
 964              	.LVL68:
 965 0056 00E0     		b	.L62
 966              	.LVL69:
 967              	.L65:
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 968              		.loc 1 769 0
 969 0058 0220     		movs	r0, #2
 970              	.LVL70:
 971              	.L62:
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 972              		.loc 1 816 0
 973              		@ sp needed
 974              	.LVL71:
 975 005a 10BD     		pop	{r4, pc}
 976              	.L69:
 977              		.align	2
 978              	.L68:
 979 005c FEF0FFFF 		.word	-3842
 980              		.cfi_endproc
 981              	.LFE39:
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 57


 983              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 984              		.align	2
 985              		.global	HAL_ADC_Stop
 986              		.code	16
 987              		.thumb_func
 989              	HAL_ADC_Stop:
 990              	.LFB40:
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 991              		.loc 1 824 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 0
 994              		@ frame_needed = 0, uses_anonymous_args = 0
 995              	.LVL72:
 996 0000 10B5     		push	{r4, lr}
 997              	.LCFI7:
 998              		.cfi_def_cfa_offset 8
 999              		.cfi_offset 4, -8
 1000              		.cfi_offset 14, -4
 1001 0002 0400     		movs	r4, r0
 1002              	.LVL73:
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 1003              		.loc 1 831 0
 1004 0004 4023     		movs	r3, #64
 1005 0006 C35C     		ldrb	r3, [r0, r3]
 1006 0008 012B     		cmp	r3, #1
 1007 000a 15D0     		beq	.L73
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 1008              		.loc 1 831 0 is_stmt 0 discriminator 2
 1009 000c 0122     		movs	r2, #1
 1010 000e 4023     		movs	r3, #64
 1011 0010 C254     		strb	r2, [r0, r3]
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 1012              		.loc 1 834 0 is_stmt 1 discriminator 2
 1013 0012 FFF7FEFF 		bl	ADC_ConversionStop
 1014              	.LVL74:
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 1015              		.loc 1 837 0 discriminator 2
 1016 0016 0028     		cmp	r0, #0
 1017 0018 0AD1     		bne	.L72
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 1018              		.loc 1 840 0
 1019 001a 2000     		movs	r0, r4
 1020              	.LVL75:
 1021 001c FFF7FEFF 		bl	ADC_Disable
 1022              	.LVL76:
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 1023              		.loc 1 843 0
 1024 0020 0028     		cmp	r0, #0
 1025 0022 05D1     		bne	.L72
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 1026              		.loc 1 846 0
 1027 0024 626C     		ldr	r2, [r4, #68]
 1028 0026 054B     		ldr	r3, .L74
 1029 0028 1340     		ands	r3, r2
 1030 002a 0122     		movs	r2, #1
 1031 002c 1343     		orrs	r3, r2
 1032 002e 6364     		str	r3, [r4, #68]
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 58


 1033              	.LVL77:
 1034              	.L72:
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 1035              		.loc 1 853 0
 1036 0030 0022     		movs	r2, #0
 1037 0032 4023     		movs	r3, #64
 1038 0034 E254     		strb	r2, [r4, r3]
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 1039              		.loc 1 856 0
 1040 0036 00E0     		b	.L71
 1041              	.LVL78:
 1042              	.L73:
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 1043              		.loc 1 831 0
 1044 0038 0220     		movs	r0, #2
 1045              	.LVL79:
 1046              	.L71:
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 1047              		.loc 1 857 0
 1048              		@ sp needed
 1049              	.LVL80:
 1050 003a 10BD     		pop	{r4, pc}
 1051              	.L75:
 1052              		.align	2
 1053              	.L74:
 1054 003c FEFEFFFF 		.word	-258
 1055              		.cfi_endproc
 1056              	.LFE40:
 1058              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 1059              		.align	2
 1060              		.global	HAL_ADC_PollForConversion
 1061              		.code	16
 1062              		.thumb_func
 1064              	HAL_ADC_PollForConversion:
 1065              	.LFB41:
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   uint32_t tickstart;
 1066              		.loc 1 878 0
 1067              		.cfi_startproc
 1068              		@ args = 0, pretend = 0, frame = 0
 1069              		@ frame_needed = 0, uses_anonymous_args = 0
 1070              	.LVL81:
 1071 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1072              	.LCFI8:
 1073              		.cfi_def_cfa_offset 24
 1074              		.cfi_offset 3, -24
 1075              		.cfi_offset 4, -20
 1076              		.cfi_offset 5, -16
 1077              		.cfi_offset 6, -12
 1078              		.cfi_offset 7, -8
 1079              		.cfi_offset 14, -4
 1080 0002 0400     		movs	r4, r0
 1081 0004 0D00     		movs	r5, r1
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 1082              		.loc 1 886 0
 1083 0006 4369     		ldr	r3, [r0, #20]
 1084 0008 082B     		cmp	r3, #8
 1085 000a 0CD0     		beq	.L85
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 59


 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 1086              		.loc 1 899 0
 1087 000c 0368     		ldr	r3, [r0]
 1088 000e DB68     		ldr	r3, [r3, #12]
 1089 0010 DB07     		lsls	r3, r3, #31
 1090 0012 0AD5     		bpl	.L86
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 1091              		.loc 1 902 0
 1092 0014 426C     		ldr	r2, [r0, #68]
 1093 0016 2023     		movs	r3, #32
 1094 0018 1343     		orrs	r3, r2
 1095 001a 4364     		str	r3, [r0, #68]
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 1096              		.loc 1 905 0
 1097 001c 0022     		movs	r2, #0
 1098 001e 4023     		movs	r3, #64
 1099 0020 C254     		strb	r2, [r0, r3]
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 1100              		.loc 1 907 0
 1101 0022 0120     		movs	r0, #1
 1102              	.LVL82:
 1103 0024 4CE0     		b	.L78
 1104              	.LVL83:
 1105              	.L85:
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 1106              		.loc 1 888 0
 1107 0026 0826     		movs	r6, #8
 1108 0028 00E0     		b	.L77
 1109              	.L86:
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 1110              		.loc 1 911 0
 1111 002a 0C26     		movs	r6, #12
 1112              	.L77:
 1113              	.LVL84:
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 1114              		.loc 1 916 0
 1115 002c FFF7FEFF 		bl	HAL_GetTick
 1116              	.LVL85:
 1117 0030 0700     		movs	r7, r0
 1118              	.LVL86:
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 1119              		.loc 1 919 0
 1120 0032 11E0     		b	.L80
 1121              	.LVL87:
 1122              	.L82:
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 1123              		.loc 1 922 0
 1124 0034 6B1C     		adds	r3, r5, #1
 1125 0036 0FD0     		beq	.L80
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 1126              		.loc 1 924 0
 1127 0038 002D     		cmp	r5, #0
 1128 003a 04D0     		beq	.L81
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 1129              		.loc 1 924 0 is_stmt 0 discriminator 1
 1130 003c FFF7FEFF 		bl	HAL_GetTick
 1131              	.LVL88:
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 60


 1132 0040 C01B     		subs	r0, r0, r7
 1133 0042 8542     		cmp	r5, r0
 1134 0044 08D2     		bcs	.L80
 1135              	.L81:
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
 1136              		.loc 1 927 0 is_stmt 1
 1137 0046 626C     		ldr	r2, [r4, #68]
 1138 0048 0423     		movs	r3, #4
 1139 004a 1343     		orrs	r3, r2
 1140 004c 6364     		str	r3, [r4, #68]
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
 1141              		.loc 1 930 0
 1142 004e 0022     		movs	r2, #0
 1143 0050 4023     		movs	r3, #64
 1144 0052 E254     		strb	r2, [r4, r3]
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
 1145              		.loc 1 932 0
 1146 0054 0320     		movs	r0, #3
 1147 0056 33E0     		b	.L78
 1148              	.L80:
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 1149              		.loc 1 919 0
 1150 0058 2368     		ldr	r3, [r4]
 1151 005a 1A68     		ldr	r2, [r3]
 1152 005c 3242     		tst	r2, r6
 1153 005e E9D0     		beq	.L82
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 1154              		.loc 1 938 0
 1155 0060 626C     		ldr	r2, [r4, #68]
 1156 0062 8021     		movs	r1, #128
 1157 0064 8900     		lsls	r1, r1, #2
 1158 0066 0A43     		orrs	r2, r1
 1159 0068 6264     		str	r2, [r4, #68]
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)   )
 1160              		.loc 1 942 0
 1161 006a D968     		ldr	r1, [r3, #12]
 1162 006c C022     		movs	r2, #192
 1163 006e 1201     		lsls	r2, r2, #4
 1164 0070 1142     		tst	r1, r2
 1165 0072 1CD1     		bne	.L83
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)   )
 1166              		.loc 1 942 0 is_stmt 0 discriminator 1
 1167 0074 226A     		ldr	r2, [r4, #32]
 1168 0076 002A     		cmp	r2, #0
 1169 0078 19D1     		bne	.L83
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 1170              		.loc 1 946 0 is_stmt 1
 1171 007a 1A68     		ldr	r2, [r3]
 1172 007c 1207     		lsls	r2, r2, #28
 1173 007e 16D5     		bpl	.L83
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 1174              		.loc 1 950 0
 1175 0080 9A68     		ldr	r2, [r3, #8]
 1176 0082 5207     		lsls	r2, r2, #29
 1177 0084 0BD4     		bmi	.L84
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
 1178              		.loc 1 956 0
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 61


 1179 0086 5A68     		ldr	r2, [r3, #4]
 1180 0088 0C21     		movs	r1, #12
 1181 008a 8A43     		bics	r2, r1
 1182 008c 5A60     		str	r2, [r3, #4]
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY,
 1183              		.loc 1 959 0
 1184 008e 626C     		ldr	r2, [r4, #68]
 1185 0090 0C4B     		ldr	r3, .L88
 1186 0092 1A40     		ands	r2, r3
 1187 0094 0433     		adds	r3, r3, #4
 1188 0096 FF33     		adds	r3, r3, #255
 1189 0098 1343     		orrs	r3, r2
 1190 009a 6364     		str	r3, [r4, #68]
 1191 009c 07E0     		b	.L83
 1192              	.L84:
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
 1193              		.loc 1 966 0
 1194 009e 626C     		ldr	r2, [r4, #68]
 1195 00a0 2023     		movs	r3, #32
 1196 00a2 1343     		orrs	r3, r2
 1197 00a4 6364     		str	r3, [r4, #68]
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
 1198              		.loc 1 969 0
 1199 00a6 A26C     		ldr	r2, [r4, #72]
 1200 00a8 0123     		movs	r3, #1
 1201 00aa 1343     		orrs	r3, r2
 1202 00ac A364     		str	r3, [r4, #72]
 1203              	.L83:
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 1204              		.loc 1 977 0
 1205 00ae A369     		ldr	r3, [r4, #24]
 1206 00b0 002B     		cmp	r3, #0
 1207 00b2 04D1     		bne	.L87
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 1208              		.loc 1 980 0
 1209 00b4 2368     		ldr	r3, [r4]
 1210 00b6 0C22     		movs	r2, #12
 1211 00b8 1A60     		str	r2, [r3]
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 1212              		.loc 1 984 0
 1213 00ba 0020     		movs	r0, #0
 1214 00bc 00E0     		b	.L78
 1215              	.L87:
 1216 00be 0020     		movs	r0, #0
 1217              	.LVL89:
 1218              	.L78:
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 1219              		.loc 1 985 0
 1220              		@ sp needed
 1221              	.LVL90:
 1222              	.LVL91:
 1223 00c0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1224              	.L89:
 1225 00c2 C046     		.align	2
 1226              	.L88:
 1227 00c4 FEFEFFFF 		.word	-258
 1228              		.cfi_endproc
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 62


 1229              	.LFE41:
 1231              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 1232              		.align	2
 1233              		.global	HAL_ADC_PollForEvent
 1234              		.code	16
 1235              		.thumb_func
 1237              	HAL_ADC_PollForEvent:
 1238              	.LFB42:
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   uint32_t tickstart=0; 
 1239              		.loc 1 998 0
 1240              		.cfi_startproc
 1241              		@ args = 0, pretend = 0, frame = 0
 1242              		@ frame_needed = 0, uses_anonymous_args = 0
 1243              	.LVL92:
 1244 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1245              	.LCFI9:
 1246              		.cfi_def_cfa_offset 24
 1247              		.cfi_offset 3, -24
 1248              		.cfi_offset 4, -20
 1249              		.cfi_offset 5, -16
 1250              		.cfi_offset 6, -12
 1251              		.cfi_offset 7, -8
 1252              		.cfi_offset 14, -4
 1253 0002 0500     		movs	r5, r0
 1254 0004 0C00     		movs	r4, r1
 1255 0006 1600     		movs	r6, r2
 1256              	.LVL93:
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 1257              		.loc 1 1006 0
 1258 0008 FFF7FEFF 		bl	HAL_GetTick
 1259              	.LVL94:
 1260 000c 0700     		movs	r7, r0
 1261              	.LVL95:
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 1262              		.loc 1 1009 0
 1263 000e 11E0     		b	.L92
 1264              	.LVL96:
 1265              	.L95:
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 1266              		.loc 1 1012 0
 1267 0010 731C     		adds	r3, r6, #1
 1268 0012 0FD0     		beq	.L92
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 1269              		.loc 1 1014 0
 1270 0014 002E     		cmp	r6, #0
 1271 0016 04D0     		beq	.L93
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 1272              		.loc 1 1014 0 is_stmt 0 discriminator 1
 1273 0018 FFF7FEFF 		bl	HAL_GetTick
 1274              	.LVL97:
 1275 001c C01B     		subs	r0, r0, r7
 1276 001e 8642     		cmp	r6, r0
 1277 0020 08D2     		bcs	.L92
 1278              	.L93:
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
 1279              		.loc 1 1017 0 is_stmt 1
 1280 0022 6A6C     		ldr	r2, [r5, #68]
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 63


 1281 0024 0423     		movs	r3, #4
 1282 0026 1343     		orrs	r3, r2
 1283 0028 6B64     		str	r3, [r5, #68]
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
 1284              		.loc 1 1020 0
 1285 002a 0022     		movs	r2, #0
 1286 002c 4023     		movs	r3, #64
 1287 002e EA54     		strb	r2, [r5, r3]
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
 1288              		.loc 1 1022 0
 1289 0030 0320     		movs	r0, #3
 1290 0032 1EE0     		b	.L94
 1291              	.L92:
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 1292              		.loc 1 1009 0
 1293 0034 2A68     		ldr	r2, [r5]
 1294 0036 1368     		ldr	r3, [r2]
 1295 0038 2340     		ands	r3, r4
 1296 003a 9C42     		cmp	r4, r3
 1297 003c E8D1     		bne	.L95
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 1298              		.loc 1 1027 0
 1299 003e 802C     		cmp	r4, #128
 1300 0040 08D1     		bne	.L99
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 1301              		.loc 1 1032 0
 1302 0042 6B6C     		ldr	r3, [r5, #68]
 1303 0044 8021     		movs	r1, #128
 1304 0046 4902     		lsls	r1, r1, #9
 1305 0048 0B43     		orrs	r3, r1
 1306 004a 6B64     		str	r3, [r5, #68]
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     break;
 1307              		.loc 1 1035 0
 1308 004c 8023     		movs	r3, #128
 1309 004e 1360     		str	r3, [r2]
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 1310              		.loc 1 1059 0
 1311 0050 0020     		movs	r0, #0
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 1312              		.loc 1 1036 0
 1313 0052 0EE0     		b	.L94
 1314              	.L99:
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 1315              		.loc 1 1044 0
 1316 0054 6B6B     		ldr	r3, [r5, #52]
 1317 0056 012B     		cmp	r3, #1
 1318 0058 08D1     		bne	.L98
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
 1319              		.loc 1 1047 0
 1320 005a 6B6C     		ldr	r3, [r5, #68]
 1321 005c 8021     		movs	r1, #128
 1322 005e C900     		lsls	r1, r1, #3
 1323 0060 0B43     		orrs	r3, r1
 1324 0062 6B64     		str	r3, [r5, #68]
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 1325              		.loc 1 1050 0
 1326 0064 A96C     		ldr	r1, [r5, #72]
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 64


 1327 0066 0223     		movs	r3, #2
 1328 0068 0B43     		orrs	r3, r1
 1329 006a AB64     		str	r3, [r5, #72]
 1330              	.L98:
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     break;
 1331              		.loc 1 1054 0
 1332 006c 1023     		movs	r3, #16
 1333 006e 1360     		str	r3, [r2]
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 1334              		.loc 1 1059 0
 1335 0070 0020     		movs	r0, #0
 1336              	.L94:
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 1337              		.loc 1 1060 0
 1338              		@ sp needed
 1339              	.LVL98:
 1340              	.LVL99:
 1341              	.LVL100:
 1342              	.LVL101:
 1343 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1344              		.cfi_endproc
 1345              	.LFE42:
 1347              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 1348              		.align	2
 1349              		.global	HAL_ADC_Start_IT
 1350              		.code	16
 1351              		.thumb_func
 1353              	HAL_ADC_Start_IT:
 1354              	.LFB43:
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1355              		.loc 1 1074 0
 1356              		.cfi_startproc
 1357              		@ args = 0, pretend = 0, frame = 0
 1358              		@ frame_needed = 0, uses_anonymous_args = 0
 1359              	.LVL102:
 1360 0000 10B5     		push	{r4, lr}
 1361              	.LCFI10:
 1362              		.cfi_def_cfa_offset 8
 1363              		.cfi_offset 4, -8
 1364              		.cfi_offset 14, -4
 1365 0002 0400     		movs	r4, r0
 1366              	.LVL103:
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 1367              		.loc 1 1081 0
 1368 0004 0368     		ldr	r3, [r0]
 1369 0006 9B68     		ldr	r3, [r3, #8]
 1370 0008 5B07     		lsls	r3, r3, #29
 1371 000a 36D4     		bmi	.L106
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      
 1372              		.loc 1 1084 0
 1373 000c 4023     		movs	r3, #64
 1374 000e C35C     		ldrb	r3, [r0, r3]
 1375 0010 012B     		cmp	r3, #1
 1376 0012 34D0     		beq	.L107
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      
 1377              		.loc 1 1084 0 is_stmt 0 discriminator 2
 1378 0014 0122     		movs	r2, #1
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 65


 1379 0016 4023     		movs	r3, #64
 1380 0018 C254     		strb	r2, [r0, r3]
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 1381              		.loc 1 1089 0 is_stmt 1 discriminator 2
 1382 001a C369     		ldr	r3, [r0, #28]
 1383 001c 012B     		cmp	r3, #1
 1384 001e 02D0     		beq	.L108
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 1385              		.loc 1 1091 0
 1386 0020 FFF7FEFF 		bl	ADC_Enable
 1387              	.LVL104:
 1388 0024 00E0     		b	.L102
 1389              	.LVL105:
 1390              	.L108:
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 1391              		.loc 1 1075 0
 1392 0026 0020     		movs	r0, #0
 1393              	.LVL106:
 1394              	.L102:
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 1395              		.loc 1 1095 0
 1396 0028 0028     		cmp	r0, #0
 1397 002a 29D1     		bne	.L101
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 1398              		.loc 1 1100 0
 1399 002c 626C     		ldr	r2, [r4, #68]
 1400 002e 154B     		ldr	r3, .L111
 1401 0030 1340     		ands	r3, r2
 1402 0032 8022     		movs	r2, #128
 1403 0034 5200     		lsls	r2, r2, #1
 1404 0036 1343     		orrs	r3, r2
 1405 0038 6364     		str	r3, [r4, #68]
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 1406              		.loc 1 1105 0
 1407 003a 0023     		movs	r3, #0
 1408 003c A364     		str	r3, [r4, #72]
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 1409              		.loc 1 1110 0
 1410 003e C03A     		subs	r2, r2, #192
 1411 0040 A354     		strb	r3, [r4, r2]
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 1412              		.loc 1 1115 0
 1413 0042 2368     		ldr	r3, [r4]
 1414 0044 243A     		subs	r2, r2, #36
 1415 0046 1A60     		str	r2, [r3]
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 1416              		.loc 1 1119 0
 1417 0048 6369     		ldr	r3, [r4, #20]
 1418 004a 082B     		cmp	r3, #8
 1419 004c 0AD1     		bne	.L110
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOS | ADC_IT_OVR));
 1420              		.loc 1 1122 0
 1421 004e 2268     		ldr	r2, [r4]
 1422 0050 5368     		ldr	r3, [r2, #4]
 1423 0052 0421     		movs	r1, #4
 1424 0054 8B43     		bics	r3, r1
 1425 0056 5360     		str	r3, [r2, #4]
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 66


1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           break;
 1426              		.loc 1 1123 0
 1427 0058 2268     		ldr	r2, [r4]
 1428 005a 5168     		ldr	r1, [r2, #4]
 1429 005c 1823     		movs	r3, #24
 1430 005e 0B43     		orrs	r3, r1
 1431 0060 5360     		str	r3, [r2, #4]
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
 1432              		.loc 1 1124 0
 1433 0062 04E0     		b	.L105
 1434              	.L110:
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           break;
 1435              		.loc 1 1127 0
 1436 0064 2268     		ldr	r2, [r4]
 1437 0066 5168     		ldr	r1, [r2, #4]
 1438 0068 1C23     		movs	r3, #28
 1439 006a 0B43     		orrs	r3, r1
 1440 006c 5360     		str	r3, [r2, #4]
 1441              	.L105:
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 1442              		.loc 1 1135 0
 1443 006e 2268     		ldr	r2, [r4]
 1444 0070 9168     		ldr	r1, [r2, #8]
 1445 0072 0423     		movs	r3, #4
 1446 0074 0B43     		orrs	r3, r1
 1447 0076 9360     		str	r3, [r2, #8]
 1448 0078 02E0     		b	.L101
 1449              	.LVL107:
 1450              	.L106:
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }    
 1451              		.loc 1 1140 0
 1452 007a 0220     		movs	r0, #2
 1453              	.LVL108:
 1454 007c 00E0     		b	.L101
 1455              	.LVL109:
 1456              	.L107:
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****      
 1457              		.loc 1 1084 0
 1458 007e 0220     		movs	r0, #2
 1459              	.LVL110:
 1460              	.L101:
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 1461              		.loc 1 1145 0
 1462              		@ sp needed
 1463              	.LVL111:
 1464 0080 10BD     		pop	{r4, pc}
 1465              	.L112:
 1466 0082 C046     		.align	2
 1467              	.L111:
 1468 0084 FEF0FFFF 		.word	-3842
 1469              		.cfi_endproc
 1470              	.LFE43:
 1472              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 1473              		.align	2
 1474              		.global	HAL_ADC_Stop_IT
 1475              		.code	16
 1476              		.thumb_func
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 67


 1478              	HAL_ADC_Stop_IT:
 1479              	.LFB44:
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1480              		.loc 1 1155 0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 0
 1483              		@ frame_needed = 0, uses_anonymous_args = 0
 1484              	.LVL112:
 1485 0000 10B5     		push	{r4, lr}
 1486              	.LCFI11:
 1487              		.cfi_def_cfa_offset 8
 1488              		.cfi_offset 4, -8
 1489              		.cfi_offset 14, -4
 1490 0002 0400     		movs	r4, r0
 1491              	.LVL113:
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 1492              		.loc 1 1162 0
 1493 0004 4023     		movs	r3, #64
 1494 0006 C35C     		ldrb	r3, [r0, r3]
 1495 0008 012B     		cmp	r3, #1
 1496 000a 1AD0     		beq	.L116
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 1497              		.loc 1 1162 0 is_stmt 0 discriminator 2
 1498 000c 0122     		movs	r2, #1
 1499 000e 4023     		movs	r3, #64
 1500 0010 C254     		strb	r2, [r0, r3]
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****    
 1501              		.loc 1 1165 0 is_stmt 1 discriminator 2
 1502 0012 FFF7FEFF 		bl	ADC_ConversionStop
 1503              	.LVL114:
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 1504              		.loc 1 1168 0 discriminator 2
 1505 0016 0028     		cmp	r0, #0
 1506 0018 0FD1     		bne	.L115
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 1507              		.loc 1 1172 0
 1508 001a 2268     		ldr	r2, [r4]
 1509 001c 5368     		ldr	r3, [r2, #4]
 1510 001e 1C21     		movs	r1, #28
 1511 0020 8B43     		bics	r3, r1
 1512 0022 5360     		str	r3, [r2, #4]
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 1513              		.loc 1 1175 0
 1514 0024 2000     		movs	r0, r4
 1515              	.LVL115:
 1516 0026 FFF7FEFF 		bl	ADC_Disable
 1517              	.LVL116:
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 1518              		.loc 1 1178 0
 1519 002a 0028     		cmp	r0, #0
 1520 002c 05D1     		bne	.L115
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 1521              		.loc 1 1181 0
 1522 002e 626C     		ldr	r2, [r4, #68]
 1523 0030 054B     		ldr	r3, .L117
 1524 0032 1340     		ands	r3, r2
 1525 0034 0122     		movs	r2, #1
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 68


 1526 0036 1343     		orrs	r3, r2
 1527 0038 6364     		str	r3, [r4, #68]
 1528              	.LVL117:
 1529              	.L115:
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 1530              		.loc 1 1188 0
 1531 003a 0022     		movs	r2, #0
 1532 003c 4023     		movs	r3, #64
 1533 003e E254     		strb	r2, [r4, r3]
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 1534              		.loc 1 1191 0
 1535 0040 00E0     		b	.L114
 1536              	.LVL118:
 1537              	.L116:
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 1538              		.loc 1 1162 0
 1539 0042 0220     		movs	r0, #2
 1540              	.LVL119:
 1541              	.L114:
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 1542              		.loc 1 1192 0
 1543              		@ sp needed
 1544              	.LVL120:
 1545 0044 10BD     		pop	{r4, pc}
 1546              	.L118:
 1547 0046 C046     		.align	2
 1548              	.L117:
 1549 0048 FEFEFFFF 		.word	-258
 1550              		.cfi_endproc
 1551              	.LFE44:
 1553              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 1554              		.align	2
 1555              		.global	HAL_ADC_Start_DMA
 1556              		.code	16
 1557              		.thumb_func
 1559              	HAL_ADC_Start_DMA:
 1560              	.LFB45:
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1561              		.loc 1 1208 0
 1562              		.cfi_startproc
 1563              		@ args = 0, pretend = 0, frame = 0
 1564              		@ frame_needed = 0, uses_anonymous_args = 0
 1565              	.LVL121:
 1566 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1567              	.LCFI12:
 1568              		.cfi_def_cfa_offset 24
 1569              		.cfi_offset 3, -24
 1570              		.cfi_offset 4, -20
 1571              		.cfi_offset 5, -16
 1572              		.cfi_offset 6, -12
 1573              		.cfi_offset 7, -8
 1574              		.cfi_offset 14, -4
 1575 0002 0400     		movs	r4, r0
 1576 0004 0E00     		movs	r6, r1
 1577 0006 1700     		movs	r7, r2
 1578              	.LVL122:
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 69


 1579              		.loc 1 1215 0
 1580 0008 0368     		ldr	r3, [r0]
 1581 000a 9B68     		ldr	r3, [r3, #8]
 1582 000c 5B07     		lsls	r3, r3, #29
 1583 000e 3FD4     		bmi	.L122
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 1584              		.loc 1 1218 0
 1585 0010 4023     		movs	r3, #64
 1586 0012 C35C     		ldrb	r3, [r0, r3]
 1587 0014 012B     		cmp	r3, #1
 1588 0016 3DD0     		beq	.L123
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 1589              		.loc 1 1218 0 is_stmt 0 discriminator 2
 1590 0018 0122     		movs	r2, #1
 1591              	.LVL123:
 1592 001a 4023     		movs	r3, #64
 1593 001c C254     		strb	r2, [r0, r3]
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 1594              		.loc 1 1223 0 is_stmt 1 discriminator 2
 1595 001e C369     		ldr	r3, [r0, #28]
 1596 0020 012B     		cmp	r3, #1
 1597 0022 03D0     		beq	.L124
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 1598              		.loc 1 1225 0
 1599 0024 FFF7FEFF 		bl	ADC_Enable
 1600              	.LVL124:
 1601 0028 0500     		movs	r5, r0
 1602              	.LVL125:
 1603 002a 00E0     		b	.L121
 1604              	.LVL126:
 1605              	.L124:
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 1606              		.loc 1 1209 0
 1607 002c 0025     		movs	r5, #0
 1608              	.LVL127:
 1609              	.L121:
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 1610              		.loc 1 1229 0
 1611 002e 002D     		cmp	r5, #0
 1612 0030 32D1     		bne	.L125
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 1613              		.loc 1 1234 0
 1614 0032 626C     		ldr	r2, [r4, #68]
 1615 0034 194B     		ldr	r3, .L126
 1616 0036 1340     		ands	r3, r2
 1617 0038 8022     		movs	r2, #128
 1618 003a 5200     		lsls	r2, r2, #1
 1619 003c 1343     		orrs	r3, r2
 1620 003e 6364     		str	r3, [r4, #68]
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 1621              		.loc 1 1239 0
 1622 0040 0023     		movs	r3, #0
 1623 0042 A364     		str	r3, [r4, #72]
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 1624              		.loc 1 1244 0
 1625 0044 C03A     		subs	r2, r2, #192
 1626 0046 A354     		strb	r3, [r4, r2]
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 70


1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 1627              		.loc 1 1247 0
 1628 0048 E36B     		ldr	r3, [r4, #60]
 1629 004a 154A     		ldr	r2, .L126+4
 1630 004c 9A62     		str	r2, [r3, #40]
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 1631              		.loc 1 1250 0
 1632 004e E36B     		ldr	r3, [r4, #60]
 1633 0050 144A     		ldr	r2, .L126+8
 1634 0052 DA62     		str	r2, [r3, #44]
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 1635              		.loc 1 1253 0
 1636 0054 E36B     		ldr	r3, [r4, #60]
 1637 0056 144A     		ldr	r2, .L126+12
 1638 0058 1A63     		str	r2, [r3, #48]
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 1639              		.loc 1 1262 0
 1640 005a 2368     		ldr	r3, [r4]
 1641 005c 1C22     		movs	r2, #28
 1642 005e 1A60     		str	r2, [r3]
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 1643              		.loc 1 1265 0
 1644 0060 2268     		ldr	r2, [r4]
 1645 0062 5168     		ldr	r1, [r2, #4]
 1646 0064 1023     		movs	r3, #16
 1647 0066 0B43     		orrs	r3, r1
 1648 0068 5360     		str	r3, [r2, #4]
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 1649              		.loc 1 1268 0
 1650 006a 2268     		ldr	r2, [r4]
 1651 006c D168     		ldr	r1, [r2, #12]
 1652 006e 0123     		movs	r3, #1
 1653 0070 0B43     		orrs	r3, r1
 1654 0072 D360     		str	r3, [r2, #12]
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****            
 1655              		.loc 1 1271 0
 1656 0074 2168     		ldr	r1, [r4]
 1657 0076 4031     		adds	r1, r1, #64
 1658 0078 3B00     		movs	r3, r7
 1659 007a 3200     		movs	r2, r6
 1660 007c E06B     		ldr	r0, [r4, #60]
 1661 007e FFF7FEFF 		bl	HAL_DMA_Start_IT
 1662              	.LVL128:
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 1663              		.loc 1 1277 0
 1664 0082 2268     		ldr	r2, [r4]
 1665 0084 9168     		ldr	r1, [r2, #8]
 1666 0086 0423     		movs	r3, #4
 1667 0088 0B43     		orrs	r3, r1
 1668 008a 9360     		str	r3, [r2, #8]
 1669 008c 2800     		movs	r0, r5
 1670 008e 04E0     		b	.L120
 1671              	.LVL129:
 1672              	.L122:
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 1673              		.loc 1 1282 0
 1674 0090 0220     		movs	r0, #2
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 71


 1675              	.LVL130:
 1676 0092 02E0     		b	.L120
 1677              	.LVL131:
 1678              	.L123:
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 1679              		.loc 1 1218 0
 1680 0094 0220     		movs	r0, #2
 1681              	.LVL132:
 1682 0096 00E0     		b	.L120
 1683              	.LVL133:
 1684              	.L125:
 1685 0098 2800     		movs	r0, r5
 1686              	.LVL134:
 1687              	.L120:
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 1688              		.loc 1 1287 0
 1689              		@ sp needed
 1690              	.LVL135:
 1691              	.LVL136:
 1692              	.LVL137:
 1693 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1694              	.L127:
 1695              		.align	2
 1696              	.L126:
 1697 009c FEF0FFFF 		.word	-3842
 1698 00a0 00000000 		.word	ADC_DMAConvCplt
 1699 00a4 00000000 		.word	ADC_DMAHalfConvCplt
 1700 00a8 00000000 		.word	ADC_DMAError
 1701              		.cfi_endproc
 1702              	.LFE45:
 1704              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 1705              		.align	2
 1706              		.global	HAL_ADC_Stop_DMA
 1707              		.code	16
 1708              		.thumb_func
 1710              	HAL_ADC_Stop_DMA:
 1711              	.LFB46:
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1712              		.loc 1 1297 0
 1713              		.cfi_startproc
 1714              		@ args = 0, pretend = 0, frame = 0
 1715              		@ frame_needed = 0, uses_anonymous_args = 0
 1716              	.LVL138:
 1717 0000 70B5     		push	{r4, r5, r6, lr}
 1718              	.LCFI13:
 1719              		.cfi_def_cfa_offset 16
 1720              		.cfi_offset 4, -16
 1721              		.cfi_offset 5, -12
 1722              		.cfi_offset 6, -8
 1723              		.cfi_offset 14, -4
 1724 0002 0500     		movs	r5, r0
 1725              	.LVL139:
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 1726              		.loc 1 1304 0
 1727 0004 4023     		movs	r3, #64
 1728 0006 C35C     		ldrb	r3, [r0, r3]
 1729 0008 012B     		cmp	r3, #1
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 72


 1730 000a 30D0     		beq	.L134
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 1731              		.loc 1 1304 0 is_stmt 0 discriminator 2
 1732 000c 0122     		movs	r2, #1
 1733 000e 4023     		movs	r3, #64
 1734 0010 C254     		strb	r2, [r0, r3]
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 1735              		.loc 1 1307 0 is_stmt 1 discriminator 2
 1736 0012 FFF7FEFF 		bl	ADC_ConversionStop
 1737              	.LVL140:
 1738 0016 041E     		subs	r4, r0, #0
 1739              	.LVL141:
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 1740              		.loc 1 1310 0 discriminator 2
 1741 0018 24D1     		bne	.L130
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 1742              		.loc 1 1313 0
 1743 001a 2A68     		ldr	r2, [r5]
 1744 001c D368     		ldr	r3, [r2, #12]
 1745 001e 0121     		movs	r1, #1
 1746 0020 8B43     		bics	r3, r1
 1747 0022 D360     		str	r3, [r2, #12]
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 1748              		.loc 1 1317 0
 1749 0024 E86B     		ldr	r0, [r5, #60]
 1750              	.LVL142:
 1751 0026 FFF7FEFF 		bl	HAL_DMA_Abort
 1752              	.LVL143:
 1753 002a 041E     		subs	r4, r0, #0
 1754              	.LVL144:
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 1755              		.loc 1 1320 0
 1756 002c 03D0     		beq	.L131
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 1757              		.loc 1 1323 0
 1758 002e 6A6C     		ldr	r2, [r5, #68]
 1759 0030 4023     		movs	r3, #64
 1760 0032 1343     		orrs	r3, r2
 1761 0034 6B64     		str	r3, [r5, #68]
 1762              	.L131:
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 1763              		.loc 1 1327 0
 1764 0036 2A68     		ldr	r2, [r5]
 1765 0038 5368     		ldr	r3, [r2, #4]
 1766 003a 1021     		movs	r1, #16
 1767 003c 8B43     		bics	r3, r1
 1768 003e 5360     		str	r3, [r2, #4]
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 1769              		.loc 1 1332 0
 1770 0040 002C     		cmp	r4, #0
 1771 0042 04D1     		bne	.L132
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 1772              		.loc 1 1334 0
 1773 0044 2800     		movs	r0, r5
 1774              	.LVL145:
 1775 0046 FFF7FEFF 		bl	ADC_Disable
 1776              	.LVL146:
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 73


 1777 004a 0400     		movs	r4, r0
 1778              	.LVL147:
 1779 004c 02E0     		b	.L133
 1780              	.L132:
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 1781              		.loc 1 1338 0
 1782 004e 2800     		movs	r0, r5
 1783              	.LVL148:
 1784 0050 FFF7FEFF 		bl	ADC_Disable
 1785              	.LVL149:
 1786              	.L133:
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 1787              		.loc 1 1342 0
 1788 0054 002C     		cmp	r4, #0
 1789 0056 05D1     		bne	.L130
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 1790              		.loc 1 1345 0
 1791 0058 6A6C     		ldr	r2, [r5, #68]
 1792 005a 064B     		ldr	r3, .L135
 1793 005c 1340     		ands	r3, r2
 1794 005e 0122     		movs	r2, #1
 1795 0060 1343     		orrs	r3, r2
 1796 0062 6B64     		str	r3, [r5, #68]
 1797              	.LVL150:
 1798              	.L130:
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 1799              		.loc 1 1353 0
 1800 0064 0022     		movs	r2, #0
 1801 0066 4023     		movs	r3, #64
 1802 0068 EA54     		strb	r2, [r5, r3]
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 1803              		.loc 1 1356 0
 1804 006a 2000     		movs	r0, r4
 1805 006c 00E0     		b	.L129
 1806              	.LVL151:
 1807              	.L134:
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 1808              		.loc 1 1304 0
 1809 006e 0220     		movs	r0, #2
 1810              	.LVL152:
 1811              	.L129:
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 1812              		.loc 1 1357 0
 1813              		@ sp needed
 1814              	.LVL153:
 1815 0070 70BD     		pop	{r4, r5, r6, pc}
 1816              	.L136:
 1817 0072 C046     		.align	2
 1818              	.L135:
 1819 0074 FEFEFFFF 		.word	-258
 1820              		.cfi_endproc
 1821              	.LFE46:
 1823              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 1824              		.align	2
 1825              		.global	HAL_ADC_GetValue
 1826              		.code	16
 1827              		.thumb_func
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 74


 1829              	HAL_ADC_GetValue:
 1830              	.LFB47:
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check the parameters */
 1831              		.loc 1 1379 0
 1832              		.cfi_startproc
 1833              		@ args = 0, pretend = 0, frame = 0
 1834              		@ frame_needed = 0, uses_anonymous_args = 0
 1835              		@ link register save eliminated.
 1836              	.LVL154:
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 1837              		.loc 1 1387 0
 1838 0000 0368     		ldr	r3, [r0]
 1839 0002 186C     		ldr	r0, [r3, #64]
 1840              	.LVL155:
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 1841              		.loc 1 1388 0
 1842              		@ sp needed
 1843 0004 7047     		bx	lr
 1844              		.cfi_endproc
 1845              	.LFE47:
 1847 0006 C046     		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 1848              		.align	2
 1849              		.weak	HAL_ADC_ConvCpltCallback
 1850              		.code	16
 1851              		.thumb_func
 1853              	HAL_ADC_ConvCpltCallback:
 1854              	.LFB49:
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1855              		.loc 1 1512 0
 1856              		.cfi_startproc
 1857              		@ args = 0, pretend = 0, frame = 0
 1858              		@ frame_needed = 0, uses_anonymous_args = 0
 1859              		@ link register save eliminated.
 1860              	.LVL156:
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 1861              		.loc 1 1519 0
 1862              		@ sp needed
 1863 0000 7047     		bx	lr
 1864              		.cfi_endproc
 1865              	.LFE49:
 1867 0002 C046     		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 1868              		.align	2
 1869              		.code	16
 1870              		.thumb_func
 1872              	ADC_DMAConvCplt:
 1873              	.LFB60:
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
2077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
2078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  DMA transfer complete callback. 
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hdma pointer to DMA handle.
2081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval None
2082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
2083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
2084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
 1874              		.loc 1 2084 0
 1875              		.cfi_startproc
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 75


 1876              		@ args = 0, pretend = 0, frame = 0
 1877              		@ frame_needed = 0, uses_anonymous_args = 0
 1878              	.LVL157:
 1879 0000 10B5     		push	{r4, lr}
 1880              	.LCFI14:
 1881              		.cfi_def_cfa_offset 8
 1882              		.cfi_offset 4, -8
 1883              		.cfi_offset 14, -4
2085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1884              		.loc 1 2086 0
 1885 0002 436A     		ldr	r3, [r0, #36]
 1886              	.LVL158:
2087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
2088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 1887              		.loc 1 2089 0
 1888 0004 5A6C     		ldr	r2, [r3, #68]
 1889 0006 5021     		movs	r1, #80
 1890 0008 1142     		tst	r1, r2
 1891 000a 2AD1     		bne	.L140
2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Set ADC state */
2092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
 1892              		.loc 1 2092 0
 1893 000c 5A6C     		ldr	r2, [r3, #68]
 1894 000e B131     		adds	r1, r1, #177
 1895 0010 FF31     		adds	r1, r1, #255
 1896 0012 0A43     		orrs	r2, r1
 1897 0014 5A64     		str	r2, [r3, #68]
2093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
2094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.        */
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
 1898              		.loc 1 2096 0
 1899 0016 1A68     		ldr	r2, [r3]
 1900 0018 D068     		ldr	r0, [r2, #12]
 1901              	.LVL159:
 1902 001a C021     		movs	r1, #192
 1903 001c 0901     		lsls	r1, r1, #4
 1904 001e 0842     		tst	r0, r1
 1905 0020 1BD1     		bne	.L141
 1906              		.loc 1 2096 0 is_stmt 0 discriminator 1
 1907 0022 196A     		ldr	r1, [r3, #32]
 1908 0024 0029     		cmp	r1, #0
 1909 0026 18D1     		bne	.L141
2097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
2098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
2099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       /* If End of Sequence is reached, disable interrupts */
2100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
 1910              		.loc 1 2100 0 is_stmt 1
 1911 0028 1168     		ldr	r1, [r2]
 1912 002a 0907     		lsls	r1, r1, #28
 1913 002c 15D5     		bpl	.L141
2101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
2102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
2103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         /* ADSTART==0 (no conversion on going)                                */
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 76


2104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 1914              		.loc 1 2104 0
 1915 002e 9168     		ldr	r1, [r2, #8]
 1916 0030 4907     		lsls	r1, r1, #29
 1917 0032 0AD4     		bmi	.L142
2105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         {
2106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           /* Disable ADC end of single conversion interrupt on group regular */
2107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           /* Note: Overrun interrupt was enabled with EOC interrupt in        */
2108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           /* HAL_Start_IT(), but is not disabled here because can be used     */
2109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           /* by overrun IRQ process below.                                    */
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
 1918              		.loc 1 2110 0
 1919 0034 5168     		ldr	r1, [r2, #4]
 1920 0036 0C20     		movs	r0, #12
 1921 0038 8143     		bics	r1, r0
 1922 003a 5160     		str	r1, [r2, #4]
2111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           
2112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           /* Set ADC state */
2113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State,
 1923              		.loc 1 2113 0
 1924 003c 596C     		ldr	r1, [r3, #68]
 1925 003e 0B4A     		ldr	r2, .L144
 1926 0040 0A40     		ands	r2, r1
 1927 0042 0121     		movs	r1, #1
 1928 0044 0A43     		orrs	r2, r1
 1929 0046 5A64     		str	r2, [r3, #68]
 1930 0048 07E0     		b	.L141
 1931              	.L142:
2114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                             HAL_ADC_STATE_READY);
2116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         }
2117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         else
2118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         {
2119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           /* Change ADC state to error state */
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 1932              		.loc 1 2120 0
 1933 004a 596C     		ldr	r1, [r3, #68]
 1934 004c 2022     		movs	r2, #32
 1935 004e 0A43     		orrs	r2, r1
 1936 0050 5A64     		str	r2, [r3, #68]
2121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           
2122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           /* Set ADC error code to ADC IP internal error */
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 1937              		.loc 1 2123 0
 1938 0052 996C     		ldr	r1, [r3, #72]
 1939 0054 0122     		movs	r2, #1
 1940 0056 0A43     		orrs	r2, r1
 1941 0058 9A64     		str	r2, [r3, #72]
 1942              	.L141:
2124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         }
2125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
2127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
2128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Conversion complete callback */
2129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc); 
 1943              		.loc 1 2129 0
 1944 005a 1800     		movs	r0, r3
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 77


 1945 005c FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1946              	.LVL160:
 1947 0060 02E0     		b	.L139
 1948              	.LVL161:
 1949              	.L140:
2130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
2131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   else
2132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
2133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     /* Call DMA error callback */
2134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     hadc->DMA_Handle->XferErrorCallback(hdma);
 1950              		.loc 1 2134 0
 1951 0062 DB6B     		ldr	r3, [r3, #60]
 1952              	.LVL162:
 1953 0064 1B6B     		ldr	r3, [r3, #48]
 1954 0066 9847     		blx	r3
 1955              	.LVL163:
 1956              	.L139:
2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
2136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
2137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 1957              		.loc 1 2137 0
 1958              		@ sp needed
 1959 0068 10BD     		pop	{r4, pc}
 1960              	.L145:
 1961 006a C046     		.align	2
 1962              	.L144:
 1963 006c FEFEFFFF 		.word	-258
 1964              		.cfi_endproc
 1965              	.LFE60:
 1967              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1968              		.align	2
 1969              		.weak	HAL_ADC_ConvHalfCpltCallback
 1970              		.code	16
 1971              		.thumb_func
 1973              	HAL_ADC_ConvHalfCpltCallback:
 1974              	.LFB50:
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1975              		.loc 1 1527 0
 1976              		.cfi_startproc
 1977              		@ args = 0, pretend = 0, frame = 0
 1978              		@ frame_needed = 0, uses_anonymous_args = 0
 1979              		@ link register save eliminated.
 1980              	.LVL164:
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 1981              		.loc 1 1534 0
 1982              		@ sp needed
 1983 0000 7047     		bx	lr
 1984              		.cfi_endproc
 1985              	.LFE50:
 1987 0002 C046     		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 1988              		.align	2
 1989              		.code	16
 1990              		.thumb_func
 1992              	ADC_DMAHalfConvCplt:
 1993              	.LFB61:
2138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 78


2140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  DMA half transfer complete callback. 
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hdma pointer to DMA handle.
2142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval None
2143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
2144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
2145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
 1994              		.loc 1 2145 0
 1995              		.cfi_startproc
 1996              		@ args = 0, pretend = 0, frame = 0
 1997              		@ frame_needed = 0, uses_anonymous_args = 0
 1998              	.LVL165:
 1999 0000 10B5     		push	{r4, lr}
 2000              	.LCFI15:
 2001              		.cfi_def_cfa_offset 8
 2002              		.cfi_offset 4, -8
 2003              		.cfi_offset 14, -4
2146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2004              		.loc 1 2147 0
 2005 0002 406A     		ldr	r0, [r0, #36]
 2006              	.LVL166:
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Half conversion callback */
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc); 
 2007              		.loc 1 2150 0
 2008 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 2009              	.LVL167:
2151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 2010              		.loc 1 2151 0
 2011              		@ sp needed
 2012 0008 10BD     		pop	{r4, pc}
 2013              		.cfi_endproc
 2014              	.LFE61:
 2016 000a C046     		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 2017              		.align	2
 2018              		.weak	HAL_ADC_LevelOutOfWindowCallback
 2019              		.code	16
 2020              		.thumb_func
 2022              	HAL_ADC_LevelOutOfWindowCallback:
 2023              	.LFB51:
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 2024              		.loc 1 1542 0
 2025              		.cfi_startproc
 2026              		@ args = 0, pretend = 0, frame = 0
 2027              		@ frame_needed = 0, uses_anonymous_args = 0
 2028              		@ link register save eliminated.
 2029              	.LVL168:
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 2030              		.loc 1 1549 0
 2031              		@ sp needed
 2032 0000 7047     		bx	lr
 2033              		.cfi_endproc
 2034              	.LFE51:
 2036 0002 C046     		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 2037              		.align	2
 2038              		.weak	HAL_ADC_ErrorCallback
 2039              		.code	16
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 79


 2040              		.thumb_func
 2042              	HAL_ADC_ErrorCallback:
 2043              	.LFB52:
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 2044              		.loc 1 1558 0
 2045              		.cfi_startproc
 2046              		@ args = 0, pretend = 0, frame = 0
 2047              		@ frame_needed = 0, uses_anonymous_args = 0
 2048              		@ link register save eliminated.
 2049              	.LVL169:
1565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 2050              		.loc 1 1565 0
 2051              		@ sp needed
 2052 0000 7047     		bx	lr
 2053              		.cfi_endproc
 2054              	.LFE52:
 2056 0002 C046     		.section	.text.ADC_DMAError,"ax",%progbits
 2057              		.align	2
 2058              		.code	16
 2059              		.thumb_func
 2061              	ADC_DMAError:
 2062              	.LFB62:
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** /**
2154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @brief  DMA error callback 
2155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @param  hdma pointer to DMA handle.
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   * @retval None
2157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   */
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma)   
2159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** {
 2063              		.loc 1 2159 0
 2064              		.cfi_startproc
 2065              		@ args = 0, pretend = 0, frame = 0
 2066              		@ frame_needed = 0, uses_anonymous_args = 0
 2067              	.LVL170:
 2068 0000 10B5     		push	{r4, lr}
 2069              	.LCFI16:
 2070              		.cfi_def_cfa_offset 8
 2071              		.cfi_offset 4, -8
 2072              		.cfi_offset 14, -4
2160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2073              		.loc 1 2161 0
 2074 0002 406A     		ldr	r0, [r0, #36]
 2075              	.LVL171:
2162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
2163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Set ADC state */
2164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 2076              		.loc 1 2164 0
 2077 0004 426C     		ldr	r2, [r0, #68]
 2078 0006 4023     		movs	r3, #64
 2079 0008 1343     		orrs	r3, r2
 2080 000a 4364     		str	r3, [r0, #68]
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
2166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Set ADC error code to DMA error */
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 2081              		.loc 1 2167 0
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 80


 2082 000c 826C     		ldr	r2, [r0, #72]
 2083 000e 0423     		movs	r3, #4
 2084 0010 1343     		orrs	r3, r2
 2085 0012 8364     		str	r3, [r0, #72]
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
2169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Error callback */
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc); 
 2086              		.loc 1 2170 0
 2087 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 2088              	.LVL172:
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 2089              		.loc 1 2171 0
 2090              		@ sp needed
 2091 0018 10BD     		pop	{r4, pc}
 2092              		.cfi_endproc
 2093              	.LFE62:
 2095 001a C046     		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 2096              		.align	2
 2097              		.global	HAL_ADC_IRQHandler
 2098              		.code	16
 2099              		.thumb_func
 2101              	HAL_ADC_IRQHandler:
 2102              	.LFB48:
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check the parameters */
 2103              		.loc 1 1396 0
 2104              		.cfi_startproc
 2105              		@ args = 0, pretend = 0, frame = 0
 2106              		@ frame_needed = 0, uses_anonymous_args = 0
 2107              	.LVL173:
 2108 0000 10B5     		push	{r4, lr}
 2109              	.LCFI17:
 2110              		.cfi_def_cfa_offset 8
 2111              		.cfi_offset 4, -8
 2112              		.cfi_offset 14, -4
 2113 0002 0400     		movs	r4, r0
1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOS))   )
 2114              		.loc 1 1403 0
 2115 0004 0368     		ldr	r3, [r0]
 2116 0006 1A68     		ldr	r2, [r3]
 2117 0008 5207     		lsls	r2, r2, #29
 2118 000a 02D5     		bpl	.L152
1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOS))   )
 2119              		.loc 1 1403 0 is_stmt 0 discriminator 1
 2120 000c 5A68     		ldr	r2, [r3, #4]
 2121 000e 5207     		lsls	r2, r2, #29
 2122 0010 05D4     		bmi	.L153
 2123              	.L152:
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 2124              		.loc 1 1404 0 is_stmt 1 discriminator 3
 2125 0012 1A68     		ldr	r2, [r3]
1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOS))   )
 2126              		.loc 1 1403 0 discriminator 3
 2127 0014 1207     		lsls	r2, r2, #28
 2128 0016 31D5     		bpl	.L154
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 2129              		.loc 1 1404 0
 2130 0018 5A68     		ldr	r2, [r3, #4]
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 81


 2131 001a 1207     		lsls	r2, r2, #28
 2132 001c 2ED5     		bpl	.L154
 2133              	.L153:
1407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 2134              		.loc 1 1407 0
 2135 001e 626C     		ldr	r2, [r4, #68]
 2136 0020 D206     		lsls	r2, r2, #27
 2137 0022 04D4     		bmi	.L155
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 2138              		.loc 1 1410 0
 2139 0024 626C     		ldr	r2, [r4, #68]
 2140 0026 8021     		movs	r1, #128
 2141 0028 8900     		lsls	r1, r1, #2
 2142 002a 0A43     		orrs	r2, r1
 2143 002c 6264     		str	r2, [r4, #68]
 2144              	.L155:
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
 2145              		.loc 1 1415 0
 2146 002e D968     		ldr	r1, [r3, #12]
 2147 0030 C022     		movs	r2, #192
 2148 0032 1201     		lsls	r2, r2, #4
 2149 0034 1142     		tst	r1, r2
 2150 0036 1BD1     		bne	.L156
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
 2151              		.loc 1 1415 0 is_stmt 0 discriminator 1
 2152 0038 226A     		ldr	r2, [r4, #32]
 2153 003a 002A     		cmp	r2, #0
 2154 003c 18D1     		bne	.L156
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 2155              		.loc 1 1419 0 is_stmt 1
 2156 003e 1A68     		ldr	r2, [r3]
 2157 0040 1207     		lsls	r2, r2, #28
 2158 0042 15D5     		bpl	.L156
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         {
 2159              		.loc 1 1423 0
 2160 0044 9A68     		ldr	r2, [r3, #8]
 2161 0046 5207     		lsls	r2, r2, #29
 2162 0048 0AD4     		bmi	.L157
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           
 2163              		.loc 1 1429 0
 2164 004a 5A68     		ldr	r2, [r3, #4]
 2165 004c 0C21     		movs	r1, #12
 2166 004e 8A43     		bics	r2, r1
 2167 0050 5A60     		str	r2, [r3, #4]
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
 2168              		.loc 1 1432 0
 2169 0052 626C     		ldr	r2, [r4, #68]
 2170 0054 1F4B     		ldr	r3, .L162
 2171 0056 1340     		ands	r3, r2
 2172 0058 0122     		movs	r2, #1
 2173 005a 1343     		orrs	r3, r2
 2174 005c 6364     		str	r3, [r4, #68]
 2175 005e 07E0     		b	.L156
 2176              	.L157:
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           
 2177              		.loc 1 1439 0
 2178 0060 626C     		ldr	r2, [r4, #68]
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 82


 2179 0062 2023     		movs	r3, #32
 2180 0064 1343     		orrs	r3, r2
 2181 0066 6364     		str	r3, [r4, #68]
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         }
 2182              		.loc 1 1442 0
 2183 0068 A26C     		ldr	r2, [r4, #72]
 2184 006a 0123     		movs	r3, #1
 2185 006c 1343     		orrs	r3, r2
 2186 006e A364     		str	r3, [r4, #72]
 2187              	.L156:
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 2188              		.loc 1 1451 0
 2189 0070 2000     		movs	r0, r4
 2190              	.LVL174:
 2191 0072 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 2192              	.LVL175:
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 2193              		.loc 1 1459 0
 2194 0076 2368     		ldr	r3, [r4]
 2195 0078 0C22     		movs	r2, #12
 2196 007a 1A60     		str	r2, [r3]
 2197              	.L154:
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 2198              		.loc 1 1463 0
 2199 007c 2368     		ldr	r3, [r4]
 2200 007e 1A68     		ldr	r2, [r3]
 2201 0080 1206     		lsls	r2, r2, #24
 2202 0082 0DD5     		bpl	.L158
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 2203              		.loc 1 1463 0 is_stmt 0 discriminator 1
 2204 0084 5B68     		ldr	r3, [r3, #4]
 2205 0086 1B06     		lsls	r3, r3, #24
 2206 0088 0AD5     		bpl	.L158
1466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 2207              		.loc 1 1466 0 is_stmt 1
 2208 008a 636C     		ldr	r3, [r4, #68]
 2209 008c 8022     		movs	r2, #128
 2210 008e 5202     		lsls	r2, r2, #9
 2211 0090 1343     		orrs	r3, r2
 2212 0092 6364     		str	r3, [r4, #68]
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 2213              		.loc 1 1469 0
 2214 0094 2000     		movs	r0, r4
 2215 0096 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 2216              	.LVL176:
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****    
 2217              		.loc 1 1472 0
 2218 009a 2368     		ldr	r3, [r4]
 2219 009c 8022     		movs	r2, #128
 2220 009e 1A60     		str	r2, [r3]
 2221              	.L158:
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 2222              		.loc 1 1478 0
 2223 00a0 2368     		ldr	r3, [r4]
 2224 00a2 1A68     		ldr	r2, [r3]
 2225 00a4 D206     		lsls	r2, r2, #27
 2226 00a6 14D5     		bpl	.L151
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 83


1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 2227              		.loc 1 1478 0 is_stmt 0 discriminator 1
 2228 00a8 5A68     		ldr	r2, [r3, #4]
 2229 00aa D206     		lsls	r2, r2, #27
 2230 00ac 11D5     		bpl	.L151
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         HAL_IS_BIT_SET(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN)  )
 2231              		.loc 1 1486 0 is_stmt 1
 2232 00ae 626B     		ldr	r2, [r4, #52]
 2233 00b0 012A     		cmp	r2, #1
 2234 00b2 02D0     		beq	.L160
1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 2235              		.loc 1 1487 0 discriminator 1
 2236 00b4 DA68     		ldr	r2, [r3, #12]
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         HAL_IS_BIT_SET(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN)  )
 2237              		.loc 1 1486 0 discriminator 1
 2238 00b6 D207     		lsls	r2, r2, #31
 2239 00b8 08D5     		bpl	.L161
 2240              	.L160:
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 2241              		.loc 1 1490 0
 2242 00ba A16C     		ldr	r1, [r4, #72]
 2243 00bc 0222     		movs	r2, #2
 2244 00be 0A43     		orrs	r2, r1
 2245 00c0 A264     		str	r2, [r4, #72]
1493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 2246              		.loc 1 1493 0
 2247 00c2 1022     		movs	r2, #16
 2248 00c4 1A60     		str	r2, [r3]
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 2249              		.loc 1 1496 0
 2250 00c6 2000     		movs	r0, r4
 2251 00c8 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 2252              	.LVL177:
 2253              	.L161:
1500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 2254              		.loc 1 1500 0
 2255 00cc 2368     		ldr	r3, [r4]
 2256 00ce 1022     		movs	r2, #16
 2257 00d0 1A60     		str	r2, [r3]
 2258              	.L151:
1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 2259              		.loc 1 1503 0
 2260              		@ sp needed
 2261              	.LVL178:
 2262 00d2 10BD     		pop	{r4, pc}
 2263              	.L163:
 2264              		.align	2
 2265              	.L162:
 2266 00d4 FEFEFFFF 		.word	-258
 2267              		.cfi_endproc
 2268              	.LFE48:
 2270              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 2271              		.align	2
 2272              		.global	HAL_ADC_ConfigChannel
 2273              		.code	16
 2274              		.thumb_func
 2276              	HAL_ADC_ConfigChannel:
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 84


 2277              	.LFB53:
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2278              		.loc 1 1612 0
 2279              		.cfi_startproc
 2280              		@ args = 0, pretend = 0, frame = 8
 2281              		@ frame_needed = 0, uses_anonymous_args = 0
 2282              	.LVL179:
 2283 0000 30B5     		push	{r4, r5, lr}
 2284              	.LCFI18:
 2285              		.cfi_def_cfa_offset 12
 2286              		.cfi_offset 4, -12
 2287              		.cfi_offset 5, -8
 2288              		.cfi_offset 14, -4
 2289 0002 83B0     		sub	sp, sp, #12
 2290              	.LCFI19:
 2291              		.cfi_def_cfa_offset 24
 2292 0004 0400     		movs	r4, r0
 2293              	.LVL180:
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 2294              		.loc 1 1614 0
 2295 0006 0023     		movs	r3, #0
 2296 0008 0193     		str	r3, [sp, #4]
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 2297              		.loc 1 1627 0
 2298 000a 4033     		adds	r3, r3, #64
 2299 000c C35C     		ldrb	r3, [r0, r3]
 2300 000e 012B     		cmp	r3, #1
 2301 0010 00D1     		bne	.LCB2188
 2302 0012 80E0     		b	.L174	@long jump
 2303              	.LCB2188:
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 2304              		.loc 1 1627 0 is_stmt 0 discriminator 2
 2305 0014 0122     		movs	r2, #1
 2306 0016 4023     		movs	r3, #64
 2307 0018 C254     		strb	r2, [r0, r3]
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 2308              		.loc 1 1635 0 is_stmt 1 discriminator 2
 2309 001a 0368     		ldr	r3, [r0]
 2310 001c 9A68     		ldr	r2, [r3, #8]
 2311 001e 5207     		lsls	r2, r2, #29
 2312 0020 6AD4     		bmi	.L166
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 2313              		.loc 1 1639 0
 2314 0022 3E4A     		ldr	r2, .L180
 2315 0024 4868     		ldr	r0, [r1, #4]
 2316              	.LVL181:
 2317 0026 9042     		cmp	r0, r2
 2318 0028 4FD0     		beq	.L167
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 2319              		.loc 1 1643 0
 2320 002a 986A     		ldr	r0, [r3, #40]
 2321 002c 0122     		movs	r2, #1
 2322 002e 0D68     		ldr	r5, [r1]
 2323 0030 AA40     		lsls	r2, r2, r5
 2324 0032 0243     		orrs	r2, r0
 2325 0034 9A62     		str	r2, [r3, #40]
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 85


 2326              		.loc 1 1650 0
 2327 0036 A36B     		ldr	r3, [r4, #56]
 2328 0038 8022     		movs	r2, #128
 2329 003a 5205     		lsls	r2, r2, #21
 2330 003c 9342     		cmp	r3, r2
 2331 003e 1ED0     		beq	.L168
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 2332              		.loc 1 1650 0 is_stmt 0 discriminator 1
 2333 0040 012B     		cmp	r3, #1
 2334 0042 1CD0     		beq	.L168
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 2335              		.loc 1 1650 0 discriminator 2
 2336 0044 022B     		cmp	r3, #2
 2337 0046 1AD0     		beq	.L168
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 2338              		.loc 1 1650 0 discriminator 3
 2339 0048 032B     		cmp	r3, #3
 2340 004a 18D0     		beq	.L168
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 2341              		.loc 1 1650 0 discriminator 4
 2342 004c 042B     		cmp	r3, #4
 2343 004e 16D0     		beq	.L168
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 2344              		.loc 1 1650 0 discriminator 5
 2345 0050 052B     		cmp	r3, #5
 2346 0052 14D0     		beq	.L168
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 2347              		.loc 1 1650 0 discriminator 6
 2348 0054 062B     		cmp	r3, #6
 2349 0056 12D0     		beq	.L168
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 2350              		.loc 1 1650 0 discriminator 7
 2351 0058 072B     		cmp	r3, #7
 2352 005a 10D0     		beq	.L168
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         {
 2353              		.loc 1 1654 0 is_stmt 1
 2354 005c 2268     		ldr	r2, [r4]
 2355 005e 5369     		ldr	r3, [r2, #20]
 2356 0060 0720     		movs	r0, #7
 2357 0062 0340     		ands	r3, r0
 2358 0064 8868     		ldr	r0, [r1, #8]
 2359 0066 9842     		cmp	r0, r3
 2360 0068 09D0     		beq	.L168
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           
 2361              		.loc 1 1658 0
 2362 006a 5069     		ldr	r0, [r2, #20]
 2363 006c 0723     		movs	r3, #7
 2364 006e 9843     		bics	r0, r3
 2365 0070 5061     		str	r0, [r2, #20]
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         }
 2366              		.loc 1 1661 0
 2367 0072 2268     		ldr	r2, [r4]
 2368 0074 5069     		ldr	r0, [r2, #20]
 2369 0076 8D68     		ldr	r5, [r1, #8]
 2370 0078 2B40     		ands	r3, r5
 2371 007a 0343     		orrs	r3, r0
 2372 007c 5361     		str	r3, [r2, #20]
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 86


 2373              	.L168:
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 2374              		.loc 1 1671 0
 2375 007e 0B68     		ldr	r3, [r1]
 2376 0080 1A00     		movs	r2, r3
 2377 0082 103A     		subs	r2, r2, #16
 2378 0084 012A     		cmp	r2, #1
 2379 0086 3DD8     		bhi	.L175
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
 2380              		.loc 1 1676 0
 2381 0088 254A     		ldr	r2, .L180+4
 2382 008a 1268     		ldr	r2, [r2]
 2383 008c 102B     		cmp	r3, #16
 2384 008e 02D1     		bne	.L176
 2385 0090 8023     		movs	r3, #128
 2386 0092 1B04     		lsls	r3, r3, #16
 2387 0094 01E0     		b	.L170
 2388              	.L176:
 2389 0096 8023     		movs	r3, #128
 2390 0098 DB03     		lsls	r3, r3, #15
 2391              	.L170:
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         
 2392              		.loc 1 1676 0 is_stmt 0 discriminator 4
 2393 009a 1343     		orrs	r3, r2
 2394 009c 204A     		ldr	r2, .L180+4
 2395 009e 1360     		str	r3, [r2]
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****         {
 2396              		.loc 1 1679 0 is_stmt 1 discriminator 4
 2397 00a0 0B68     		ldr	r3, [r1]
 2398 00a2 102B     		cmp	r3, #16
 2399 00a4 30D1     		bne	.L177
1683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           while(wait_loop_index != 0U)
 2400              		.loc 1 1683 0
 2401 00a6 1F4B     		ldr	r3, .L180+8
 2402 00a8 1868     		ldr	r0, [r3]
 2403 00aa 1F49     		ldr	r1, .L180+12
 2404              	.LVL182:
 2405 00ac FFF7FEFF 		bl	__aeabi_uidiv
 2406              	.LVL183:
 2407 00b0 8300     		lsls	r3, r0, #2
 2408 00b2 1818     		adds	r0, r3, r0
 2409 00b4 4300     		lsls	r3, r0, #1
 2410 00b6 0193     		str	r3, [sp, #4]
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           {
 2411              		.loc 1 1684 0
 2412 00b8 02E0     		b	.L171
 2413              	.L172:
1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           }
 2414              		.loc 1 1686 0
 2415 00ba 019B     		ldr	r3, [sp, #4]
 2416 00bc 013B     		subs	r3, r3, #1
 2417 00be 0193     		str	r3, [sp, #4]
 2418              	.L171:
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****           {
 2419              		.loc 1 1684 0
 2420 00c0 019B     		ldr	r3, [sp, #4]
 2421 00c2 002B     		cmp	r3, #0
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 87


 2422 00c4 F9D1     		bne	.L172
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0U;
 2423              		.loc 1 1613 0
 2424 00c6 0020     		movs	r0, #0
 2425 00c8 21E0     		b	.L169
 2426              	.LVL184:
 2427              	.L167:
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       
 2428              		.loc 1 1695 0
 2429 00ca 9A6A     		ldr	r2, [r3, #40]
 2430 00cc 0120     		movs	r0, #1
 2431 00ce 0D68     		ldr	r5, [r1]
 2432 00d0 A840     		lsls	r0, r0, r5
 2433 00d2 8243     		bics	r2, r0
 2434 00d4 9A62     		str	r2, [r3, #40]
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       {
 2435              		.loc 1 1700 0
 2436 00d6 0B68     		ldr	r3, [r1]
 2437 00d8 1A00     		movs	r2, r3
 2438 00da 103A     		subs	r2, r2, #16
 2439 00dc 012A     		cmp	r2, #1
 2440 00de 15D8     		bhi	.L178
1705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
 2441              		.loc 1 1705 0
 2442 00e0 0F4A     		ldr	r2, .L180+4
 2443 00e2 1268     		ldr	r2, [r2]
 2444 00e4 102B     		cmp	r3, #16
 2445 00e6 01D1     		bne	.L179
 2446 00e8 104B     		ldr	r3, .L180+16
 2447 00ea 00E0     		b	.L173
 2448              	.L179:
 2449 00ec 104B     		ldr	r3, .L180+20
 2450              	.L173:
1705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****       }
 2451              		.loc 1 1705 0 is_stmt 0 discriminator 4
 2452 00ee 1340     		ands	r3, r2
 2453 00f0 0B4A     		ldr	r2, .L180+4
 2454 00f2 1360     		str	r3, [r2]
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0U;
 2455              		.loc 1 1613 0 is_stmt 1 discriminator 4
 2456 00f4 0020     		movs	r0, #0
 2457 00f6 0AE0     		b	.L169
 2458              	.LVL185:
 2459              	.L166:
1717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 2460              		.loc 1 1717 0
 2461 00f8 426C     		ldr	r2, [r0, #68]
 2462 00fa 2023     		movs	r3, #32
 2463 00fc 1343     		orrs	r3, r2
 2464 00fe 4364     		str	r3, [r0, #68]
 2465              	.LVL186:
1719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 2466              		.loc 1 1719 0
 2467 0100 0120     		movs	r0, #1
 2468              	.LVL187:
 2469 0102 04E0     		b	.L169
 2470              	.LVL188:
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 88


 2471              	.L175:
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0U;
 2472              		.loc 1 1613 0
 2473 0104 0020     		movs	r0, #0
 2474 0106 02E0     		b	.L169
 2475              	.L177:
 2476 0108 0020     		movs	r0, #0
 2477 010a 00E0     		b	.L169
 2478              	.L178:
 2479 010c 0020     		movs	r0, #0
 2480              	.LVL189:
 2481              	.L169:
1723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 2482              		.loc 1 1723 0
 2483 010e 0022     		movs	r2, #0
 2484 0110 4023     		movs	r3, #64
 2485 0112 E254     		strb	r2, [r4, r3]
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 2486              		.loc 1 1726 0
 2487 0114 00E0     		b	.L165
 2488              	.LVL190:
 2489              	.L174:
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 2490              		.loc 1 1627 0
 2491 0116 0220     		movs	r0, #2
 2492              	.LVL191:
 2493              	.L165:
1727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 2494              		.loc 1 1727 0
 2495 0118 03B0     		add	sp, sp, #12
 2496              		@ sp needed
 2497              	.LVL192:
 2498 011a 30BD     		pop	{r4, r5, pc}
 2499              	.L181:
 2500              		.align	2
 2501              	.L180:
 2502 011c 01100000 		.word	4097
 2503 0120 08270140 		.word	1073817352
 2504 0124 00000000 		.word	SystemCoreClock
 2505 0128 40420F00 		.word	1000000
 2506 012c FFFF7FFF 		.word	-8388609
 2507 0130 FFFFBFFF 		.word	-4194305
 2508              		.cfi_endproc
 2509              	.LFE53:
 2511              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 2512              		.align	2
 2513              		.global	HAL_ADC_AnalogWDGConfig
 2514              		.code	16
 2515              		.thumb_func
 2517              	HAL_ADC_AnalogWDGConfig:
 2518              	.LFB54:
1745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2519              		.loc 1 1745 0
 2520              		.cfi_startproc
 2521              		@ args = 0, pretend = 0, frame = 0
 2522              		@ frame_needed = 0, uses_anonymous_args = 0
 2523              	.LVL193:
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 89


 2524 0000 70B5     		push	{r4, r5, r6, lr}
 2525              	.LCFI20:
 2526              		.cfi_def_cfa_offset 16
 2527              		.cfi_offset 4, -16
 2528              		.cfi_offset 5, -12
 2529              		.cfi_offset 6, -8
 2530              		.cfi_offset 14, -4
 2531              	.LVL194:
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 2532              		.loc 1 1766 0
 2533 0002 4023     		movs	r3, #64
 2534 0004 C35C     		ldrb	r3, [r0, r3]
 2535 0006 012B     		cmp	r3, #1
 2536 0008 4AD0     		beq	.L187
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 2537              		.loc 1 1766 0 is_stmt 0 discriminator 2
 2538 000a 0122     		movs	r2, #1
 2539 000c 4023     		movs	r3, #64
 2540 000e C254     		strb	r2, [r0, r3]
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   {
 2541              		.loc 1 1773 0 is_stmt 1 discriminator 2
 2542 0010 0368     		ldr	r3, [r0]
 2543 0012 9A68     		ldr	r2, [r3, #8]
 2544 0014 5207     		lsls	r2, r2, #29
 2545 0016 39D4     		bmi	.L184
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                 ADC_CFGR1_AWDEN  |
 2546              		.loc 1 1780 0
 2547 0018 DC68     		ldr	r4, [r3, #12]
 2548 001a 224A     		ldr	r2, .L188
 2549 001c 2240     		ands	r2, r4
 2550 001e DA60     		str	r2, [r3, #12]
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                ADC_CFGR_AWDCH(AnalogWDGConfig->Channel)  );
 2551              		.loc 1 1784 0
 2552 0020 0268     		ldr	r2, [r0]
 2553 0022 D468     		ldr	r4, [r2, #12]
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 2554              		.loc 1 1785 0
 2555 0024 4B68     		ldr	r3, [r1, #4]
 2556 0026 9B06     		lsls	r3, r3, #26
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                                ADC_CFGR_AWDCH(AnalogWDGConfig->Channel)  );
 2557              		.loc 1 1784 0
 2558 0028 0D68     		ldr	r5, [r1]
 2559 002a 2B43     		orrs	r3, r5
 2560 002c 2343     		orrs	r3, r4
 2561 002e D360     		str	r3, [r2, #12]
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
 2562              		.loc 1 1789 0
 2563 0030 0468     		ldr	r4, [r0]
 2564 0032 E268     		ldr	r2, [r4, #12]
 2565 0034 D208     		lsrs	r2, r2, #3
 2566 0036 0325     		movs	r5, #3
 2567 0038 2A40     		ands	r2, r5
 2568 003a 5200     		lsls	r2, r2, #1
 2569 003c CB68     		ldr	r3, [r1, #12]
 2570 003e 9340     		lsls	r3, r3, r2
 2571 0040 1A00     		movs	r2, r3
 2572              	.LVL195:
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 90


1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 2573              		.loc 1 1790 0
 2574 0042 E368     		ldr	r3, [r4, #12]
 2575 0044 DB08     		lsrs	r3, r3, #3
 2576 0046 2B40     		ands	r3, r5
 2577 0048 5B00     		lsls	r3, r3, #1
 2578 004a 0D69     		ldr	r5, [r1, #16]
 2579 004c 9D40     		lsls	r5, r5, r3
 2580 004e 2B00     		movs	r3, r5
 2581              	.LVL196:
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     hadc->Instance->TR |=  ( ADC_TRX_HIGHTHRESHOLD (tmpAWDHighThresholdShifted) |
 2582              		.loc 1 1793 0
 2583 0050 266A     		ldr	r6, [r4, #32]
 2584 0052 154D     		ldr	r5, .L188+4
 2585 0054 3540     		ands	r5, r6
 2586 0056 2562     		str	r5, [r4, #32]
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****                              tmpAWDLowThresholdShifted                           );
 2587              		.loc 1 1794 0
 2588 0058 0468     		ldr	r4, [r0]
 2589 005a 256A     		ldr	r5, [r4, #32]
 2590 005c 1204     		lsls	r2, r2, #16
 2591              	.LVL197:
 2592 005e 1343     		orrs	r3, r2
 2593              	.LVL198:
 2594 0060 2B43     		orrs	r3, r5
 2595 0062 2362     		str	r3, [r4, #32]
1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 2596              		.loc 1 1800 0
 2597 0064 0368     		ldr	r3, [r0]
 2598 0066 8022     		movs	r2, #128
 2599 0068 1A60     		str	r2, [r3]
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     {
 2600              		.loc 1 1803 0
 2601 006a 8B68     		ldr	r3, [r1, #8]
 2602 006c 012B     		cmp	r3, #1
 2603 006e 06D1     		bne	.L185
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 2604              		.loc 1 1806 0
 2605 0070 0268     		ldr	r2, [r0]
 2606 0072 5168     		ldr	r1, [r2, #4]
 2607              	.LVL199:
 2608 0074 7F33     		adds	r3, r3, #127
 2609 0076 0B43     		orrs	r3, r1
 2610 0078 5360     		str	r3, [r2, #4]
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 2611              		.loc 1 1746 0
 2612 007a 0023     		movs	r3, #0
 2613 007c 0BE0     		b	.L186
 2614              	.LVL200:
 2615              	.L185:
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     }
 2616              		.loc 1 1811 0
 2617 007e 0268     		ldr	r2, [r0]
 2618 0080 5368     		ldr	r3, [r2, #4]
 2619 0082 8021     		movs	r1, #128
 2620              	.LVL201:
 2621 0084 8B43     		bics	r3, r1
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 91


 2622 0086 5360     		str	r3, [r2, #4]
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 2623              		.loc 1 1746 0
 2624 0088 0023     		movs	r3, #0
 2625 008a 04E0     		b	.L186
 2626              	.LVL202:
 2627              	.L184:
1820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****     
 2628              		.loc 1 1820 0
 2629 008c 426C     		ldr	r2, [r0, #68]
 2630 008e 2023     		movs	r3, #32
 2631 0090 1343     		orrs	r3, r2
 2632 0092 4364     		str	r3, [r0, #68]
 2633              	.LVL203:
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   }
 2634              		.loc 1 1822 0
 2635 0094 0123     		movs	r3, #1
 2636              	.LVL204:
 2637              	.L186:
1827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 2638              		.loc 1 1827 0
 2639 0096 0021     		movs	r1, #0
 2640 0098 4022     		movs	r2, #64
 2641 009a 8154     		strb	r1, [r0, r2]
1830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 2642              		.loc 1 1830 0
 2643 009c 1800     		movs	r0, r3
 2644              	.LVL205:
 2645 009e 00E0     		b	.L183
 2646              	.LVL206:
 2647              	.L187:
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   
 2648              		.loc 1 1766 0
 2649 00a0 0220     		movs	r0, #2
 2650              	.LVL207:
 2651              	.L183:
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 2652              		.loc 1 1831 0
 2653              		@ sp needed
 2654 00a2 70BD     		pop	{r4, r5, r6, pc}
 2655              	.L189:
 2656              		.align	2
 2657              	.L188:
 2658 00a4 FFFF3F83 		.word	-2092957697
 2659 00a8 00F000F0 		.word	-268374016
 2660              		.cfi_endproc
 2661              	.LFE54:
 2663              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 2664              		.align	2
 2665              		.global	HAL_ADC_GetState
 2666              		.code	16
 2667              		.thumb_func
 2669              	HAL_ADC_GetState:
 2670              	.LFB55:
1867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   /* Check the parameters */
 2671              		.loc 1 1867 0
 2672              		.cfi_startproc
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 92


 2673              		@ args = 0, pretend = 0, frame = 0
 2674              		@ frame_needed = 0, uses_anonymous_args = 0
 2675              		@ link register save eliminated.
 2676              	.LVL208:
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 2677              		.loc 1 1872 0
 2678 0000 406C     		ldr	r0, [r0, #68]
 2679              	.LVL209:
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 2680              		.loc 1 1873 0
 2681              		@ sp needed
 2682 0002 7047     		bx	lr
 2683              		.cfi_endproc
 2684              	.LFE55:
 2686              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 2687              		.align	2
 2688              		.global	HAL_ADC_GetError
 2689              		.code	16
 2690              		.thumb_func
 2692              	HAL_ADC_GetError:
 2693              	.LFB56:
1881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c ****   return hadc->ErrorCode;
 2694              		.loc 1 1881 0
 2695              		.cfi_startproc
 2696              		@ args = 0, pretend = 0, frame = 0
 2697              		@ frame_needed = 0, uses_anonymous_args = 0
 2698              		@ link register save eliminated.
 2699              	.LVL210:
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** }
 2700              		.loc 1 1882 0
 2701 0000 806C     		ldr	r0, [r0, #72]
 2702              	.LVL211:
1883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_adc.c **** 
 2703              		.loc 1 1883 0
 2704              		@ sp needed
 2705 0002 7047     		bx	lr
 2706              		.cfi_endproc
 2707              	.LFE56:
 2709              		.text
 2710              	.Letext0:
 2711              		.file 2 "d:\\app\\armgcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 2712              		.file 3 "d:\\app\\armgcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 2713              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h"
 2714              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 2715              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 2716              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 2717              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 2718              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 2719              		.file 10 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 93


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_adc.c
D:\App\cygwin\tmp\ccpe324r.s:20     .text.ADC_ConversionStop:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:24     .text.ADC_ConversionStop:00000000 ADC_ConversionStop
D:\App\cygwin\tmp\ccpe324r.s:111    .text.ADC_Disable:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:115    .text.ADC_Disable:00000000 ADC_Disable
D:\App\cygwin\tmp\ccpe324r.s:242    .text.ADC_Enable:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:246    .text.ADC_Enable:00000000 ADC_Enable
D:\App\cygwin\tmp\ccpe324r.s:393    .text.ADC_Enable:000000ac $d
D:\App\cygwin\tmp\ccpe324r.s:400    .text.HAL_ADC_MspInit:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:405    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
D:\App\cygwin\tmp\ccpe324r.s:420    .text.HAL_ADC_Init:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:425    .text.HAL_ADC_Init:00000000 HAL_ADC_Init
D:\App\cygwin\tmp\ccpe324r.s:722    .text.HAL_ADC_Init:00000178 $d
D:\App\cygwin\tmp\ccpe324r.s:729    .text.HAL_ADC_MspDeInit:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:734    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
D:\App\cygwin\tmp\ccpe324r.s:749    .text.HAL_ADC_DeInit:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:754    .text.HAL_ADC_DeInit:00000000 HAL_ADC_DeInit
D:\App\cygwin\tmp\ccpe324r.s:877    .text.HAL_ADC_DeInit:00000090 $d
D:\App\cygwin\tmp\ccpe324r.s:885    .text.HAL_ADC_Start:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:890    .text.HAL_ADC_Start:00000000 HAL_ADC_Start
D:\App\cygwin\tmp\ccpe324r.s:979    .text.HAL_ADC_Start:0000005c $d
D:\App\cygwin\tmp\ccpe324r.s:984    .text.HAL_ADC_Stop:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:989    .text.HAL_ADC_Stop:00000000 HAL_ADC_Stop
D:\App\cygwin\tmp\ccpe324r.s:1054   .text.HAL_ADC_Stop:0000003c $d
D:\App\cygwin\tmp\ccpe324r.s:1059   .text.HAL_ADC_PollForConversion:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:1064   .text.HAL_ADC_PollForConversion:00000000 HAL_ADC_PollForConversion
D:\App\cygwin\tmp\ccpe324r.s:1227   .text.HAL_ADC_PollForConversion:000000c4 $d
D:\App\cygwin\tmp\ccpe324r.s:1232   .text.HAL_ADC_PollForEvent:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:1237   .text.HAL_ADC_PollForEvent:00000000 HAL_ADC_PollForEvent
D:\App\cygwin\tmp\ccpe324r.s:1348   .text.HAL_ADC_Start_IT:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:1353   .text.HAL_ADC_Start_IT:00000000 HAL_ADC_Start_IT
D:\App\cygwin\tmp\ccpe324r.s:1468   .text.HAL_ADC_Start_IT:00000084 $d
D:\App\cygwin\tmp\ccpe324r.s:1473   .text.HAL_ADC_Stop_IT:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:1478   .text.HAL_ADC_Stop_IT:00000000 HAL_ADC_Stop_IT
D:\App\cygwin\tmp\ccpe324r.s:1549   .text.HAL_ADC_Stop_IT:00000048 $d
D:\App\cygwin\tmp\ccpe324r.s:1554   .text.HAL_ADC_Start_DMA:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:1559   .text.HAL_ADC_Start_DMA:00000000 HAL_ADC_Start_DMA
D:\App\cygwin\tmp\ccpe324r.s:1697   .text.HAL_ADC_Start_DMA:0000009c $d
D:\App\cygwin\tmp\ccpe324r.s:1872   .text.ADC_DMAConvCplt:00000000 ADC_DMAConvCplt
D:\App\cygwin\tmp\ccpe324r.s:1992   .text.ADC_DMAHalfConvCplt:00000000 ADC_DMAHalfConvCplt
D:\App\cygwin\tmp\ccpe324r.s:2061   .text.ADC_DMAError:00000000 ADC_DMAError
D:\App\cygwin\tmp\ccpe324r.s:1705   .text.HAL_ADC_Stop_DMA:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:1710   .text.HAL_ADC_Stop_DMA:00000000 HAL_ADC_Stop_DMA
D:\App\cygwin\tmp\ccpe324r.s:1819   .text.HAL_ADC_Stop_DMA:00000074 $d
D:\App\cygwin\tmp\ccpe324r.s:1824   .text.HAL_ADC_GetValue:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:1829   .text.HAL_ADC_GetValue:00000000 HAL_ADC_GetValue
D:\App\cygwin\tmp\ccpe324r.s:1848   .text.HAL_ADC_ConvCpltCallback:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:1853   .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
D:\App\cygwin\tmp\ccpe324r.s:1868   .text.ADC_DMAConvCplt:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:1963   .text.ADC_DMAConvCplt:0000006c $d
D:\App\cygwin\tmp\ccpe324r.s:1968   .text.HAL_ADC_ConvHalfCpltCallback:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:1973   .text.HAL_ADC_ConvHalfCpltCallback:00000000 HAL_ADC_ConvHalfCpltCallback
D:\App\cygwin\tmp\ccpe324r.s:1988   .text.ADC_DMAHalfConvCplt:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:2017   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:2022   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 HAL_ADC_LevelOutOfWindowCallback
D:\App\cygwin\tmp\ccpe324r.s:2037   .text.HAL_ADC_ErrorCallback:00000000 $t
ARM GAS  D:\App\cygwin\tmp\ccpe324r.s 			page 94


D:\App\cygwin\tmp\ccpe324r.s:2042   .text.HAL_ADC_ErrorCallback:00000000 HAL_ADC_ErrorCallback
D:\App\cygwin\tmp\ccpe324r.s:2057   .text.ADC_DMAError:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:2096   .text.HAL_ADC_IRQHandler:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:2101   .text.HAL_ADC_IRQHandler:00000000 HAL_ADC_IRQHandler
D:\App\cygwin\tmp\ccpe324r.s:2266   .text.HAL_ADC_IRQHandler:000000d4 $d
D:\App\cygwin\tmp\ccpe324r.s:2271   .text.HAL_ADC_ConfigChannel:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:2276   .text.HAL_ADC_ConfigChannel:00000000 HAL_ADC_ConfigChannel
D:\App\cygwin\tmp\ccpe324r.s:2502   .text.HAL_ADC_ConfigChannel:0000011c $d
D:\App\cygwin\tmp\ccpe324r.s:2512   .text.HAL_ADC_AnalogWDGConfig:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:2517   .text.HAL_ADC_AnalogWDGConfig:00000000 HAL_ADC_AnalogWDGConfig
D:\App\cygwin\tmp\ccpe324r.s:2658   .text.HAL_ADC_AnalogWDGConfig:000000a4 $d
D:\App\cygwin\tmp\ccpe324r.s:2664   .text.HAL_ADC_GetState:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:2669   .text.HAL_ADC_GetState:00000000 HAL_ADC_GetState
D:\App\cygwin\tmp\ccpe324r.s:2687   .text.HAL_ADC_GetError:00000000 $t
D:\App\cygwin\tmp\ccpe324r.s:2692   .text.HAL_ADC_GetError:00000000 HAL_ADC_GetError
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
__aeabi_uidiv
SystemCoreClock
HAL_DMA_Start_IT
HAL_DMA_Abort
