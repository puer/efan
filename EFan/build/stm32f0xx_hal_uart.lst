ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f0xx_hal_uart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  24              	UART_EndTxTransfer:
  25              	.LFB76:
  26              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @file    stm32f0xx_hal_uart.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   [..]
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 RXNE interrupt and Error Interrupts) are managed using the macros
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 2


  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit and receive 
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_UART_Init() API.
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    [..]
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (@) These APIs(HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_MultiProcessor_Init(),
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    [..]
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    [..] Three operation modes are available within this driver :     
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** Polling mode IO operation ***
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      =================================
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..]    
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit() 
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** Interrupt mode IO operation ***    
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      ===================================
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..]    
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback          
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 3


  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** DMA mode IO operation ***    
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      ==============================
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..] 
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback          
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()      
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()  
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()      
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** UART HAL driver macros list ***
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      ============================================= 
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..]
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral     
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..] 
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @endverbatim
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @attention
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      without specific prior written permission.
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 4


 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #include "stm32f0xx_hal.h"
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup STM32F0xx_HAL_Driver
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 5


 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** ===============================================================================
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in asynchronous mode.
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Baud Rate
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Word Length
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Stop Bit
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Parity
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Hardware flow control
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Receiver/transmitter modes
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Over Sampling Method
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) One-Bit Sampling Method
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) data logical level inversion
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX and TX pins swap
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX overrun detection disabling
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA disabling on RX error
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) MSB first on communication line
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) auto Baud rate detection
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init() and HAL_MultiProcessor_Init()
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     API follow respectively the UART asynchronous, UART Half duplex and multiprocessor mode
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual).
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /*
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   Additional Table:  If the parity is enabled, then the MSB bit of the data written
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      in the data register is transmitted but is changed by the parity bit.
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      According to device capability (support or not of 7-bit word length),
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      frame length is either defined by the M bit (8-bits or 9-bits)
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      or by the M1 and M0 bits (7-bit, 8-bit or 9-bit).
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      Possible UART frame formats are as listed in the following table:
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       Table 1. UART frame format.             
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |       M bit       |  PCE bit  |             UART frame                |
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         0         |     0     |    | SB |    8-bit data   | STB |     |
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 6


 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         0         |     1     |    | SB | 7-bit data | PB | STB |     |
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         1         |     0     |    | SB |    9-bit data   | STB |     |
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         1         |     1     |    | SB | 8-bit data | PB | STB |     |
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    0    |     0     |    | SB |    8 bit data   | STB |     |
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    0    |     1     |    | SB | 7 bit data | PB | STB |     |
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    1    |     0     |    | SB |    9 bit data   | STB |     |
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    1    |     1     |    | SB | 8 bit data | PB | STB |     |
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    1    |    0    |     0     |    | SB |    7 bit data   | STB |     |
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    1    |    0    |     1     |    | SB | 6 bit data | PB | STB |     |
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 7


 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Peripheral */
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 8


 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check UART instance */
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), and IREN (if IrDA is supported)  bits in the USART_CR3 regist
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_SCEN);
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_IREN);
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Peripheral */
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 9


 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Address UART node address (4-, 6-, 7- or 8-bit long).
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param WakeUpMethod specifies the UART wakeup method.
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the wake up method parameter */
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 10


 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported) bits in the USART_CR3 r
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Peripheral */
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 11


 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DeInit the low level hardware */
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlock */
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 12


 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### IO operation functions #####
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and Half duplex data transfers.
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) There are two mode of transfer:
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode.
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            after finishing transfer.
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (++) Non-Blocking mode: The communication is performed using Interrupts
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The end of the data processing will be indicated through the
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            using DMA mode.
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Blocking mode API's are :
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Receive()
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_DMAPause()
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_DMAResume()
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_DMAStop()
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_TxHalfCpltCallback()
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_RxHalfCpltCallback()
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Abort()
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit()
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortReceive()
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Abort_IT()
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit_IT()
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortReceive_IT()
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortCpltCallback()
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortTransmitCpltCallback()
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortReceiveCpltCallback()
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 13


 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         Errors are handled as follows :
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Error is considered as Recoverable and non blocking : Transfer could go till end, but 
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in In
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              Received character is then retrieved and stored in Rx buffer, Error code is set to all
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UA
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              If user wants to abort it, Abort services should be called by user.
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Error is considered as Blocking : Transfer could not be completed properly and is abor
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() u
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData Pointer to data buffer.
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size Amount of data to be sent.
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout Timeout duration.
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart = 0U;
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 14


 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tickstart = HAL_GetTick();
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(huart->TxXferCount > 0)
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData += 2;
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_TIMEOUT;
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be received.
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout Timeout duration.
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 15


 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t uhMask;
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart = 0;
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tickstart = HAL_GetTick();
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* as long as data have to be received */
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxXferCount--;
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData +=2U;
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 16


 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be sent.
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 17


 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be received.
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 18


 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be sent.
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled by DMA from halfword frontier). Depending on compilation 
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy into TDR will be 
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 19


1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA error callback */
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA abort callback */
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, S
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be received.
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled by DMA from halfword frontier). Depending on compilat
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 20


1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy from RDR will be 
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA error callback */
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA abort callback */
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA channel */
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPtr, S
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 21


1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 22


1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback: 
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete  
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of 
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 23


1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U; 
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 24


1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Tx transfer counter */
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 25


1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Rx transfer counter */
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 26


1401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
1407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      before any call to DMA Abort functions */
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Otherwise, set it to NULL */
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Otherwise, set it to NULL */
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA TX */
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 27


1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 0U;
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA RX */
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 1U;
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 0U;
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (abortcplt == 1U)
1492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset errorCode */
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 28


1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA TX */
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Reset Tx transfer counter */
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount = 0U; 
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Tx transfer counter */
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 29


1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA RX */
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Reset Rx transfer counter */
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxXferCount = 0U; 
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
1625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 30


1629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Rx transfer counter */
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U; 
1637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Handle UART interrupt request.
1653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr3its;
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t errorflags;
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If no error occurs */
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (errorflags == RESET)
1666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       UART_Receive_IT(huart);
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }  
1674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If some errors occur */
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   cr3its = READ_REG(huart->Instance->CR3);
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(   (errorflags != RESET)
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
1680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
1685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 31


1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
1693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     
1705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
1708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         UART_Receive_IT(huart);
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          consider error as blocking */
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {  
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
1741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 32


1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Abort DMA RX */
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             {
1748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             }
1751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
1752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           else
1753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Call user error callback */
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         else
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Call user error callback */
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Error is notified to user through user error callback */
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   } /* End if some error occurs */
1775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
1777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(((isrflags & USART_ISR_WUF) != RESET) && ((cr3its & USART_CR3_WUFIE) != RESET))
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_WUF);
1781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_Transmit_IT(huart);
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 33


1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
1801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
1807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
1832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Rx Transfer completed callback.
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
1847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 34


1857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
1862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief UART error callback.
1867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
1877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 35


1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
1927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief   UART control functions
1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
1934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
1936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
1944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
1945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Enable UART in mute mode (does not mean UART enters mute mode;
1949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
1950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
1962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
1970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 36


1971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
1983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status.
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 37


2028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
2053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  *
2054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
2055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
2056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
2058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
2059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides functions allowing to :
2060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle state.
2061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle error code
2062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
2064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Return the UART handle state.
2069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL state
2072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp1 = huart->gState;
2077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp2 = huart->RxState;
2078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 38


2085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval UART Error Code
2087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return huart->ErrorCode;
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
2112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
2113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
2114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000U;
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
2118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
2131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
2132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
2133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
2134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
2137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    * to huart->Init.StopBits value */
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 39


2142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure
2145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
2146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
2147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *   to huart->Init.OneBitSampling */
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
2151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
2159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
2175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0U;
2179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
2180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
2181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
2185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
2191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
2194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
2197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 40


2199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
2200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
2201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return ret;
2206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
2221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
2224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
2228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
2231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure data inversion */
2234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
2235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
2238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
2242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
2245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
2249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
2252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
2255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 41


2256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
2258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
2259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
2263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
2265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
2267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
2268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
2269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
2271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
2272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
2277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
2280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Check the UART Idle State.
2285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
2291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart = 0U;
2292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
2293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
2298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tickstart = HAL_GetTick();
2300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and REACK bits in ISR are checked only when available (not available on all F0 devices).
2302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      Bits are defined for some specific devices, and are available only for UART instances supporti
2303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (IS_UART_WAKEUP_FROMSTOP_INSTANCE(huart->Instance))
2305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check if the Transmitter is enabled */
2307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
2308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Wait until TEACK flag is set */
2310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VAL
2311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Timeout occurred */
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 42


2313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
2314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check if the Receiver is enabled */
2318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
2319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Wait until REACK flag is set */
2321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VAL
2322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Timeout occurred */
2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
2325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
2329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART State */
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
2342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Flag Specifies the UART flag to check
2344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Status Flag status (SET or RESET)
2345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Tickstart Tick start value
2346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Timeout Timeout duration
2347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
2350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Wait until flag is set */
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
2353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check for the Timeout */
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
2358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Process Unlocked */
2367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
2369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 43


2370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
  27              		.loc 1 2382 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  33              		.loc 1 2384 0
  34 0000 0268     		ldr	r2, [r0]
  35 0002 1368     		ldr	r3, [r2]
  36 0004 C021     		movs	r1, #192
  37 0006 8B43     		bics	r3, r1
  38 0008 1360     		str	r3, [r2]
2385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  39              		.loc 1 2387 0
  40 000a 2022     		movs	r2, #32
  41 000c 6923     		movs	r3, #105
  42 000e C254     		strb	r2, [r0, r3]
2388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
  43              		.loc 1 2388 0
  44              		@ sp needed
  45 0010 7047     		bx	lr
  46              		.cfi_endproc
  47              	.LFE76:
  49 0012 C046     		.section	.text.UART_EndRxTransfer,"ax",%progbits
  50              		.align	2
  51              		.code	16
  52              		.thumb_func
  54              	UART_EndRxTransfer:
  55              	.LFB77:
2389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
  56              		.loc 1 2397 0
  57              		.cfi_startproc
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 44


  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61              	.LVL1:
2398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  62              		.loc 1 2399 0
  63 0000 0268     		ldr	r2, [r0]
  64 0002 1168     		ldr	r1, [r2]
  65 0004 054B     		ldr	r3, .L3
  66 0006 0B40     		ands	r3, r1
  67 0008 1360     		str	r3, [r2]
2400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  68              		.loc 1 2400 0
  69 000a 0268     		ldr	r2, [r0]
  70 000c 9368     		ldr	r3, [r2, #8]
  71 000e 0121     		movs	r1, #1
  72 0010 8B43     		bics	r3, r1
  73 0012 9360     		str	r3, [r2, #8]
2401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  74              		.loc 1 2403 0
  75 0014 2022     		movs	r2, #32
  76 0016 6A23     		movs	r3, #106
  77 0018 C254     		strb	r2, [r0, r3]
2404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
  78              		.loc 1 2404 0
  79              		@ sp needed
  80 001a 7047     		bx	lr
  81              	.L4:
  82              		.align	2
  83              	.L3:
  84 001c DFFEFFFF 		.word	-289
  85              		.cfi_endproc
  86              	.LFE77:
  88              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  89              		.align	2
  90              		.weak	HAL_UART_MspInit
  91              		.code	16
  92              		.thumb_func
  94              	HAL_UART_MspInit:
  95              	.LFB39:
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
  96              		.loc 1 574 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101              	.LVL2:
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 102              		.loc 1 581 0
 103              		@ sp needed
 104 0000 7047     		bx	lr
 105              		.cfi_endproc
 106              	.LFE39:
 108 0002 C046     		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 45


 109              		.align	2
 110              		.weak	HAL_UART_MspDeInit
 111              		.code	16
 112              		.thumb_func
 114              	HAL_UART_MspDeInit:
 115              	.LFB40:
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 116              		.loc 1 589 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121              	.LVL3:
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 122              		.loc 1 596 0
 123              		@ sp needed
 124 0000 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE40:
 128 0002 C046     		.section	.text.HAL_UART_DeInit,"ax",%progbits
 129              		.align	2
 130              		.global	HAL_UART_DeInit
 131              		.code	16
 132              		.thumb_func
 134              	HAL_UART_DeInit:
 135              	.LFB38:
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 136              		.loc 1 536 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              	.LVL4:
 141 0000 70B5     		push	{r4, r5, r6, lr}
 142              	.LCFI0:
 143              		.cfi_def_cfa_offset 16
 144              		.cfi_offset 4, -16
 145              		.cfi_offset 5, -12
 146              		.cfi_offset 6, -8
 147              		.cfi_offset 14, -4
 148 0002 041E     		subs	r4, r0, #0
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 149              		.loc 1 538 0
 150 0004 18D0     		beq	.L9
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 151              		.loc 1 546 0
 152 0006 6926     		movs	r6, #105
 153 0008 2423     		movs	r3, #36
 154 000a 8355     		strb	r3, [r0, r6]
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 155              		.loc 1 549 0
 156 000c 0268     		ldr	r2, [r0]
 157 000e 1368     		ldr	r3, [r2]
 158 0010 0121     		movs	r1, #1
 159 0012 8B43     		bics	r3, r1
 160 0014 1360     		str	r3, [r2]
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 161              		.loc 1 551 0
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 46


 162 0016 0368     		ldr	r3, [r0]
 163 0018 0025     		movs	r5, #0
 164 001a 1D60     		str	r5, [r3]
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 165              		.loc 1 552 0
 166 001c 0368     		ldr	r3, [r0]
 167 001e 5D60     		str	r5, [r3, #4]
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 168              		.loc 1 553 0
 169 0020 0368     		ldr	r3, [r0]
 170 0022 9D60     		str	r5, [r3, #8]
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 171              		.loc 1 556 0
 172 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 173              	.LVL5:
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 174              		.loc 1 558 0
 175 0028 E566     		str	r5, [r4, #108]
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 176              		.loc 1 559 0
 177 002a A555     		strb	r5, [r4, r6]
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 178              		.loc 1 560 0
 179 002c 6A23     		movs	r3, #106
 180 002e E554     		strb	r5, [r4, r3]
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 181              		.loc 1 563 0
 182 0030 023B     		subs	r3, r3, #2
 183 0032 E554     		strb	r5, [r4, r3]
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 184              		.loc 1 565 0
 185 0034 0020     		movs	r0, #0
 186 0036 00E0     		b	.L8
 187              	.LVL6:
 188              	.L9:
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 189              		.loc 1 540 0
 190 0038 0120     		movs	r0, #1
 191              	.LVL7:
 192              	.L8:
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 193              		.loc 1 566 0
 194              		@ sp needed
 195              	.LVL8:
 196 003a 70BD     		pop	{r4, r5, r6, pc}
 197              		.cfi_endproc
 198              	.LFE38:
 200              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 201              		.align	2
 202              		.global	HAL_UART_Transmit_IT
 203              		.code	16
 204              		.thumb_func
 206              	HAL_UART_Transmit_IT:
 207              	.LFB43:
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 208              		.loc 1 862 0
 209              		.cfi_startproc
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 47


 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              	.LVL9:
 213 0000 10B5     		push	{r4, lr}
 214              	.LCFI1:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 4, -8
 217              		.cfi_offset 14, -4
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 218              		.loc 1 864 0
 219 0002 6923     		movs	r3, #105
 220 0004 C35C     		ldrb	r3, [r0, r3]
 221 0006 202B     		cmp	r3, #32
 222 0008 24D1     		bne	.L13
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 223              		.loc 1 866 0
 224 000a 0029     		cmp	r1, #0
 225 000c 24D0     		beq	.L14
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 226              		.loc 1 866 0 is_stmt 0 discriminator 1
 227 000e 002A     		cmp	r2, #0
 228 0010 24D0     		beq	.L15
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 229              		.loc 1 874 0 is_stmt 1
 230 0012 8023     		movs	r3, #128
 231 0014 5B01     		lsls	r3, r3, #5
 232 0016 8468     		ldr	r4, [r0, #8]
 233 0018 9C42     		cmp	r4, r3
 234 001a 04D1     		bne	.L12
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 235              		.loc 1 874 0 is_stmt 0 discriminator 1
 236 001c 0369     		ldr	r3, [r0, #16]
 237 001e 002B     		cmp	r3, #0
 238 0020 01D1     		bne	.L12
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 239              		.loc 1 876 0 is_stmt 1
 240 0022 CB07     		lsls	r3, r1, #31
 241 0024 1CD4     		bmi	.L16
 242              	.L12:
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 243              		.loc 1 883 0
 244 0026 6823     		movs	r3, #104
 245 0028 C35C     		ldrb	r3, [r0, r3]
 246 002a 012B     		cmp	r3, #1
 247 002c 1AD0     		beq	.L17
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 248              		.loc 1 885 0 discriminator 2
 249 002e C164     		str	r1, [r0, #76]
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 250              		.loc 1 886 0 discriminator 2
 251 0030 5023     		movs	r3, #80
 252 0032 C252     		strh	r2, [r0, r3]
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 253              		.loc 1 887 0 discriminator 2
 254 0034 0233     		adds	r3, r3, #2
 255 0036 C252     		strh	r2, [r0, r3]
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 48


 256              		.loc 1 889 0 discriminator 2
 257 0038 0023     		movs	r3, #0
 258 003a C366     		str	r3, [r0, #108]
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 259              		.loc 1 890 0 discriminator 2
 260 003c 2121     		movs	r1, #33
 261              	.LVL10:
 262 003e 6922     		movs	r2, #105
 263              	.LVL11:
 264 0040 8154     		strb	r1, [r0, r2]
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 265              		.loc 1 893 0 discriminator 2
 266 0042 013A     		subs	r2, r2, #1
 267 0044 8354     		strb	r3, [r0, r2]
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 268              		.loc 1 896 0 discriminator 2
 269 0046 0268     		ldr	r2, [r0]
 270 0048 1168     		ldr	r1, [r2]
 271 004a 8033     		adds	r3, r3, #128
 272 004c 0B43     		orrs	r3, r1
 273 004e 1360     		str	r3, [r2]
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 274              		.loc 1 898 0 discriminator 2
 275 0050 0020     		movs	r0, #0
 276              	.LVL12:
 277 0052 08E0     		b	.L11
 278              	.LVL13:
 279              	.L13:
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 280              		.loc 1 902 0
 281 0054 0220     		movs	r0, #2
 282              	.LVL14:
 283 0056 06E0     		b	.L11
 284              	.LVL15:
 285              	.L14:
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 286              		.loc 1 868 0
 287 0058 0120     		movs	r0, #1
 288              	.LVL16:
 289 005a 04E0     		b	.L11
 290              	.LVL17:
 291              	.L15:
 292 005c 0120     		movs	r0, #1
 293              	.LVL18:
 294 005e 02E0     		b	.L11
 295              	.LVL19:
 296              	.L16:
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 297              		.loc 1 878 0
 298 0060 0120     		movs	r0, #1
 299              	.LVL20:
 300 0062 00E0     		b	.L11
 301              	.LVL21:
 302              	.L17:
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 303              		.loc 1 883 0
 304 0064 0220     		movs	r0, #2
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 49


 305              	.LVL22:
 306              	.L11:
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 307              		.loc 1 904 0
 308              		@ sp needed
 309 0066 10BD     		pop	{r4, pc}
 310              		.cfi_endproc
 311              	.LFE43:
 313              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 314              		.align	2
 315              		.global	HAL_UART_Receive_IT
 316              		.code	16
 317              		.thumb_func
 319              	HAL_UART_Receive_IT:
 320              	.LFB44:
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 321              		.loc 1 918 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              	.LVL23:
 326 0000 30B5     		push	{r4, r5, lr}
 327              	.LCFI2:
 328              		.cfi_def_cfa_offset 12
 329              		.cfi_offset 4, -12
 330              		.cfi_offset 5, -8
 331              		.cfi_offset 14, -4
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 332              		.loc 1 920 0
 333 0002 6A23     		movs	r3, #106
 334 0004 C35C     		ldrb	r3, [r0, r3]
 335 0006 202B     		cmp	r3, #32
 336 0008 48D1     		bne	.L25
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 337              		.loc 1 922 0
 338 000a 0029     		cmp	r1, #0
 339 000c 48D0     		beq	.L26
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 340              		.loc 1 922 0 is_stmt 0 discriminator 1
 341 000e 002A     		cmp	r2, #0
 342 0010 48D0     		beq	.L27
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 343              		.loc 1 930 0 is_stmt 1
 344 0012 8368     		ldr	r3, [r0, #8]
 345 0014 8024     		movs	r4, #128
 346 0016 6401     		lsls	r4, r4, #5
 347 0018 A342     		cmp	r3, r4
 348 001a 04D1     		bne	.L20
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 349              		.loc 1 930 0 is_stmt 0 discriminator 1
 350 001c 0469     		ldr	r4, [r0, #16]
 351 001e 002C     		cmp	r4, #0
 352 0020 01D1     		bne	.L20
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 353              		.loc 1 932 0 is_stmt 1
 354 0022 CC07     		lsls	r4, r1, #31
 355 0024 40D4     		bmi	.L28
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 50


 356              	.L20:
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 357              		.loc 1 939 0
 358 0026 6824     		movs	r4, #104
 359 0028 045D     		ldrb	r4, [r0, r4]
 360 002a 012C     		cmp	r4, #1
 361 002c 3ED0     		beq	.L29
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 362              		.loc 1 939 0 is_stmt 0 discriminator 2
 363 002e 0125     		movs	r5, #1
 364 0030 6824     		movs	r4, #104
 365 0032 0555     		strb	r5, [r0, r4]
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 366              		.loc 1 941 0 is_stmt 1 discriminator 2
 367 0034 4165     		str	r1, [r0, #84]
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 368              		.loc 1 942 0 discriminator 2
 369 0036 5821     		movs	r1, #88
 370              	.LVL24:
 371 0038 4252     		strh	r2, [r0, r1]
 372              	.LVL25:
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 373              		.loc 1 943 0 discriminator 2
 374 003a 0231     		adds	r1, r1, #2
 375 003c 4252     		strh	r2, [r0, r1]
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 376              		.loc 1 946 0 discriminator 2
 377 003e 8022     		movs	r2, #128
 378              	.LVL26:
 379 0040 5201     		lsls	r2, r2, #5
 380 0042 9342     		cmp	r3, r2
 381 0044 0AD1     		bne	.L21
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 382              		.loc 1 946 0 is_stmt 0 discriminator 1
 383 0046 0369     		ldr	r3, [r0, #16]
 384 0048 002B     		cmp	r3, #0
 385 004a 03D1     		bne	.L22
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 386              		.loc 1 946 0 discriminator 3
 387 004c 184A     		ldr	r2, .L30
 388 004e 5C33     		adds	r3, r3, #92
 389 0050 C252     		strh	r2, [r0, r3]
 390              	.LVL27:
 391 0052 0FE0     		b	.L23
 392              	.LVL28:
 393              	.L22:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 394              		.loc 1 946 0 discriminator 4
 395 0054 FF22     		movs	r2, #255
 396 0056 5C23     		movs	r3, #92
 397 0058 C252     		strh	r2, [r0, r3]
 398              	.LVL29:
 399 005a 0BE0     		b	.L23
 400              	.LVL30:
 401              	.L21:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 402              		.loc 1 946 0 discriminator 2
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 51


 403 005c 002B     		cmp	r3, #0
 404 005e 09D1     		bne	.L23
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 405              		.loc 1 946 0 discriminator 5
 406 0060 0369     		ldr	r3, [r0, #16]
 407 0062 002B     		cmp	r3, #0
 408 0064 03D1     		bne	.L24
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 409              		.loc 1 946 0 discriminator 6
 410 0066 FF22     		movs	r2, #255
 411 0068 5C33     		adds	r3, r3, #92
 412 006a C252     		strh	r2, [r0, r3]
 413              	.LVL31:
 414 006c 02E0     		b	.L23
 415              	.LVL32:
 416              	.L24:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 417              		.loc 1 946 0 discriminator 7
 418 006e 7F22     		movs	r2, #127
 419 0070 5C23     		movs	r3, #92
 420 0072 C252     		strh	r2, [r0, r3]
 421              	.LVL33:
 422              	.L23:
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 423              		.loc 1 948 0 is_stmt 1
 424 0074 0023     		movs	r3, #0
 425 0076 C366     		str	r3, [r0, #108]
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 426              		.loc 1 949 0
 427 0078 2221     		movs	r1, #34
 428 007a 6A22     		movs	r2, #106
 429 007c 8154     		strb	r1, [r0, r2]
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 430              		.loc 1 952 0
 431 007e 023A     		subs	r2, r2, #2
 432 0080 8354     		strb	r3, [r0, r2]
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 433              		.loc 1 955 0
 434 0082 0268     		ldr	r2, [r0]
 435 0084 9168     		ldr	r1, [r2, #8]
 436 0086 0133     		adds	r3, r3, #1
 437 0088 0B43     		orrs	r3, r1
 438 008a 9360     		str	r3, [r2, #8]
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 439              		.loc 1 958 0
 440 008c 0268     		ldr	r2, [r0]
 441 008e 1368     		ldr	r3, [r2]
 442 0090 9021     		movs	r1, #144
 443 0092 4900     		lsls	r1, r1, #1
 444 0094 0B43     		orrs	r3, r1
 445 0096 1360     		str	r3, [r2]
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 446              		.loc 1 960 0
 447 0098 0020     		movs	r0, #0
 448              	.LVL34:
 449 009a 08E0     		b	.L19
 450              	.LVL35:
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 52


 451              	.L25:
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 452              		.loc 1 964 0
 453 009c 0220     		movs	r0, #2
 454              	.LVL36:
 455 009e 06E0     		b	.L19
 456              	.LVL37:
 457              	.L26:
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 458              		.loc 1 924 0
 459 00a0 0120     		movs	r0, #1
 460              	.LVL38:
 461 00a2 04E0     		b	.L19
 462              	.LVL39:
 463              	.L27:
 464 00a4 0120     		movs	r0, #1
 465              	.LVL40:
 466 00a6 02E0     		b	.L19
 467              	.LVL41:
 468              	.L28:
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 469              		.loc 1 934 0
 470 00a8 0120     		movs	r0, #1
 471              	.LVL42:
 472 00aa 00E0     		b	.L19
 473              	.LVL43:
 474              	.L29:
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 475              		.loc 1 939 0
 476 00ac 0220     		movs	r0, #2
 477              	.LVL44:
 478              	.L19:
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 479              		.loc 1 966 0
 480              		@ sp needed
 481 00ae 30BD     		pop	{r4, r5, pc}
 482              	.L31:
 483              		.align	2
 484              	.L30:
 485 00b0 FF010000 		.word	511
 486              		.cfi_endproc
 487              	.LFE44:
 489              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 490              		.align	2
 491              		.global	HAL_UART_Transmit_DMA
 492              		.code	16
 493              		.thumb_func
 495              	HAL_UART_Transmit_DMA:
 496              	.LFB45:
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 497              		.loc 1 980 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              	.LVL45:
 502 0000 70B5     		push	{r4, r5, r6, lr}
 503              	.LCFI3:
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 53


 504              		.cfi_def_cfa_offset 16
 505              		.cfi_offset 4, -16
 506              		.cfi_offset 5, -12
 507              		.cfi_offset 6, -8
 508              		.cfi_offset 14, -4
 509 0002 0400     		movs	r4, r0
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 510              		.loc 1 982 0
 511 0004 6920     		movs	r0, #105
 512              	.LVL46:
 513 0006 205C     		ldrb	r0, [r4, r0]
 514 0008 2028     		cmp	r0, #32
 515 000a 3CD1     		bne	.L35
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 516              		.loc 1 984 0
 517 000c 0029     		cmp	r1, #0
 518 000e 3CD0     		beq	.L36
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 519              		.loc 1 984 0 is_stmt 0 discriminator 1
 520 0010 002A     		cmp	r2, #0
 521 0012 3CD0     		beq	.L37
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 522              		.loc 1 992 0 is_stmt 1
 523 0014 8023     		movs	r3, #128
 524 0016 5B01     		lsls	r3, r3, #5
 525 0018 A068     		ldr	r0, [r4, #8]
 526 001a 9842     		cmp	r0, r3
 527 001c 04D1     		bne	.L34
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 528              		.loc 1 992 0 is_stmt 0 discriminator 1
 529 001e 2369     		ldr	r3, [r4, #16]
 530 0020 002B     		cmp	r3, #0
 531 0022 01D1     		bne	.L34
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 532              		.loc 1 994 0 is_stmt 1
 533 0024 CB07     		lsls	r3, r1, #31
 534 0026 34D4     		bmi	.L38
 535              	.L34:
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 536              		.loc 1 1001 0
 537 0028 6823     		movs	r3, #104
 538 002a E35C     		ldrb	r3, [r4, r3]
 539 002c 012B     		cmp	r3, #1
 540 002e 32D0     		beq	.L39
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 541              		.loc 1 1001 0 is_stmt 0 discriminator 2
 542 0030 6826     		movs	r6, #104
 543 0032 0123     		movs	r3, #1
 544 0034 A355     		strb	r3, [r4, r6]
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 545              		.loc 1 1003 0 is_stmt 1 discriminator 2
 546 0036 E164     		str	r1, [r4, #76]
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 547              		.loc 1 1004 0 discriminator 2
 548 0038 4F33     		adds	r3, r3, #79
 549 003a E252     		strh	r2, [r4, r3]
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 54


 550              		.loc 1 1005 0 discriminator 2
 551 003c 0233     		adds	r3, r3, #2
 552 003e E252     		strh	r2, [r4, r3]
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 553              		.loc 1 1007 0 discriminator 2
 554 0040 0025     		movs	r5, #0
 555 0042 E566     		str	r5, [r4, #108]
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 556              		.loc 1 1008 0 discriminator 2
 557 0044 2121     		movs	r1, #33
 558              	.LVL47:
 559 0046 1733     		adds	r3, r3, #23
 560 0048 E154     		strb	r1, [r4, r3]
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 561              		.loc 1 1011 0 discriminator 2
 562 004a 236E     		ldr	r3, [r4, #96]
 563 004c 1349     		ldr	r1, .L40
 564 004e 9962     		str	r1, [r3, #40]
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 565              		.loc 1 1014 0 discriminator 2
 566 0050 236E     		ldr	r3, [r4, #96]
 567 0052 1349     		ldr	r1, .L40+4
 568 0054 D962     		str	r1, [r3, #44]
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 569              		.loc 1 1017 0 discriminator 2
 570 0056 236E     		ldr	r3, [r4, #96]
 571 0058 1249     		ldr	r1, .L40+8
 572 005a 1963     		str	r1, [r3, #48]
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 573              		.loc 1 1020 0 discriminator 2
 574 005c 236E     		ldr	r3, [r4, #96]
 575 005e 5D63     		str	r5, [r3, #52]
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 576              		.loc 1 1023 0 discriminator 2
 577 0060 2168     		ldr	r1, [r4]
 578 0062 2831     		adds	r1, r1, #40
 579 0064 1300     		movs	r3, r2
 580 0066 0A00     		movs	r2, r1
 581              	.LVL48:
 582 0068 E16C     		ldr	r1, [r4, #76]
 583 006a 206E     		ldr	r0, [r4, #96]
 584 006c FFF7FEFF 		bl	HAL_DMA_Start_IT
 585              	.LVL49:
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 586              		.loc 1 1026 0 discriminator 2
 587 0070 2368     		ldr	r3, [r4]
 588 0072 4022     		movs	r2, #64
 589 0074 1A62     		str	r2, [r3, #32]
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 590              		.loc 1 1029 0 discriminator 2
 591 0076 A555     		strb	r5, [r4, r6]
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 592              		.loc 1 1033 0 discriminator 2
 593 0078 2268     		ldr	r2, [r4]
 594 007a 9168     		ldr	r1, [r2, #8]
 595 007c 8023     		movs	r3, #128
 596 007e 0B43     		orrs	r3, r1
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 55


 597 0080 9360     		str	r3, [r2, #8]
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 598              		.loc 1 1035 0 discriminator 2
 599 0082 0020     		movs	r0, #0
 600 0084 08E0     		b	.L33
 601              	.LVL50:
 602              	.L35:
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 603              		.loc 1 1039 0
 604 0086 0220     		movs	r0, #2
 605 0088 06E0     		b	.L33
 606              	.L36:
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 607              		.loc 1 986 0
 608 008a 0120     		movs	r0, #1
 609 008c 04E0     		b	.L33
 610              	.L37:
 611 008e 0120     		movs	r0, #1
 612 0090 02E0     		b	.L33
 613              	.L38:
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 614              		.loc 1 996 0
 615 0092 0120     		movs	r0, #1
 616 0094 00E0     		b	.L33
 617              	.L39:
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 618              		.loc 1 1001 0
 619 0096 0220     		movs	r0, #2
 620              	.LVL51:
 621              	.L33:
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 622              		.loc 1 1041 0
 623              		@ sp needed
 624              	.LVL52:
 625 0098 70BD     		pop	{r4, r5, r6, pc}
 626              	.L41:
 627 009a C046     		.align	2
 628              	.L40:
 629 009c 00000000 		.word	UART_DMATransmitCplt
 630 00a0 00000000 		.word	UART_DMATxHalfCplt
 631 00a4 00000000 		.word	UART_DMAError
 632              		.cfi_endproc
 633              	.LFE45:
 635              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 636              		.align	2
 637              		.global	HAL_UART_Receive_DMA
 638              		.code	16
 639              		.thumb_func
 641              	HAL_UART_Receive_DMA:
 642              	.LFB46:
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 643              		.loc 1 1055 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              	.LVL53:
 648 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 56


 649              	.LCFI4:
 650              		.cfi_def_cfa_offset 24
 651              		.cfi_offset 3, -24
 652              		.cfi_offset 4, -20
 653              		.cfi_offset 5, -16
 654              		.cfi_offset 6, -12
 655              		.cfi_offset 7, -8
 656              		.cfi_offset 14, -4
 657 0002 0400     		movs	r4, r0
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 658              		.loc 1 1057 0
 659 0004 6A20     		movs	r0, #106
 660              	.LVL54:
 661 0006 205C     		ldrb	r0, [r4, r0]
 662 0008 2028     		cmp	r0, #32
 663 000a 40D1     		bne	.L45
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 664              		.loc 1 1059 0
 665 000c 0029     		cmp	r1, #0
 666 000e 40D0     		beq	.L46
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 667              		.loc 1 1059 0 is_stmt 0 discriminator 1
 668 0010 002A     		cmp	r2, #0
 669 0012 40D0     		beq	.L47
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 670              		.loc 1 1067 0 is_stmt 1
 671 0014 8023     		movs	r3, #128
 672 0016 5B01     		lsls	r3, r3, #5
 673 0018 A068     		ldr	r0, [r4, #8]
 674 001a 9842     		cmp	r0, r3
 675 001c 04D1     		bne	.L44
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 676              		.loc 1 1067 0 is_stmt 0 discriminator 1
 677 001e 2369     		ldr	r3, [r4, #16]
 678 0020 002B     		cmp	r3, #0
 679 0022 01D1     		bne	.L44
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 680              		.loc 1 1069 0 is_stmt 1
 681 0024 CB07     		lsls	r3, r1, #31
 682 0026 38D4     		bmi	.L48
 683              	.L44:
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 684              		.loc 1 1076 0
 685 0028 6823     		movs	r3, #104
 686 002a E35C     		ldrb	r3, [r4, r3]
 687 002c 012B     		cmp	r3, #1
 688 002e 36D0     		beq	.L49
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 689              		.loc 1 1076 0 is_stmt 0 discriminator 2
 690 0030 6827     		movs	r7, #104
 691 0032 0125     		movs	r5, #1
 692 0034 E555     		strb	r5, [r4, r7]
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 693              		.loc 1 1078 0 is_stmt 1 discriminator 2
 694 0036 6165     		str	r1, [r4, #84]
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 695              		.loc 1 1079 0 discriminator 2
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 57


 696 0038 5823     		movs	r3, #88
 697 003a E252     		strh	r2, [r4, r3]
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 698              		.loc 1 1081 0 discriminator 2
 699 003c 0026     		movs	r6, #0
 700 003e E666     		str	r6, [r4, #108]
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 701              		.loc 1 1082 0 discriminator 2
 702 0040 2221     		movs	r1, #34
 703              	.LVL55:
 704 0042 1233     		adds	r3, r3, #18
 705 0044 E154     		strb	r1, [r4, r3]
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 706              		.loc 1 1085 0 discriminator 2
 707 0046 636E     		ldr	r3, [r4, #100]
 708 0048 1649     		ldr	r1, .L50
 709 004a 9962     		str	r1, [r3, #40]
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 710              		.loc 1 1088 0 discriminator 2
 711 004c 636E     		ldr	r3, [r4, #100]
 712 004e 1649     		ldr	r1, .L50+4
 713 0050 D962     		str	r1, [r3, #44]
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 714              		.loc 1 1091 0 discriminator 2
 715 0052 636E     		ldr	r3, [r4, #100]
 716 0054 1549     		ldr	r1, .L50+8
 717 0056 1963     		str	r1, [r3, #48]
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 718              		.loc 1 1094 0 discriminator 2
 719 0058 636E     		ldr	r3, [r4, #100]
 720 005a 5E63     		str	r6, [r3, #52]
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 721              		.loc 1 1097 0 discriminator 2
 722 005c 2168     		ldr	r1, [r4]
 723 005e 2431     		adds	r1, r1, #36
 724 0060 1300     		movs	r3, r2
 725 0062 626D     		ldr	r2, [r4, #84]
 726              	.LVL56:
 727 0064 606E     		ldr	r0, [r4, #100]
 728 0066 FFF7FEFF 		bl	HAL_DMA_Start_IT
 729              	.LVL57:
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 730              		.loc 1 1100 0 discriminator 2
 731 006a E655     		strb	r6, [r4, r7]
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 732              		.loc 1 1103 0 discriminator 2
 733 006c 2268     		ldr	r2, [r4]
 734 006e 1368     		ldr	r3, [r2]
 735 0070 8021     		movs	r1, #128
 736 0072 4900     		lsls	r1, r1, #1
 737 0074 0B43     		orrs	r3, r1
 738 0076 1360     		str	r3, [r2]
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 739              		.loc 1 1106 0 discriminator 2
 740 0078 2368     		ldr	r3, [r4]
 741 007a 9A68     		ldr	r2, [r3, #8]
 742 007c 1543     		orrs	r5, r2
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 58


 743 007e 9D60     		str	r5, [r3, #8]
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 744              		.loc 1 1110 0 discriminator 2
 745 0080 2268     		ldr	r2, [r4]
 746 0082 9168     		ldr	r1, [r2, #8]
 747 0084 4023     		movs	r3, #64
 748 0086 0B43     		orrs	r3, r1
 749 0088 9360     		str	r3, [r2, #8]
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 750              		.loc 1 1112 0 discriminator 2
 751 008a 0020     		movs	r0, #0
 752 008c 08E0     		b	.L43
 753              	.LVL58:
 754              	.L45:
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 755              		.loc 1 1116 0
 756 008e 0220     		movs	r0, #2
 757 0090 06E0     		b	.L43
 758              	.L46:
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 759              		.loc 1 1061 0
 760 0092 0120     		movs	r0, #1
 761 0094 04E0     		b	.L43
 762              	.L47:
 763 0096 0120     		movs	r0, #1
 764 0098 02E0     		b	.L43
 765              	.L48:
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 766              		.loc 1 1071 0
 767 009a 0120     		movs	r0, #1
 768 009c 00E0     		b	.L43
 769              	.L49:
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 770              		.loc 1 1076 0
 771 009e 0220     		movs	r0, #2
 772              	.LVL59:
 773              	.L43:
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 774              		.loc 1 1118 0
 775              		@ sp needed
 776              	.LVL60:
 777 00a0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 778              	.L51:
 779 00a2 C046     		.align	2
 780              	.L50:
 781 00a4 00000000 		.word	UART_DMAReceiveCplt
 782 00a8 00000000 		.word	UART_DMARxHalfCplt
 783 00ac 00000000 		.word	UART_DMAError
 784              		.cfi_endproc
 785              	.LFE46:
 787              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 788              		.align	2
 789              		.global	HAL_UART_DMAPause
 790              		.code	16
 791              		.thumb_func
 793              	HAL_UART_DMAPause:
 794              	.LFB47:
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 59


1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 795              		.loc 1 1126 0
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 0
 798              		@ frame_needed = 0, uses_anonymous_args = 0
 799              		@ link register save eliminated.
 800              	.LVL61:
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 801              		.loc 1 1128 0
 802 0000 6823     		movs	r3, #104
 803 0002 C35C     		ldrb	r3, [r0, r3]
 804 0004 012B     		cmp	r3, #1
 805 0006 29D0     		beq	.L56
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 806              		.loc 1 1128 0 is_stmt 0 discriminator 2
 807 0008 0122     		movs	r2, #1
 808 000a 6823     		movs	r3, #104
 809 000c C254     		strb	r2, [r0, r3]
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 810              		.loc 1 1130 0 is_stmt 1 discriminator 2
 811 000e 0133     		adds	r3, r3, #1
 812 0010 C35C     		ldrb	r3, [r0, r3]
 813 0012 212B     		cmp	r3, #33
 814 0014 07D1     		bne	.L54
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 815              		.loc 1 1131 0 discriminator 1
 816 0016 0368     		ldr	r3, [r0]
 817 0018 9A68     		ldr	r2, [r3, #8]
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 818              		.loc 1 1130 0 discriminator 1
 819 001a 1206     		lsls	r2, r2, #24
 820 001c 03D5     		bpl	.L54
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 821              		.loc 1 1134 0
 822 001e 9A68     		ldr	r2, [r3, #8]
 823 0020 8021     		movs	r1, #128
 824 0022 8A43     		bics	r2, r1
 825 0024 9A60     		str	r2, [r3, #8]
 826              	.L54:
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 827              		.loc 1 1136 0
 828 0026 6A23     		movs	r3, #106
 829 0028 C35C     		ldrb	r3, [r0, r3]
 830 002a 222B     		cmp	r3, #34
 831 002c 11D1     		bne	.L55
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 832              		.loc 1 1137 0 discriminator 1
 833 002e 0368     		ldr	r3, [r0]
 834 0030 9A68     		ldr	r2, [r3, #8]
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 835              		.loc 1 1136 0 discriminator 1
 836 0032 5206     		lsls	r2, r2, #25
 837 0034 0DD5     		bpl	.L55
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 838              		.loc 1 1140 0
 839 0036 1968     		ldr	r1, [r3]
 840 0038 094A     		ldr	r2, .L57
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 60


 841 003a 0A40     		ands	r2, r1
 842 003c 1A60     		str	r2, [r3]
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 843              		.loc 1 1141 0
 844 003e 0268     		ldr	r2, [r0]
 845 0040 9368     		ldr	r3, [r2, #8]
 846 0042 0121     		movs	r1, #1
 847 0044 8B43     		bics	r3, r1
 848 0046 9360     		str	r3, [r2, #8]
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 849              		.loc 1 1144 0
 850 0048 0268     		ldr	r2, [r0]
 851 004a 9368     		ldr	r3, [r2, #8]
 852 004c 3F31     		adds	r1, r1, #63
 853 004e 8B43     		bics	r3, r1
 854 0050 9360     		str	r3, [r2, #8]
 855              	.L55:
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 856              		.loc 1 1148 0
 857 0052 0022     		movs	r2, #0
 858 0054 6823     		movs	r3, #104
 859 0056 C254     		strb	r2, [r0, r3]
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 860              		.loc 1 1150 0
 861 0058 0020     		movs	r0, #0
 862              	.LVL62:
 863 005a 00E0     		b	.L53
 864              	.LVL63:
 865              	.L56:
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 866              		.loc 1 1128 0
 867 005c 0220     		movs	r0, #2
 868              	.LVL64:
 869              	.L53:
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 870              		.loc 1 1151 0
 871              		@ sp needed
 872 005e 7047     		bx	lr
 873              	.L58:
 874              		.align	2
 875              	.L57:
 876 0060 FFFEFFFF 		.word	-257
 877              		.cfi_endproc
 878              	.LFE47:
 880              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 881              		.align	2
 882              		.global	HAL_UART_DMAResume
 883              		.code	16
 884              		.thumb_func
 886              	HAL_UART_DMAResume:
 887              	.LFB48:
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 888              		.loc 1 1159 0
 889              		.cfi_startproc
 890              		@ args = 0, pretend = 0, frame = 0
 891              		@ frame_needed = 0, uses_anonymous_args = 0
 892              		@ link register save eliminated.
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 61


 893              	.LVL65:
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 894              		.loc 1 1161 0
 895 0000 6823     		movs	r3, #104
 896 0002 C35C     		ldrb	r3, [r0, r3]
 897 0004 012B     		cmp	r3, #1
 898 0006 27D0     		beq	.L63
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 899              		.loc 1 1161 0 is_stmt 0 discriminator 2
 900 0008 0122     		movs	r2, #1
 901 000a 6823     		movs	r3, #104
 902 000c C254     		strb	r2, [r0, r3]
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 903              		.loc 1 1163 0 is_stmt 1 discriminator 2
 904 000e 0133     		adds	r3, r3, #1
 905 0010 C35C     		ldrb	r3, [r0, r3]
 906 0012 212B     		cmp	r3, #33
 907 0014 04D1     		bne	.L61
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 908              		.loc 1 1166 0
 909 0016 0268     		ldr	r2, [r0]
 910 0018 9168     		ldr	r1, [r2, #8]
 911 001a 5F33     		adds	r3, r3, #95
 912 001c 0B43     		orrs	r3, r1
 913 001e 9360     		str	r3, [r2, #8]
 914              	.L61:
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 915              		.loc 1 1168 0
 916 0020 6A23     		movs	r3, #106
 917 0022 C35C     		ldrb	r3, [r0, r3]
 918 0024 222B     		cmp	r3, #34
 919 0026 12D1     		bne	.L62
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 920              		.loc 1 1171 0
 921 0028 0368     		ldr	r3, [r0]
 922 002a 0822     		movs	r2, #8
 923 002c 1A62     		str	r2, [r3, #32]
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 924              		.loc 1 1174 0
 925 002e 0268     		ldr	r2, [r0]
 926 0030 1368     		ldr	r3, [r2]
 927 0032 8021     		movs	r1, #128
 928 0034 4900     		lsls	r1, r1, #1
 929 0036 0B43     		orrs	r3, r1
 930 0038 1360     		str	r3, [r2]
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 931              		.loc 1 1175 0
 932 003a 0268     		ldr	r2, [r0]
 933 003c 9168     		ldr	r1, [r2, #8]
 934 003e 0123     		movs	r3, #1
 935 0040 0B43     		orrs	r3, r1
 936 0042 9360     		str	r3, [r2, #8]
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 937              		.loc 1 1178 0
 938 0044 0268     		ldr	r2, [r0]
 939 0046 9168     		ldr	r1, [r2, #8]
 940 0048 4023     		movs	r3, #64
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 62


 941 004a 0B43     		orrs	r3, r1
 942 004c 9360     		str	r3, [r2, #8]
 943              	.L62:
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 944              		.loc 1 1182 0
 945 004e 0022     		movs	r2, #0
 946 0050 6823     		movs	r3, #104
 947 0052 C254     		strb	r2, [r0, r3]
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 948              		.loc 1 1184 0
 949 0054 0020     		movs	r0, #0
 950              	.LVL66:
 951 0056 00E0     		b	.L60
 952              	.LVL67:
 953              	.L63:
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 954              		.loc 1 1161 0
 955 0058 0220     		movs	r0, #2
 956              	.LVL68:
 957              	.L60:
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 958              		.loc 1 1185 0
 959              		@ sp needed
 960 005a 7047     		bx	lr
 961              		.cfi_endproc
 962              	.LFE48:
 964              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 965              		.align	2
 966              		.global	HAL_UART_DMAStop
 967              		.code	16
 968              		.thumb_func
 970              	HAL_UART_DMAStop:
 971              	.LFB49:
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 972              		.loc 1 1193 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 0
 975              		@ frame_needed = 0, uses_anonymous_args = 0
 976              	.LVL69:
 977 0000 10B5     		push	{r4, lr}
 978              	.LCFI5:
 979              		.cfi_def_cfa_offset 8
 980              		.cfi_offset 4, -8
 981              		.cfi_offset 14, -4
 982 0002 0400     		movs	r4, r0
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 983              		.loc 1 1202 0
 984 0004 6923     		movs	r3, #105
 985 0006 C35C     		ldrb	r3, [r0, r3]
 986 0008 212B     		cmp	r3, #33
 987 000a 0FD1     		bne	.L65
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 988              		.loc 1 1203 0 discriminator 1
 989 000c 0368     		ldr	r3, [r0]
 990 000e 9A68     		ldr	r2, [r3, #8]
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 991              		.loc 1 1202 0 discriminator 1
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 63


 992 0010 1206     		lsls	r2, r2, #24
 993 0012 0BD5     		bpl	.L65
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 994              		.loc 1 1205 0
 995 0014 9A68     		ldr	r2, [r3, #8]
 996 0016 8021     		movs	r1, #128
 997 0018 8A43     		bics	r2, r1
 998 001a 9A60     		str	r2, [r3, #8]
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 999              		.loc 1 1208 0
 1000 001c 006E     		ldr	r0, [r0, #96]
 1001              	.LVL70:
 1002 001e 0028     		cmp	r0, #0
 1003 0020 01D0     		beq	.L66
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1004              		.loc 1 1210 0
 1005 0022 FFF7FEFF 		bl	HAL_DMA_Abort
 1006              	.LVL71:
 1007              	.L66:
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1008              		.loc 1 1213 0
 1009 0026 2000     		movs	r0, r4
 1010 0028 FFF7FEFF 		bl	UART_EndTxTransfer
 1011              	.LVL72:
 1012              	.L65:
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1013              		.loc 1 1217 0
 1014 002c 6A23     		movs	r3, #106
 1015 002e E35C     		ldrb	r3, [r4, r3]
 1016 0030 222B     		cmp	r3, #34
 1017 0032 0FD1     		bne	.L67
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1018              		.loc 1 1218 0 discriminator 1
 1019 0034 2368     		ldr	r3, [r4]
 1020 0036 9A68     		ldr	r2, [r3, #8]
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1021              		.loc 1 1217 0 discriminator 1
 1022 0038 5206     		lsls	r2, r2, #25
 1023 003a 0BD5     		bpl	.L67
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1024              		.loc 1 1220 0
 1025 003c 9A68     		ldr	r2, [r3, #8]
 1026 003e 4021     		movs	r1, #64
 1027 0040 8A43     		bics	r2, r1
 1028 0042 9A60     		str	r2, [r3, #8]
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1029              		.loc 1 1223 0
 1030 0044 606E     		ldr	r0, [r4, #100]
 1031 0046 0028     		cmp	r0, #0
 1032 0048 01D0     		beq	.L68
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1033              		.loc 1 1225 0
 1034 004a FFF7FEFF 		bl	HAL_DMA_Abort
 1035              	.LVL73:
 1036              	.L68:
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1037              		.loc 1 1228 0
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 64


 1038 004e 2000     		movs	r0, r4
 1039 0050 FFF7FEFF 		bl	UART_EndRxTransfer
 1040              	.LVL74:
 1041              	.L67:
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1042              		.loc 1 1232 0
 1043 0054 0020     		movs	r0, #0
 1044              		@ sp needed
 1045              	.LVL75:
 1046 0056 10BD     		pop	{r4, pc}
 1047              		.cfi_endproc
 1048              	.LFE49:
 1050              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1051              		.align	2
 1052              		.global	HAL_UART_Abort
 1053              		.code	16
 1054              		.thumb_func
 1056              	HAL_UART_Abort:
 1057              	.LFB50:
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1058              		.loc 1 1247 0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 0
 1061              		@ frame_needed = 0, uses_anonymous_args = 0
 1062              	.LVL76:
 1063 0000 10B5     		push	{r4, lr}
 1064              	.LCFI6:
 1065              		.cfi_def_cfa_offset 8
 1066              		.cfi_offset 4, -8
 1067              		.cfi_offset 14, -4
 1068 0002 0400     		movs	r4, r0
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1069              		.loc 1 1249 0
 1070 0004 0268     		ldr	r2, [r0]
 1071 0006 1168     		ldr	r1, [r2]
 1072 0008 1B4B     		ldr	r3, .L72
 1073 000a 0B40     		ands	r3, r1
 1074 000c 1360     		str	r3, [r2]
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1075              		.loc 1 1250 0
 1076 000e 0268     		ldr	r2, [r0]
 1077 0010 9368     		ldr	r3, [r2, #8]
 1078 0012 0121     		movs	r1, #1
 1079 0014 8B43     		bics	r3, r1
 1080 0016 9360     		str	r3, [r2, #8]
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1081              		.loc 1 1253 0
 1082 0018 0368     		ldr	r3, [r0]
 1083 001a 9A68     		ldr	r2, [r3, #8]
 1084 001c 1206     		lsls	r2, r2, #24
 1085 001e 0BD5     		bpl	.L70
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1086              		.loc 1 1255 0
 1087 0020 9A68     		ldr	r2, [r3, #8]
 1088 0022 7F31     		adds	r1, r1, #127
 1089 0024 8A43     		bics	r2, r1
 1090 0026 9A60     		str	r2, [r3, #8]
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 65


1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1091              		.loc 1 1258 0
 1092 0028 036E     		ldr	r3, [r0, #96]
 1093 002a 002B     		cmp	r3, #0
 1094 002c 04D0     		beq	.L70
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1095              		.loc 1 1262 0
 1096 002e 0022     		movs	r2, #0
 1097 0030 5A63     		str	r2, [r3, #52]
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1098              		.loc 1 1264 0
 1099 0032 006E     		ldr	r0, [r0, #96]
 1100              	.LVL77:
 1101 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1102              	.LVL78:
 1103              	.L70:
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1104              		.loc 1 1269 0
 1105 0038 2368     		ldr	r3, [r4]
 1106 003a 9A68     		ldr	r2, [r3, #8]
 1107 003c 5206     		lsls	r2, r2, #25
 1108 003e 0BD5     		bpl	.L71
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1109              		.loc 1 1271 0
 1110 0040 9A68     		ldr	r2, [r3, #8]
 1111 0042 4021     		movs	r1, #64
 1112 0044 8A43     		bics	r2, r1
 1113 0046 9A60     		str	r2, [r3, #8]
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1114              		.loc 1 1274 0
 1115 0048 636E     		ldr	r3, [r4, #100]
 1116 004a 002B     		cmp	r3, #0
 1117 004c 04D0     		beq	.L71
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1118              		.loc 1 1278 0
 1119 004e 0022     		movs	r2, #0
 1120 0050 5A63     		str	r2, [r3, #52]
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1121              		.loc 1 1280 0
 1122 0052 606E     		ldr	r0, [r4, #100]
 1123 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 1124              	.LVL79:
 1125              	.L71:
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U; 
 1126              		.loc 1 1285 0
 1127 0058 0023     		movs	r3, #0
 1128 005a 5222     		movs	r2, #82
 1129 005c A352     		strh	r3, [r4, r2]
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1130              		.loc 1 1286 0
 1131 005e 0832     		adds	r2, r2, #8
 1132 0060 A352     		strh	r3, [r4, r2]
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1133              		.loc 1 1289 0
 1134 0062 2268     		ldr	r2, [r4]
 1135 0064 0F21     		movs	r1, #15
 1136 0066 1162     		str	r1, [r2, #32]
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 66


1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1137              		.loc 1 1292 0
 1138 0068 2022     		movs	r2, #32
 1139 006a 5A31     		adds	r1, r1, #90
 1140 006c 6254     		strb	r2, [r4, r1]
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1141              		.loc 1 1293 0
 1142 006e 0131     		adds	r1, r1, #1
 1143 0070 6254     		strb	r2, [r4, r1]
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1144              		.loc 1 1296 0
 1145 0072 E366     		str	r3, [r4, #108]
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1146              		.loc 1 1299 0
 1147 0074 0020     		movs	r0, #0
 1148              		@ sp needed
 1149              	.LVL80:
 1150 0076 10BD     		pop	{r4, pc}
 1151              	.L73:
 1152              		.align	2
 1153              	.L72:
 1154 0078 1FFEFFFF 		.word	-481
 1155              		.cfi_endproc
 1156              	.LFE50:
 1158              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1159              		.align	2
 1160              		.global	HAL_UART_AbortTransmit
 1161              		.code	16
 1162              		.thumb_func
 1164              	HAL_UART_AbortTransmit:
 1165              	.LFB51:
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1166              		.loc 1 1314 0
 1167              		.cfi_startproc
 1168              		@ args = 0, pretend = 0, frame = 0
 1169              		@ frame_needed = 0, uses_anonymous_args = 0
 1170              	.LVL81:
 1171 0000 10B5     		push	{r4, lr}
 1172              	.LCFI7:
 1173              		.cfi_def_cfa_offset 8
 1174              		.cfi_offset 4, -8
 1175              		.cfi_offset 14, -4
 1176 0002 0400     		movs	r4, r0
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1177              		.loc 1 1316 0
 1178 0004 0268     		ldr	r2, [r0]
 1179 0006 1368     		ldr	r3, [r2]
 1180 0008 C021     		movs	r1, #192
 1181 000a 8B43     		bics	r3, r1
 1182 000c 1360     		str	r3, [r2]
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1183              		.loc 1 1319 0
 1184 000e 0368     		ldr	r3, [r0]
 1185 0010 9A68     		ldr	r2, [r3, #8]
 1186 0012 1206     		lsls	r2, r2, #24
 1187 0014 0BD5     		bpl	.L75
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 67


 1188              		.loc 1 1321 0
 1189 0016 9A68     		ldr	r2, [r3, #8]
 1190 0018 4039     		subs	r1, r1, #64
 1191 001a 8A43     		bics	r2, r1
 1192 001c 9A60     		str	r2, [r3, #8]
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1193              		.loc 1 1324 0
 1194 001e 036E     		ldr	r3, [r0, #96]
 1195 0020 002B     		cmp	r3, #0
 1196 0022 04D0     		beq	.L75
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1197              		.loc 1 1328 0
 1198 0024 0022     		movs	r2, #0
 1199 0026 5A63     		str	r2, [r3, #52]
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1200              		.loc 1 1330 0
 1201 0028 006E     		ldr	r0, [r0, #96]
 1202              	.LVL82:
 1203 002a FFF7FEFF 		bl	HAL_DMA_Abort
 1204              	.LVL83:
 1205              	.L75:
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1206              		.loc 1 1335 0
 1207 002e 0022     		movs	r2, #0
 1208 0030 5223     		movs	r3, #82
 1209 0032 E252     		strh	r2, [r4, r3]
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1210              		.loc 1 1338 0
 1211 0034 2032     		adds	r2, r2, #32
 1212 0036 1733     		adds	r3, r3, #23
 1213 0038 E254     		strb	r2, [r4, r3]
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1214              		.loc 1 1341 0
 1215 003a 0020     		movs	r0, #0
 1216              		@ sp needed
 1217              	.LVL84:
 1218 003c 10BD     		pop	{r4, pc}
 1219              		.cfi_endproc
 1220              	.LFE51:
 1222 003e C046     		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1223              		.align	2
 1224              		.global	HAL_UART_AbortReceive
 1225              		.code	16
 1226              		.thumb_func
 1228              	HAL_UART_AbortReceive:
 1229              	.LFB52:
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1230              		.loc 1 1356 0
 1231              		.cfi_startproc
 1232              		@ args = 0, pretend = 0, frame = 0
 1233              		@ frame_needed = 0, uses_anonymous_args = 0
 1234              	.LVL85:
 1235 0000 10B5     		push	{r4, lr}
 1236              	.LCFI8:
 1237              		.cfi_def_cfa_offset 8
 1238              		.cfi_offset 4, -8
 1239              		.cfi_offset 14, -4
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 68


 1240 0002 0400     		movs	r4, r0
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1241              		.loc 1 1358 0
 1242 0004 0268     		ldr	r2, [r0]
 1243 0006 1168     		ldr	r1, [r2]
 1244 0008 114B     		ldr	r3, .L78
 1245 000a 0B40     		ands	r3, r1
 1246 000c 1360     		str	r3, [r2]
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1247              		.loc 1 1359 0
 1248 000e 0268     		ldr	r2, [r0]
 1249 0010 9368     		ldr	r3, [r2, #8]
 1250 0012 0121     		movs	r1, #1
 1251 0014 8B43     		bics	r3, r1
 1252 0016 9360     		str	r3, [r2, #8]
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1253              		.loc 1 1362 0
 1254 0018 0368     		ldr	r3, [r0]
 1255 001a 9A68     		ldr	r2, [r3, #8]
 1256 001c 5206     		lsls	r2, r2, #25
 1257 001e 0BD5     		bpl	.L77
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1258              		.loc 1 1364 0
 1259 0020 9A68     		ldr	r2, [r3, #8]
 1260 0022 3F31     		adds	r1, r1, #63
 1261 0024 8A43     		bics	r2, r1
 1262 0026 9A60     		str	r2, [r3, #8]
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1263              		.loc 1 1367 0
 1264 0028 436E     		ldr	r3, [r0, #100]
 1265 002a 002B     		cmp	r3, #0
 1266 002c 04D0     		beq	.L77
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1267              		.loc 1 1371 0
 1268 002e 0022     		movs	r2, #0
 1269 0030 5A63     		str	r2, [r3, #52]
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1270              		.loc 1 1373 0
 1271 0032 406E     		ldr	r0, [r0, #100]
 1272              	.LVL86:
 1273 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1274              	.LVL87:
 1275              	.L77:
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1276              		.loc 1 1378 0
 1277 0038 0022     		movs	r2, #0
 1278 003a 5A23     		movs	r3, #90
 1279 003c E252     		strh	r2, [r4, r3]
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1280              		.loc 1 1381 0
 1281 003e 2368     		ldr	r3, [r4]
 1282 0040 0F32     		adds	r2, r2, #15
 1283 0042 1A62     		str	r2, [r3, #32]
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1284              		.loc 1 1384 0
 1285 0044 1132     		adds	r2, r2, #17
 1286 0046 6A23     		movs	r3, #106
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 69


 1287 0048 E254     		strb	r2, [r4, r3]
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1288              		.loc 1 1387 0
 1289 004a 0020     		movs	r0, #0
 1290              		@ sp needed
 1291              	.LVL88:
 1292 004c 10BD     		pop	{r4, pc}
 1293              	.L79:
 1294 004e C046     		.align	2
 1295              	.L78:
 1296 0050 DFFEFFFF 		.word	-289
 1297              		.cfi_endproc
 1298              	.LFE52:
 1300              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1301              		.align	2
 1302              		.weak	HAL_UART_TxCpltCallback
 1303              		.code	16
 1304              		.thumb_func
 1306              	HAL_UART_TxCpltCallback:
 1307              	.LFB57:
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1308              		.loc 1 1811 0
 1309              		.cfi_startproc
 1310              		@ args = 0, pretend = 0, frame = 0
 1311              		@ frame_needed = 0, uses_anonymous_args = 0
 1312              		@ link register save eliminated.
 1313              	.LVL89:
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1314              		.loc 1 1818 0
 1315              		@ sp needed
 1316 0000 7047     		bx	lr
 1317              		.cfi_endproc
 1318              	.LFE57:
 1320 0002 C046     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1321              		.align	2
 1322              		.code	16
 1323              		.thumb_func
 1325              	UART_DMATransmitCplt:
 1326              	.LFB78:
2405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
2409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1327              		.loc 1 2413 0
 1328              		.cfi_startproc
 1329              		@ args = 0, pretend = 0, frame = 0
 1330              		@ frame_needed = 0, uses_anonymous_args = 0
 1331              	.LVL90:
 1332 0000 10B5     		push	{r4, lr}
 1333              	.LCFI9:
 1334              		.cfi_def_cfa_offset 8
 1335              		.cfi_offset 4, -8
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 70


 1336              		.cfi_offset 14, -4
2414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1337              		.loc 1 2414 0
 1338 0002 436A     		ldr	r3, [r0, #36]
 1339              	.LVL91:
2415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
2417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1340              		.loc 1 2417 0
 1341 0004 0268     		ldr	r2, [r0]
 1342 0006 1268     		ldr	r2, [r2]
 1343 0008 9206     		lsls	r2, r2, #26
 1344 000a 0DD4     		bmi	.L82
2418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0;
 1345              		.loc 1 2419 0
 1346 000c 0021     		movs	r1, #0
 1347 000e 5222     		movs	r2, #82
 1348 0010 9952     		strh	r1, [r3, r2]
2420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
2422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
2423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1349              		.loc 1 2423 0
 1350 0012 1968     		ldr	r1, [r3]
 1351 0014 8A68     		ldr	r2, [r1, #8]
 1352 0016 8020     		movs	r0, #128
 1353              	.LVL92:
 1354 0018 8243     		bics	r2, r0
 1355 001a 8A60     		str	r2, [r1, #8]
2424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1356              		.loc 1 2426 0
 1357 001c 1A68     		ldr	r2, [r3]
 1358 001e 1168     		ldr	r1, [r2]
 1359 0020 4023     		movs	r3, #64
 1360              	.LVL93:
 1361 0022 0B43     		orrs	r3, r1
 1362 0024 1360     		str	r3, [r2]
 1363 0026 02E0     		b	.L81
 1364              	.LVL94:
 1365              	.L82:
2427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Circular mode */
2429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
 1366              		.loc 1 2431 0
 1367 0028 1800     		movs	r0, r3
 1368              	.LVL95:
 1369 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1370              	.LVL96:
 1371              	.L81:
2432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 71


 1372              		.loc 1 2434 0
 1373              		@ sp needed
 1374 002e 10BD     		pop	{r4, pc}
 1375              		.cfi_endproc
 1376              	.LFE78:
 1378              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1379              		.align	2
 1380              		.weak	HAL_UART_TxHalfCpltCallback
 1381              		.code	16
 1382              		.thumb_func
 1384              	HAL_UART_TxHalfCpltCallback:
 1385              	.LFB58:
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1386              		.loc 1 1826 0
 1387              		.cfi_startproc
 1388              		@ args = 0, pretend = 0, frame = 0
 1389              		@ frame_needed = 0, uses_anonymous_args = 0
 1390              		@ link register save eliminated.
 1391              	.LVL97:
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1392              		.loc 1 1833 0
 1393              		@ sp needed
 1394 0000 7047     		bx	lr
 1395              		.cfi_endproc
 1396              	.LFE58:
 1398 0002 C046     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1399              		.align	2
 1400              		.code	16
 1401              		.thumb_func
 1403              	UART_DMATxHalfCplt:
 1404              	.LFB79:
2435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
2438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1405              		.loc 1 2442 0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 0
 1408              		@ frame_needed = 0, uses_anonymous_args = 0
 1409              	.LVL98:
 1410 0000 10B5     		push	{r4, lr}
 1411              	.LCFI10:
 1412              		.cfi_def_cfa_offset 8
 1413              		.cfi_offset 4, -8
 1414              		.cfi_offset 14, -4
2443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1415              		.loc 1 2443 0
 1416 0002 406A     		ldr	r0, [r0, #36]
 1417              	.LVL99:
2444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 1418              		.loc 1 2445 0
 1419 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 72


 1420              	.LVL100:
2446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1421              		.loc 1 2446 0
 1422              		@ sp needed
 1423 0008 10BD     		pop	{r4, pc}
 1424              		.cfi_endproc
 1425              	.LFE79:
 1427 000a C046     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1428              		.align	2
 1429              		.weak	HAL_UART_RxCpltCallback
 1430              		.code	16
 1431              		.thumb_func
 1433              	HAL_UART_RxCpltCallback:
 1434              	.LFB59:
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1435              		.loc 1 1841 0
 1436              		.cfi_startproc
 1437              		@ args = 0, pretend = 0, frame = 0
 1438              		@ frame_needed = 0, uses_anonymous_args = 0
 1439              		@ link register save eliminated.
 1440              	.LVL101:
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1441              		.loc 1 1848 0
 1442              		@ sp needed
 1443 0000 7047     		bx	lr
 1444              		.cfi_endproc
 1445              	.LFE59:
 1447 0002 C046     		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1448              		.align	2
 1449              		.code	16
 1450              		.thumb_func
 1452              	UART_DMAReceiveCplt:
 1453              	.LFB80:
2447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
2450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1454              		.loc 1 2454 0
 1455              		.cfi_startproc
 1456              		@ args = 0, pretend = 0, frame = 0
 1457              		@ frame_needed = 0, uses_anonymous_args = 0
 1458              	.LVL102:
 1459 0000 10B5     		push	{r4, lr}
 1460              	.LCFI11:
 1461              		.cfi_def_cfa_offset 8
 1462              		.cfi_offset 4, -8
 1463              		.cfi_offset 14, -4
2455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1464              		.loc 1 2455 0
 1465 0002 436A     		ldr	r3, [r0, #36]
 1466              	.LVL103:
2456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 73


2458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1467              		.loc 1 2458 0
 1468 0004 0268     		ldr	r2, [r0]
 1469 0006 1268     		ldr	r2, [r2]
 1470 0008 9206     		lsls	r2, r2, #26
 1471 000a 14D4     		bmi	.L88
2459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1472              		.loc 1 2460 0
 1473 000c 0021     		movs	r1, #0
 1474 000e 5A22     		movs	r2, #90
 1475 0010 9952     		strh	r1, [r3, r2]
2461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1476              		.loc 1 2463 0
 1477 0012 1968     		ldr	r1, [r3]
 1478 0014 0868     		ldr	r0, [r1]
 1479              	.LVL104:
 1480 0016 0A4A     		ldr	r2, .L89
 1481 0018 0240     		ands	r2, r0
 1482 001a 0A60     		str	r2, [r1]
2464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1483              		.loc 1 2464 0
 1484 001c 1968     		ldr	r1, [r3]
 1485 001e 8A68     		ldr	r2, [r1, #8]
 1486 0020 0120     		movs	r0, #1
 1487 0022 8243     		bics	r2, r0
 1488 0024 8A60     		str	r2, [r1, #8]
2465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
2468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1489              		.loc 1 2468 0
 1490 0026 1968     		ldr	r1, [r3]
 1491 0028 8A68     		ldr	r2, [r1, #8]
 1492 002a 3F30     		adds	r0, r0, #63
 1493 002c 8243     		bics	r2, r0
 1494 002e 8A60     		str	r2, [r1, #8]
2469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1495              		.loc 1 2471 0
 1496 0030 2021     		movs	r1, #32
 1497 0032 6A22     		movs	r2, #106
 1498 0034 9954     		strb	r1, [r3, r2]
 1499              	.L88:
2472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 1500              		.loc 1 2474 0
 1501 0036 1800     		movs	r0, r3
 1502 0038 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1503              	.LVL105:
2475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1504              		.loc 1 2475 0
 1505              		@ sp needed
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 74


 1506 003c 10BD     		pop	{r4, pc}
 1507              	.L90:
 1508 003e C046     		.align	2
 1509              	.L89:
 1510 0040 FFFEFFFF 		.word	-257
 1511              		.cfi_endproc
 1512              	.LFE80:
 1514              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1515              		.align	2
 1516              		.weak	HAL_UART_RxHalfCpltCallback
 1517              		.code	16
 1518              		.thumb_func
 1520              	HAL_UART_RxHalfCpltCallback:
 1521              	.LFB60:
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1522              		.loc 1 1856 0
 1523              		.cfi_startproc
 1524              		@ args = 0, pretend = 0, frame = 0
 1525              		@ frame_needed = 0, uses_anonymous_args = 0
 1526              		@ link register save eliminated.
 1527              	.LVL106:
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1528              		.loc 1 1863 0
 1529              		@ sp needed
 1530 0000 7047     		bx	lr
 1531              		.cfi_endproc
 1532              	.LFE60:
 1534 0002 C046     		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1535              		.align	2
 1536              		.code	16
 1537              		.thumb_func
 1539              	UART_DMARxHalfCplt:
 1540              	.LFB81:
2476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
2479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1541              		.loc 1 2483 0
 1542              		.cfi_startproc
 1543              		@ args = 0, pretend = 0, frame = 0
 1544              		@ frame_needed = 0, uses_anonymous_args = 0
 1545              	.LVL107:
 1546 0000 10B5     		push	{r4, lr}
 1547              	.LCFI12:
 1548              		.cfi_def_cfa_offset 8
 1549              		.cfi_offset 4, -8
 1550              		.cfi_offset 14, -4
2484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1551              		.loc 1 2484 0
 1552 0002 406A     		ldr	r0, [r0, #36]
 1553              	.LVL108:
2485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 75


 1554              		.loc 1 2486 0
 1555 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1556              	.LVL109:
2487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1557              		.loc 1 2487 0
 1558              		@ sp needed
 1559 0008 10BD     		pop	{r4, pc}
 1560              		.cfi_endproc
 1561              	.LFE81:
 1563 000a C046     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1564              		.align	2
 1565              		.weak	HAL_UART_ErrorCallback
 1566              		.code	16
 1567              		.thumb_func
 1569              	HAL_UART_ErrorCallback:
 1570              	.LFB61:
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1571              		.loc 1 1871 0
 1572              		.cfi_startproc
 1573              		@ args = 0, pretend = 0, frame = 0
 1574              		@ frame_needed = 0, uses_anonymous_args = 0
 1575              		@ link register save eliminated.
 1576              	.LVL110:
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1577              		.loc 1 1878 0
 1578              		@ sp needed
 1579 0000 7047     		bx	lr
 1580              		.cfi_endproc
 1581              	.LFE61:
 1583 0002 C046     		.section	.text.UART_DMAError,"ax",%progbits
 1584              		.align	2
 1585              		.code	16
 1586              		.thumb_func
 1588              	UART_DMAError:
 1589              	.LFB82:
2488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART communication error callback.
2491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1590              		.loc 1 2495 0
 1591              		.cfi_startproc
 1592              		@ args = 0, pretend = 0, frame = 0
 1593              		@ frame_needed = 0, uses_anonymous_args = 0
 1594              	.LVL111:
 1595 0000 10B5     		push	{r4, lr}
 1596              	.LCFI13:
 1597              		.cfi_def_cfa_offset 8
 1598              		.cfi_offset 4, -8
 1599              		.cfi_offset 14, -4
2496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1600              		.loc 1 2496 0
 1601 0002 446A     		ldr	r4, [r0, #36]
 1602              	.LVL112:
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 76


2497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
 1603              		.loc 1 2499 0
 1604 0004 6923     		movs	r3, #105
 1605 0006 E35C     		ldrb	r3, [r4, r3]
 1606 0008 212B     		cmp	r3, #33
 1607 000a 09D1     		bne	.L95
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
 1608              		.loc 1 2500 0
 1609 000c 2368     		ldr	r3, [r4]
 1610 000e 9B68     		ldr	r3, [r3, #8]
 1611 0010 1B06     		lsls	r3, r3, #24
 1612 0012 05D5     		bpl	.L95
2501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
 1613              		.loc 1 2502 0
 1614 0014 0022     		movs	r2, #0
 1615 0016 5223     		movs	r3, #82
 1616 0018 E252     		strh	r2, [r4, r3]
2503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 1617              		.loc 1 2503 0
 1618 001a 2000     		movs	r0, r4
 1619              	.LVL113:
 1620 001c FFF7FEFF 		bl	UART_EndTxTransfer
 1621              	.LVL114:
 1622              	.L95:
2504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1623              		.loc 1 2507 0
 1624 0020 6A23     		movs	r3, #106
 1625 0022 E35C     		ldrb	r3, [r4, r3]
 1626 0024 222B     		cmp	r3, #34
 1627 0026 09D1     		bne	.L96
2508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
 1628              		.loc 1 2508 0
 1629 0028 2368     		ldr	r3, [r4]
 1630 002a 9B68     		ldr	r3, [r3, #8]
 1631 002c 5B06     		lsls	r3, r3, #25
 1632 002e 05D5     		bpl	.L96
2509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1633              		.loc 1 2510 0
 1634 0030 0022     		movs	r2, #0
 1635 0032 5A23     		movs	r3, #90
 1636 0034 E252     		strh	r2, [r4, r3]
2511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 1637              		.loc 1 2511 0
 1638 0036 2000     		movs	r0, r4
 1639 0038 FFF7FEFF 		bl	UART_EndRxTransfer
 1640              	.LVL115:
 1641              	.L96:
2512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 77


 1642              		.loc 1 2514 0
 1643 003c E26E     		ldr	r2, [r4, #108]
 1644 003e 1023     		movs	r3, #16
 1645 0040 1343     		orrs	r3, r2
 1646 0042 E366     		str	r3, [r4, #108]
2515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1647              		.loc 1 2515 0
 1648 0044 2000     		movs	r0, r4
 1649 0046 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1650              	.LVL116:
2516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1651              		.loc 1 2516 0
 1652              		@ sp needed
 1653              	.LVL117:
 1654 004a 10BD     		pop	{r4, pc}
 1655              		.cfi_endproc
 1656              	.LFE82:
 1658              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 1659              		.align	2
 1660              		.code	16
 1661              		.thumb_func
 1663              	UART_DMAAbortOnError:
 1664              	.LFB83:
2517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1665              		.loc 1 2525 0
 1666              		.cfi_startproc
 1667              		@ args = 0, pretend = 0, frame = 0
 1668              		@ frame_needed = 0, uses_anonymous_args = 0
 1669              	.LVL118:
 1670 0000 10B5     		push	{r4, lr}
 1671              	.LCFI14:
 1672              		.cfi_def_cfa_offset 8
 1673              		.cfi_offset 4, -8
 1674              		.cfi_offset 14, -4
2526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1675              		.loc 1 2526 0
 1676 0002 406A     		ldr	r0, [r0, #36]
 1677              	.LVL119:
2527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1678              		.loc 1 2527 0
 1679 0004 0023     		movs	r3, #0
 1680 0006 5A22     		movs	r2, #90
 1681 0008 8352     		strh	r3, [r0, r2]
2528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1682              		.loc 1 2528 0
 1683 000a 083A     		subs	r2, r2, #8
 1684 000c 8352     		strh	r3, [r0, r2]
2529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 78


 1685              		.loc 1 2530 0
 1686 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1687              	.LVL120:
2531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1688              		.loc 1 2531 0
 1689              		@ sp needed
 1690 0012 10BD     		pop	{r4, pc}
 1691              		.cfi_endproc
 1692              	.LFE83:
 1694              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 1695              		.align	2
 1696              		.weak	HAL_UART_AbortCpltCallback
 1697              		.code	16
 1698              		.thumb_func
 1700              	HAL_UART_AbortCpltCallback:
 1701              	.LFB62:
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1702              		.loc 1 1886 0
 1703              		.cfi_startproc
 1704              		@ args = 0, pretend = 0, frame = 0
 1705              		@ frame_needed = 0, uses_anonymous_args = 0
 1706              		@ link register save eliminated.
 1707              	.LVL121:
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1708              		.loc 1 1893 0
 1709              		@ sp needed
 1710 0000 7047     		bx	lr
 1711              		.cfi_endproc
 1712              	.LFE62:
 1714 0002 C046     		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 1715              		.align	2
 1716              		.global	HAL_UART_Abort_IT
 1717              		.code	16
 1718              		.thumb_func
 1720              	HAL_UART_Abort_IT:
 1721              	.LFB53:
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 1722              		.loc 1 1404 0
 1723              		.cfi_startproc
 1724              		@ args = 0, pretend = 0, frame = 0
 1725              		@ frame_needed = 0, uses_anonymous_args = 0
 1726              	.LVL122:
 1727 0000 10B5     		push	{r4, lr}
 1728              	.LCFI15:
 1729              		.cfi_def_cfa_offset 8
 1730              		.cfi_offset 4, -8
 1731              		.cfi_offset 14, -4
 1732 0002 0400     		movs	r4, r0
 1733              	.LVL123:
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1734              		.loc 1 1408 0
 1735 0004 0268     		ldr	r2, [r0]
 1736 0006 1168     		ldr	r1, [r2]
 1737 0008 314B     		ldr	r3, .L111
 1738 000a 0B40     		ands	r3, r1
 1739 000c 1360     		str	r3, [r2]
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 79


 1740              		.loc 1 1409 0
 1741 000e 0268     		ldr	r2, [r0]
 1742 0010 9368     		ldr	r3, [r2, #8]
 1743 0012 0121     		movs	r1, #1
 1744 0014 8B43     		bics	r3, r1
 1745 0016 9360     		str	r3, [r2, #8]
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1746              		.loc 1 1414 0
 1747 0018 036E     		ldr	r3, [r0, #96]
 1748 001a 002B     		cmp	r3, #0
 1749 001c 08D0     		beq	.L100
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1750              		.loc 1 1418 0
 1751 001e 0268     		ldr	r2, [r0]
 1752 0020 9268     		ldr	r2, [r2, #8]
 1753 0022 1206     		lsls	r2, r2, #24
 1754 0024 02D5     		bpl	.L101
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1755              		.loc 1 1420 0
 1756 0026 2B4A     		ldr	r2, .L111+4
 1757 0028 5A63     		str	r2, [r3, #52]
 1758 002a 01E0     		b	.L100
 1759              	.L101:
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1760              		.loc 1 1424 0
 1761 002c 0022     		movs	r2, #0
 1762 002e 5A63     		str	r2, [r3, #52]
 1763              	.L100:
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1764              		.loc 1 1428 0
 1765 0030 636E     		ldr	r3, [r4, #100]
 1766 0032 002B     		cmp	r3, #0
 1767 0034 08D0     		beq	.L102
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1768              		.loc 1 1432 0
 1769 0036 2268     		ldr	r2, [r4]
 1770 0038 9268     		ldr	r2, [r2, #8]
 1771 003a 5206     		lsls	r2, r2, #25
 1772 003c 02D5     		bpl	.L103
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1773              		.loc 1 1434 0
 1774 003e 264A     		ldr	r2, .L111+8
 1775 0040 5A63     		str	r2, [r3, #52]
 1776 0042 01E0     		b	.L102
 1777              	.L103:
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1778              		.loc 1 1438 0
 1779 0044 0022     		movs	r2, #0
 1780 0046 5A63     		str	r2, [r3, #52]
 1781              	.L102:
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1782              		.loc 1 1443 0
 1783 0048 2368     		ldr	r3, [r4]
 1784 004a 9A68     		ldr	r2, [r3, #8]
 1785 004c 1206     		lsls	r2, r2, #24
 1786 004e 0FD5     		bpl	.L107
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 80


 1787              		.loc 1 1446 0
 1788 0050 9A68     		ldr	r2, [r3, #8]
 1789 0052 8021     		movs	r1, #128
 1790 0054 8A43     		bics	r2, r1
 1791 0056 9A60     		str	r2, [r3, #8]
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1792              		.loc 1 1449 0
 1793 0058 206E     		ldr	r0, [r4, #96]
 1794              	.LVL124:
 1795 005a 0028     		cmp	r0, #0
 1796 005c 0AD0     		beq	.L108
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1797              		.loc 1 1455 0
 1798 005e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1799              	.LVL125:
 1800 0062 0028     		cmp	r0, #0
 1801 0064 08D0     		beq	.L109
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 1802              		.loc 1 1457 0
 1803 0066 236E     		ldr	r3, [r4, #96]
 1804 0068 0022     		movs	r2, #0
 1805 006a 5A63     		str	r2, [r3, #52]
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1806              		.loc 1 1405 0
 1807 006c 0132     		adds	r2, r2, #1
 1808 006e 04E0     		b	.L104
 1809              	.LVL126:
 1810              	.L107:
 1811 0070 0122     		movs	r2, #1
 1812 0072 02E0     		b	.L104
 1813              	.LVL127:
 1814              	.L108:
 1815 0074 0122     		movs	r2, #1
 1816 0076 00E0     		b	.L104
 1817              	.L109:
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 1818              		.loc 1 1461 0
 1819 0078 0022     		movs	r2, #0
 1820              	.L104:
 1821              	.LVL128:
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1822              		.loc 1 1467 0
 1823 007a 2368     		ldr	r3, [r4]
 1824 007c 9968     		ldr	r1, [r3, #8]
 1825 007e 4906     		lsls	r1, r1, #25
 1826 0080 10D5     		bpl	.L105
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1827              		.loc 1 1469 0
 1828 0082 9968     		ldr	r1, [r3, #8]
 1829 0084 4020     		movs	r0, #64
 1830 0086 8143     		bics	r1, r0
 1831 0088 9960     		str	r1, [r3, #8]
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1832              		.loc 1 1472 0
 1833 008a 606E     		ldr	r0, [r4, #100]
 1834 008c 0028     		cmp	r0, #0
 1835 008e 09D0     		beq	.L105
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 81


1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1836              		.loc 1 1478 0
 1837 0090 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1838              	.LVL129:
 1839 0094 0028     		cmp	r0, #0
 1840 0096 04D0     		beq	.L110
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 1U;
 1841              		.loc 1 1480 0
 1842 0098 636E     		ldr	r3, [r4, #100]
 1843 009a 0022     		movs	r2, #0
 1844 009c 5A63     		str	r2, [r3, #52]
 1845              	.LVL130:
1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 1846              		.loc 1 1481 0
 1847 009e 0132     		adds	r2, r2, #1
 1848 00a0 00E0     		b	.L105
 1849              	.LVL131:
 1850              	.L110:
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 1851              		.loc 1 1485 0
 1852 00a2 0022     		movs	r2, #0
 1853              	.L105:
 1854              	.LVL132:
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1855              		.loc 1 1491 0
 1856 00a4 012A     		cmp	r2, #1
 1857 00a6 10D1     		bne	.L106
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1858              		.loc 1 1494 0
 1859 00a8 0023     		movs	r3, #0
 1860 00aa 5132     		adds	r2, r2, #81
 1861              	.LVL133:
 1862 00ac A352     		strh	r3, [r4, r2]
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1863              		.loc 1 1495 0
 1864 00ae 0832     		adds	r2, r2, #8
 1865              	.LVL134:
 1866 00b0 A352     		strh	r3, [r4, r2]
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1867              		.loc 1 1498 0
 1868 00b2 E366     		str	r3, [r4, #108]
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1869              		.loc 1 1501 0
 1870 00b4 2368     		ldr	r3, [r4]
 1871 00b6 4B3A     		subs	r2, r2, #75
 1872              	.LVL135:
 1873 00b8 1A62     		str	r2, [r3, #32]
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1874              		.loc 1 1504 0
 1875 00ba 2023     		movs	r3, #32
 1876 00bc 5A32     		adds	r2, r2, #90
 1877              	.LVL136:
 1878 00be A354     		strb	r3, [r4, r2]
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1879              		.loc 1 1505 0
 1880 00c0 0132     		adds	r2, r2, #1
 1881              	.LVL137:
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 82


 1882 00c2 A354     		strb	r3, [r4, r2]
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1883              		.loc 1 1508 0
 1884 00c4 2000     		movs	r0, r4
 1885 00c6 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1886              	.LVL138:
 1887              	.L106:
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1888              		.loc 1 1512 0
 1889 00ca 0020     		movs	r0, #0
 1890              		@ sp needed
 1891              	.LVL139:
 1892 00cc 10BD     		pop	{r4, pc}
 1893              	.L112:
 1894 00ce C046     		.align	2
 1895              	.L111:
 1896 00d0 1FFEFFFF 		.word	-481
 1897 00d4 00000000 		.word	UART_DMATxAbortCallback
 1898 00d8 00000000 		.word	UART_DMARxAbortCallback
 1899              		.cfi_endproc
 1900              	.LFE53:
 1902              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 1903              		.align	2
 1904              		.code	16
 1905              		.thumb_func
 1907              	UART_DMARxAbortCallback:
 1908              	.LFB85:
2532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
2544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
2553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
2558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
2559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset errorCode */
2561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 83


2562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1909              		.loc 1 2584 0
 1910              		.cfi_startproc
 1911              		@ args = 0, pretend = 0, frame = 0
 1912              		@ frame_needed = 0, uses_anonymous_args = 0
 1913              	.LVL140:
 1914 0000 10B5     		push	{r4, lr}
 1915              	.LCFI16:
 1916              		.cfi_def_cfa_offset 8
 1917              		.cfi_offset 4, -8
 1918              		.cfi_offset 14, -4
2585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 1919              		.loc 1 2585 0
 1920 0002 406A     		ldr	r0, [r0, #36]
 1921              	.LVL141:
2586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 1922              		.loc 1 2587 0
 1923 0004 436E     		ldr	r3, [r0, #100]
 1924 0006 0022     		movs	r2, #0
 1925 0008 5A63     		str	r2, [r3, #52]
2588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 1926              		.loc 1 2590 0
 1927 000a 036E     		ldr	r3, [r0, #96]
 1928 000c 002B     		cmp	r3, #0
 1929 000e 02D0     		beq	.L114
2591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
 1930              		.loc 1 2592 0
 1931 0010 5B6B     		ldr	r3, [r3, #52]
 1932 0012 002B     		cmp	r3, #0
 1933 0014 0FD1     		bne	.L113
 1934              	.L114:
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 84


2593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
2595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1935              		.loc 1 2599 0
 1936 0016 0023     		movs	r3, #0
 1937 0018 5222     		movs	r2, #82
 1938 001a 8352     		strh	r3, [r0, r2]
2600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1939              		.loc 1 2600 0
 1940 001c 0832     		adds	r2, r2, #8
 1941 001e 8352     		strh	r3, [r0, r2]
2601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset errorCode */
2603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 1942              		.loc 1 2603 0
 1943 0020 C366     		str	r3, [r0, #108]
2604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 1944              		.loc 1 2606 0
 1945 0022 0368     		ldr	r3, [r0]
 1946 0024 4B3A     		subs	r2, r2, #75
 1947 0026 1A62     		str	r2, [r3, #32]
2607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 1948              		.loc 1 2609 0
 1949 0028 2023     		movs	r3, #32
 1950 002a 5A32     		adds	r2, r2, #90
 1951 002c 8354     		strb	r3, [r0, r2]
2610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1952              		.loc 1 2610 0
 1953 002e 0132     		adds	r2, r2, #1
 1954 0030 8354     		strb	r3, [r0, r2]
2611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 1955              		.loc 1 2613 0
 1956 0032 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1957              	.LVL142:
 1958              	.L113:
2614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1959              		.loc 1 2614 0
 1960              		@ sp needed
 1961 0036 10BD     		pop	{r4, pc}
 1962              		.cfi_endproc
 1963              	.LFE85:
 1965              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 1966              		.align	2
 1967              		.code	16
 1968              		.thumb_func
 1970              	UART_DMATxAbortCallback:
 1971              	.LFB84:
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 85


2542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 1972              		.loc 1 2542 0
 1973              		.cfi_startproc
 1974              		@ args = 0, pretend = 0, frame = 0
 1975              		@ frame_needed = 0, uses_anonymous_args = 0
 1976              	.LVL143:
 1977 0000 10B5     		push	{r4, lr}
 1978              	.LCFI17:
 1979              		.cfi_def_cfa_offset 8
 1980              		.cfi_offset 4, -8
 1981              		.cfi_offset 14, -4
2543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1982              		.loc 1 2543 0
 1983 0002 406A     		ldr	r0, [r0, #36]
 1984              	.LVL144:
2545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1985              		.loc 1 2545 0
 1986 0004 036E     		ldr	r3, [r0, #96]
 1987 0006 0022     		movs	r2, #0
 1988 0008 5A63     		str	r2, [r3, #52]
2548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1989              		.loc 1 2548 0
 1990 000a 436E     		ldr	r3, [r0, #100]
 1991 000c 002B     		cmp	r3, #0
 1992 000e 02D0     		beq	.L117
2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1993              		.loc 1 2550 0
 1994 0010 5B6B     		ldr	r3, [r3, #52]
 1995 0012 002B     		cmp	r3, #0
 1996 0014 0FD1     		bne	.L116
 1997              	.L117:
2557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1998              		.loc 1 2557 0
 1999 0016 0023     		movs	r3, #0
 2000 0018 5222     		movs	r2, #82
 2001 001a 8352     		strh	r3, [r0, r2]
2558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2002              		.loc 1 2558 0
 2003 001c 0832     		adds	r2, r2, #8
 2004 001e 8352     		strh	r3, [r0, r2]
2561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2005              		.loc 1 2561 0
 2006 0020 C366     		str	r3, [r0, #108]
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2007              		.loc 1 2564 0
 2008 0022 0368     		ldr	r3, [r0]
 2009 0024 4B3A     		subs	r2, r2, #75
 2010 0026 1A62     		str	r2, [r3, #32]
2567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2011              		.loc 1 2567 0
 2012 0028 2023     		movs	r3, #32
 2013 002a 5A32     		adds	r2, r2, #90
 2014 002c 8354     		strb	r3, [r0, r2]
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2015              		.loc 1 2568 0
 2016 002e 0132     		adds	r2, r2, #1
 2017 0030 8354     		strb	r3, [r0, r2]
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 86


2571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2018              		.loc 1 2571 0
 2019 0032 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2020              	.LVL145:
 2021              	.L116:
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2022              		.loc 1 2572 0
 2023              		@ sp needed
 2024 0036 10BD     		pop	{r4, pc}
 2025              		.cfi_endproc
 2026              	.LFE84:
 2028              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 2029              		.align	2
 2030              		.weak	HAL_UART_AbortTransmitCpltCallback
 2031              		.code	16
 2032              		.thumb_func
 2034              	HAL_UART_AbortTransmitCpltCallback:
 2035              	.LFB63:
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2036              		.loc 1 1901 0
 2037              		.cfi_startproc
 2038              		@ args = 0, pretend = 0, frame = 0
 2039              		@ frame_needed = 0, uses_anonymous_args = 0
 2040              		@ link register save eliminated.
 2041              	.LVL146:
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2042              		.loc 1 1908 0
 2043              		@ sp needed
 2044 0000 7047     		bx	lr
 2045              		.cfi_endproc
 2046              	.LFE63:
 2048 0002 C046     		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2049              		.align	2
 2050              		.global	HAL_UART_AbortTransmit_IT
 2051              		.code	16
 2052              		.thumb_func
 2054              	HAL_UART_AbortTransmit_IT:
 2055              	.LFB54:
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2056              		.loc 1 1529 0
 2057              		.cfi_startproc
 2058              		@ args = 0, pretend = 0, frame = 0
 2059              		@ frame_needed = 0, uses_anonymous_args = 0
 2060              	.LVL147:
 2061 0000 10B5     		push	{r4, lr}
 2062              	.LCFI18:
 2063              		.cfi_def_cfa_offset 8
 2064              		.cfi_offset 4, -8
 2065              		.cfi_offset 14, -4
 2066 0002 0400     		movs	r4, r0
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2067              		.loc 1 1531 0
 2068 0004 0268     		ldr	r2, [r0]
 2069 0006 1368     		ldr	r3, [r2]
 2070 0008 C021     		movs	r1, #192
 2071 000a 8B43     		bics	r3, r1
 2072 000c 1360     		str	r3, [r2]
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 87


1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2073              		.loc 1 1534 0
 2074 000e 0368     		ldr	r3, [r0]
 2075 0010 9A68     		ldr	r2, [r3, #8]
 2076 0012 1206     		lsls	r2, r2, #24
 2077 0014 1AD5     		bpl	.L121
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2078              		.loc 1 1536 0
 2079 0016 9A68     		ldr	r2, [r3, #8]
 2080 0018 4039     		subs	r1, r1, #64
 2081 001a 8A43     		bics	r2, r1
 2082 001c 9A60     		str	r2, [r3, #8]
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2083              		.loc 1 1539 0
 2084 001e 036E     		ldr	r3, [r0, #96]
 2085 0020 002B     		cmp	r3, #0
 2086 0022 0AD0     		beq	.L122
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2087              		.loc 1 1543 0
 2088 0024 0E4A     		ldr	r2, .L124
 2089 0026 5A63     		str	r2, [r3, #52]
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2090              		.loc 1 1546 0
 2091 0028 006E     		ldr	r0, [r0, #96]
 2092              	.LVL148:
 2093 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2094              	.LVL149:
 2095 002e 0028     		cmp	r0, #0
 2096 0030 14D0     		beq	.L123
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2097              		.loc 1 1549 0
 2098 0032 206E     		ldr	r0, [r4, #96]
 2099 0034 436B     		ldr	r3, [r0, #52]
 2100 0036 9847     		blx	r3
 2101              	.LVL150:
 2102 0038 10E0     		b	.L123
 2103              	.LVL151:
 2104              	.L122:
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2105              		.loc 1 1555 0
 2106 003a 0022     		movs	r2, #0
 2107 003c 5223     		movs	r3, #82
 2108 003e C252     		strh	r2, [r0, r3]
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2109              		.loc 1 1558 0
 2110 0040 2032     		adds	r2, r2, #32
 2111 0042 1733     		adds	r3, r3, #23
 2112 0044 C254     		strb	r2, [r0, r3]
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2113              		.loc 1 1561 0
 2114 0046 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2115              	.LVL152:
 2116 004a 07E0     		b	.L123
 2117              	.LVL153:
 2118              	.L121:
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2119              		.loc 1 1567 0
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 88


 2120 004c 0022     		movs	r2, #0
 2121 004e 5223     		movs	r3, #82
 2122 0050 C252     		strh	r2, [r0, r3]
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2123              		.loc 1 1570 0
 2124 0052 2032     		adds	r2, r2, #32
 2125 0054 1733     		adds	r3, r3, #23
 2126 0056 C254     		strb	r2, [r0, r3]
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2127              		.loc 1 1573 0
 2128 0058 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2129              	.LVL154:
 2130              	.L123:
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2131              		.loc 1 1577 0
 2132 005c 0020     		movs	r0, #0
 2133              		@ sp needed
 2134              	.LVL155:
 2135 005e 10BD     		pop	{r4, pc}
 2136              	.L125:
 2137              		.align	2
 2138              	.L124:
 2139 0060 00000000 		.word	UART_DMATxOnlyAbortCallback
 2140              		.cfi_endproc
 2141              	.LFE54:
 2143              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 2144              		.align	2
 2145              		.code	16
 2146              		.thumb_func
 2148              	UART_DMATxOnlyAbortCallback:
 2149              	.LFB86:
2615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2150              		.loc 1 2626 0
 2151              		.cfi_startproc
 2152              		@ args = 0, pretend = 0, frame = 0
 2153              		@ frame_needed = 0, uses_anonymous_args = 0
 2154              	.LVL156:
 2155 0000 10B5     		push	{r4, lr}
 2156              	.LCFI19:
 2157              		.cfi_def_cfa_offset 8
 2158              		.cfi_offset 4, -8
 2159              		.cfi_offset 14, -4
2627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 2160              		.loc 1 2627 0
 2161 0002 406A     		ldr	r0, [r0, #36]
 2162              	.LVL157:
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 89


2628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2163              		.loc 1 2629 0
 2164 0004 0022     		movs	r2, #0
 2165 0006 5223     		movs	r3, #82
 2166 0008 C252     		strh	r2, [r0, r3]
2630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2167              		.loc 1 2632 0
 2168 000a 2032     		adds	r2, r2, #32
 2169 000c 1733     		adds	r3, r3, #23
 2170 000e C254     		strb	r2, [r0, r3]
2633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 2171              		.loc 1 2635 0
 2172 0010 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2173              	.LVL158:
2636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2174              		.loc 1 2636 0
 2175              		@ sp needed
 2176 0014 10BD     		pop	{r4, pc}
 2177              		.cfi_endproc
 2178              	.LFE86:
 2180 0016 C046     		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 2181              		.align	2
 2182              		.weak	HAL_UART_AbortReceiveCpltCallback
 2183              		.code	16
 2184              		.thumb_func
 2186              	HAL_UART_AbortReceiveCpltCallback:
 2187              	.LFB64:
1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2188              		.loc 1 1916 0
 2189              		.cfi_startproc
 2190              		@ args = 0, pretend = 0, frame = 0
 2191              		@ frame_needed = 0, uses_anonymous_args = 0
 2192              		@ link register save eliminated.
 2193              	.LVL159:
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2194              		.loc 1 1923 0
 2195              		@ sp needed
 2196 0000 7047     		bx	lr
 2197              		.cfi_endproc
 2198              	.LFE64:
 2200 0002 C046     		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2201              		.align	2
 2202              		.global	HAL_UART_AbortReceive_IT
 2203              		.code	16
 2204              		.thumb_func
 2206              	HAL_UART_AbortReceive_IT:
 2207              	.LFB55:
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2208              		.loc 1 1594 0
 2209              		.cfi_startproc
 2210              		@ args = 0, pretend = 0, frame = 0
 2211              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 90


 2212              	.LVL160:
 2213 0000 10B5     		push	{r4, lr}
 2214              	.LCFI20:
 2215              		.cfi_def_cfa_offset 8
 2216              		.cfi_offset 4, -8
 2217              		.cfi_offset 14, -4
 2218 0002 0400     		movs	r4, r0
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2219              		.loc 1 1596 0
 2220 0004 0268     		ldr	r2, [r0]
 2221 0006 1168     		ldr	r1, [r2]
 2222 0008 1A4B     		ldr	r3, .L132
 2223 000a 0B40     		ands	r3, r1
 2224 000c 1360     		str	r3, [r2]
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2225              		.loc 1 1597 0
 2226 000e 0268     		ldr	r2, [r0]
 2227 0010 9368     		ldr	r3, [r2, #8]
 2228 0012 0121     		movs	r1, #1
 2229 0014 8B43     		bics	r3, r1
 2230 0016 9360     		str	r3, [r2, #8]
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2231              		.loc 1 1600 0
 2232 0018 0368     		ldr	r3, [r0]
 2233 001a 9A68     		ldr	r2, [r3, #8]
 2234 001c 5206     		lsls	r2, r2, #25
 2235 001e 1DD5     		bpl	.L129
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2236              		.loc 1 1602 0
 2237 0020 9A68     		ldr	r2, [r3, #8]
 2238 0022 3F31     		adds	r1, r1, #63
 2239 0024 8A43     		bics	r2, r1
 2240 0026 9A60     		str	r2, [r3, #8]
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2241              		.loc 1 1605 0
 2242 0028 436E     		ldr	r3, [r0, #100]
 2243 002a 002B     		cmp	r3, #0
 2244 002c 0AD0     		beq	.L130
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2245              		.loc 1 1609 0
 2246 002e 124A     		ldr	r2, .L132+4
 2247 0030 5A63     		str	r2, [r3, #52]
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2248              		.loc 1 1612 0
 2249 0032 406E     		ldr	r0, [r0, #100]
 2250              	.LVL161:
 2251 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2252              	.LVL162:
 2253 0038 0028     		cmp	r0, #0
 2254 003a 19D0     		beq	.L131
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2255              		.loc 1 1615 0
 2256 003c 606E     		ldr	r0, [r4, #100]
 2257 003e 436B     		ldr	r3, [r0, #52]
 2258 0040 9847     		blx	r3
 2259              	.LVL163:
 2260 0042 15E0     		b	.L131
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 91


 2261              	.LVL164:
 2262              	.L130:
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2263              		.loc 1 1621 0
 2264 0044 0022     		movs	r2, #0
 2265 0046 5A23     		movs	r3, #90
 2266 0048 C252     		strh	r2, [r0, r3]
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2267              		.loc 1 1624 0
 2268 004a 0368     		ldr	r3, [r0]
 2269 004c 0F32     		adds	r2, r2, #15
 2270 004e 1A62     		str	r2, [r3, #32]
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2271              		.loc 1 1627 0
 2272 0050 1132     		adds	r2, r2, #17
 2273 0052 6A23     		movs	r3, #106
 2274 0054 C254     		strb	r2, [r0, r3]
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2275              		.loc 1 1630 0
 2276 0056 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2277              	.LVL165:
 2278 005a 09E0     		b	.L131
 2279              	.LVL166:
 2280              	.L129:
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2281              		.loc 1 1636 0
 2282 005c 0021     		movs	r1, #0
 2283 005e 5A22     		movs	r2, #90
 2284 0060 8152     		strh	r1, [r0, r2]
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2285              		.loc 1 1639 0
 2286 0062 4B3A     		subs	r2, r2, #75
 2287 0064 1A62     		str	r2, [r3, #32]
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2288              		.loc 1 1642 0
 2289 0066 1132     		adds	r2, r2, #17
 2290 0068 6A23     		movs	r3, #106
 2291 006a C254     		strb	r2, [r0, r3]
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2292              		.loc 1 1645 0
 2293 006c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2294              	.LVL167:
 2295              	.L131:
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2296              		.loc 1 1649 0
 2297 0070 0020     		movs	r0, #0
 2298              		@ sp needed
 2299              	.LVL168:
 2300 0072 10BD     		pop	{r4, pc}
 2301              	.L133:
 2302              		.align	2
 2303              	.L132:
 2304 0074 DFFEFFFF 		.word	-289
 2305 0078 00000000 		.word	UART_DMARxOnlyAbortCallback
 2306              		.cfi_endproc
 2307              	.LFE55:
 2309              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 92


 2310              		.align	2
 2311              		.code	16
 2312              		.thumb_func
 2314              	UART_DMARxOnlyAbortCallback:
 2315              	.LFB87:
2637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2316              		.loc 1 2647 0
 2317              		.cfi_startproc
 2318              		@ args = 0, pretend = 0, frame = 0
 2319              		@ frame_needed = 0, uses_anonymous_args = 0
 2320              	.LVL169:
 2321 0000 10B5     		push	{r4, lr}
 2322              	.LCFI21:
 2323              		.cfi_def_cfa_offset 8
 2324              		.cfi_offset 4, -8
 2325              		.cfi_offset 14, -4
2648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2326              		.loc 1 2648 0
 2327 0002 406A     		ldr	r0, [r0, #36]
 2328              	.LVL170:
2649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2329              		.loc 1 2650 0
 2330 0004 0022     		movs	r2, #0
 2331 0006 5A23     		movs	r3, #90
 2332 0008 C252     		strh	r2, [r0, r3]
2651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2333              		.loc 1 2653 0
 2334 000a 0368     		ldr	r3, [r0]
 2335 000c 0F32     		adds	r2, r2, #15
 2336 000e 1A62     		str	r2, [r3, #32]
2654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2337              		.loc 1 2656 0
 2338 0010 1132     		adds	r2, r2, #17
 2339 0012 6A23     		movs	r3, #106
 2340 0014 C254     		strb	r2, [r0, r3]
2657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 2341              		.loc 1 2659 0
 2342 0016 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2343              	.LVL171:
2660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 93


 2344              		.loc 1 2660 0
 2345              		@ sp needed
 2346 001a 10BD     		pop	{r4, pc}
 2347              		.cfi_endproc
 2348              	.LFE87:
 2350              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2351              		.align	2
 2352              		.global	HAL_MultiProcessor_EnterMuteMode
 2353              		.code	16
 2354              		.thumb_func
 2356              	HAL_MultiProcessor_EnterMuteMode:
 2357              	.LFB67:
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 2358              		.loc 1 1996 0
 2359              		.cfi_startproc
 2360              		@ args = 0, pretend = 0, frame = 0
 2361              		@ frame_needed = 0, uses_anonymous_args = 0
 2362              		@ link register save eliminated.
 2363              	.LVL172:
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2364              		.loc 1 1997 0
 2365 0000 0268     		ldr	r2, [r0]
 2366 0002 9169     		ldr	r1, [r2, #24]
 2367 0004 0423     		movs	r3, #4
 2368 0006 0B43     		orrs	r3, r1
 2369 0008 9361     		str	r3, [r2, #24]
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2370              		.loc 1 1998 0
 2371              		@ sp needed
 2372 000a 7047     		bx	lr
 2373              		.cfi_endproc
 2374              	.LFE67:
 2376              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 2377              		.align	2
 2378              		.global	HAL_HalfDuplex_EnableTransmitter
 2379              		.code	16
 2380              		.thumb_func
 2382              	HAL_HalfDuplex_EnableTransmitter:
 2383              	.LFB68:
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 2384              		.loc 1 2006 0
 2385              		.cfi_startproc
 2386              		@ args = 0, pretend = 0, frame = 0
 2387              		@ frame_needed = 0, uses_anonymous_args = 0
 2388              	.LVL173:
 2389 0000 30B5     		push	{r4, r5, lr}
 2390              	.LCFI22:
 2391              		.cfi_def_cfa_offset 12
 2392              		.cfi_offset 4, -12
 2393              		.cfi_offset 5, -8
 2394              		.cfi_offset 14, -4
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2395              		.loc 1 2008 0
 2396 0002 6823     		movs	r3, #104
 2397 0004 C35C     		ldrb	r3, [r0, r3]
 2398 0006 012B     		cmp	r3, #1
 2399 0008 15D0     		beq	.L138
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 94


2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2400              		.loc 1 2008 0 is_stmt 0 discriminator 2
 2401 000a 6822     		movs	r2, #104
 2402 000c 0123     		movs	r3, #1
 2403 000e 8354     		strb	r3, [r0, r2]
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2404              		.loc 1 2009 0 is_stmt 1 discriminator 2
 2405 0010 6921     		movs	r1, #105
 2406 0012 2333     		adds	r3, r3, #35
 2407 0014 4354     		strb	r3, [r0, r1]
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
 2408              		.loc 1 2012 0 discriminator 2
 2409 0016 0468     		ldr	r4, [r0]
 2410 0018 2368     		ldr	r3, [r4]
 2411 001a 0C25     		movs	r5, #12
 2412 001c AB43     		bics	r3, r5
 2413 001e 2360     		str	r3, [r4]
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2414              		.loc 1 2014 0 discriminator 2
 2415 0020 0468     		ldr	r4, [r0]
 2416 0022 2568     		ldr	r5, [r4]
 2417 0024 0823     		movs	r3, #8
 2418 0026 2B43     		orrs	r3, r5
 2419 0028 2360     		str	r3, [r4]
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2420              		.loc 1 2016 0 discriminator 2
 2421 002a 2023     		movs	r3, #32
 2422 002c 4354     		strb	r3, [r0, r1]
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2423              		.loc 1 2019 0 discriminator 2
 2424 002e 0023     		movs	r3, #0
 2425 0030 8354     		strb	r3, [r0, r2]
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2426              		.loc 1 2021 0 discriminator 2
 2427 0032 0020     		movs	r0, #0
 2428              	.LVL174:
 2429 0034 00E0     		b	.L137
 2430              	.LVL175:
 2431              	.L138:
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2432              		.loc 1 2008 0
 2433 0036 0220     		movs	r0, #2
 2434              	.LVL176:
 2435              	.L137:
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2436              		.loc 1 2022 0
 2437              		@ sp needed
 2438 0038 30BD     		pop	{r4, r5, pc}
 2439              		.cfi_endproc
 2440              	.LFE68:
 2442 003a C046     		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 2443              		.align	2
 2444              		.global	HAL_HalfDuplex_EnableReceiver
 2445              		.code	16
 2446              		.thumb_func
 2448              	HAL_HalfDuplex_EnableReceiver:
 2449              	.LFB69:
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 95


2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 2450              		.loc 1 2030 0
 2451              		.cfi_startproc
 2452              		@ args = 0, pretend = 0, frame = 0
 2453              		@ frame_needed = 0, uses_anonymous_args = 0
 2454              	.LVL177:
 2455 0000 30B5     		push	{r4, r5, lr}
 2456              	.LCFI23:
 2457              		.cfi_def_cfa_offset 12
 2458              		.cfi_offset 4, -12
 2459              		.cfi_offset 5, -8
 2460              		.cfi_offset 14, -4
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2461              		.loc 1 2032 0
 2462 0002 6823     		movs	r3, #104
 2463 0004 C35C     		ldrb	r3, [r0, r3]
 2464 0006 012B     		cmp	r3, #1
 2465 0008 15D0     		beq	.L141
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2466              		.loc 1 2032 0 is_stmt 0 discriminator 2
 2467 000a 6822     		movs	r2, #104
 2468 000c 0123     		movs	r3, #1
 2469 000e 8354     		strb	r3, [r0, r2]
2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2470              		.loc 1 2033 0 is_stmt 1 discriminator 2
 2471 0010 6921     		movs	r1, #105
 2472 0012 2333     		adds	r3, r3, #35
 2473 0014 4354     		strb	r3, [r0, r1]
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
 2474              		.loc 1 2036 0 discriminator 2
 2475 0016 0468     		ldr	r4, [r0]
 2476 0018 2368     		ldr	r3, [r4]
 2477 001a 0C25     		movs	r5, #12
 2478 001c AB43     		bics	r3, r5
 2479 001e 2360     		str	r3, [r4]
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2480              		.loc 1 2038 0 discriminator 2
 2481 0020 0468     		ldr	r4, [r0]
 2482 0022 2568     		ldr	r5, [r4]
 2483 0024 0423     		movs	r3, #4
 2484 0026 2B43     		orrs	r3, r5
 2485 0028 2360     		str	r3, [r4]
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
 2486              		.loc 1 2040 0 discriminator 2
 2487 002a 2023     		movs	r3, #32
 2488 002c 4354     		strb	r3, [r0, r1]
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2489              		.loc 1 2042 0 discriminator 2
 2490 002e 0023     		movs	r3, #0
 2491 0030 8354     		strb	r3, [r0, r2]
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2492              		.loc 1 2044 0 discriminator 2
 2493 0032 0020     		movs	r0, #0
 2494              	.LVL178:
 2495 0034 00E0     		b	.L140
 2496              	.LVL179:
 2497              	.L141:
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 96


2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2498              		.loc 1 2032 0
 2499 0036 0220     		movs	r0, #2
 2500              	.LVL180:
 2501              	.L140:
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2502              		.loc 1 2045 0
 2503              		@ sp needed
 2504 0038 30BD     		pop	{r4, r5, pc}
 2505              		.cfi_endproc
 2506              	.LFE69:
 2508 003a C046     		.section	.text.HAL_UART_GetState,"ax",%progbits
 2509              		.align	2
 2510              		.global	HAL_UART_GetState
 2511              		.code	16
 2512              		.thumb_func
 2514              	HAL_UART_GetState:
 2515              	.LFB70:
2074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 2516              		.loc 1 2074 0
 2517              		.cfi_startproc
 2518              		@ args = 0, pretend = 0, frame = 0
 2519              		@ frame_needed = 0, uses_anonymous_args = 0
 2520              		@ link register save eliminated.
 2521              	.LVL181:
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp2 = huart->RxState;
 2522              		.loc 1 2076 0
 2523 0000 6923     		movs	r3, #105
 2524 0002 C35C     		ldrb	r3, [r0, r3]
 2525              	.LVL182:
2077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2526              		.loc 1 2077 0
 2527 0004 6A22     		movs	r2, #106
 2528 0006 805C     		ldrb	r0, [r0, r2]
 2529              	.LVL183:
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2530              		.loc 1 2079 0
 2531 0008 1843     		orrs	r0, r3
 2532              	.LVL184:
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2533              		.loc 1 2080 0
 2534              		@ sp needed
 2535 000a 7047     		bx	lr
 2536              		.cfi_endproc
 2537              	.LFE70:
 2539              		.section	.text.HAL_UART_GetError,"ax",%progbits
 2540              		.align	2
 2541              		.global	HAL_UART_GetError
 2542              		.code	16
 2543              		.thumb_func
 2545              	HAL_UART_GetError:
 2546              	.LFB71:
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return huart->ErrorCode;
 2547              		.loc 1 2089 0
 2548              		.cfi_startproc
 2549              		@ args = 0, pretend = 0, frame = 0
 2550              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 97


 2551              		@ link register save eliminated.
 2552              	.LVL185:
2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2553              		.loc 1 2090 0
 2554 0000 C06E     		ldr	r0, [r0, #108]
 2555              	.LVL186:
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 2556              		.loc 1 2091 0
 2557              		@ sp needed
 2558 0002 7047     		bx	lr
 2559              		.cfi_endproc
 2560              	.LFE71:
 2562              		.global	__aeabi_uidiv
 2563              		.section	.text.UART_SetConfig,"ax",%progbits
 2564              		.align	2
 2565              		.global	UART_SetConfig
 2566              		.code	16
 2567              		.thumb_func
 2569              	UART_SetConfig:
 2570              	.LFB72:
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 2571              		.loc 1 2110 0
 2572              		.cfi_startproc
 2573              		@ args = 0, pretend = 0, frame = 0
 2574              		@ frame_needed = 0, uses_anonymous_args = 0
 2575              	.LVL187:
 2576 0000 70B5     		push	{r4, r5, r6, lr}
 2577              	.LCFI24:
 2578              		.cfi_def_cfa_offset 16
 2579              		.cfi_offset 4, -16
 2580              		.cfi_offset 5, -12
 2581              		.cfi_offset 6, -8
 2582              		.cfi_offset 14, -4
 2583 0002 0400     		movs	r4, r0
 2584              	.LVL188:
2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2585              		.loc 1 2135 0
 2586 0004 8368     		ldr	r3, [r0, #8]
 2587 0006 0269     		ldr	r2, [r0, #16]
 2588 0008 1343     		orrs	r3, r2
 2589 000a 4269     		ldr	r2, [r0, #20]
 2590 000c 1343     		orrs	r3, r2
 2591 000e C169     		ldr	r1, [r0, #28]
 2592 0010 1943     		orrs	r1, r3
 2593              	.LVL189:
2136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2594              		.loc 1 2136 0
 2595 0012 0068     		ldr	r0, [r0]
 2596              	.LVL190:
 2597 0014 0368     		ldr	r3, [r0]
 2598 0016 5B4A     		ldr	r2, .L167
 2599 0018 1340     		ands	r3, r2
 2600 001a 0B43     		orrs	r3, r1
 2601 001c 0360     		str	r3, [r0]
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2602              		.loc 1 2141 0
 2603 001e 2268     		ldr	r2, [r4]
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 98


 2604 0020 5168     		ldr	r1, [r2, #4]
 2605              	.LVL191:
 2606 0022 594B     		ldr	r3, .L167+4
 2607 0024 0B40     		ands	r3, r1
 2608 0026 E168     		ldr	r1, [r4, #12]
 2609 0028 0B43     		orrs	r3, r1
 2610 002a 5360     		str	r3, [r2, #4]
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2611              		.loc 1 2149 0
 2612 002c A169     		ldr	r1, [r4, #24]
 2613 002e 236A     		ldr	r3, [r4, #32]
 2614 0030 1943     		orrs	r1, r3
 2615              	.LVL192:
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2616              		.loc 1 2150 0
 2617 0032 2068     		ldr	r0, [r4]
 2618 0034 8368     		ldr	r3, [r0, #8]
 2619 0036 554A     		ldr	r2, .L167+8
 2620 0038 1340     		ands	r3, r2
 2621 003a 0B43     		orrs	r3, r1
 2622 003c 8360     		str	r3, [r0, #8]
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2623              		.loc 1 2153 0
 2624 003e 544B     		ldr	r3, .L167+12
 2625 0040 1B6B     		ldr	r3, [r3, #48]
 2626 0042 0322     		movs	r2, #3
 2627 0044 1340     		ands	r3, r2
 2628 0046 012B     		cmp	r3, #1
 2629 0048 08D0     		beq	.L146
 2630 004a 002B     		cmp	r3, #0
 2631 004c 04D0     		beq	.L147
 2632 004e 022B     		cmp	r3, #2
 2633 0050 06D0     		beq	.L148
 2634 0052 032B     		cmp	r3, #3
 2635 0054 08D0     		beq	.L163
 2636 0056 05E0     		b	.L166
 2637              	.L147:
 2638 0058 0023     		movs	r3, #0
 2639 005a 06E0     		b	.L149
 2640              	.L146:
 2641              	.LVL193:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2642              		.loc 1 2153 0 is_stmt 0 discriminator 3
 2643 005c 0423     		movs	r3, #4
 2644 005e 04E0     		b	.L149
 2645              	.LVL194:
 2646              	.L148:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2647              		.loc 1 2153 0 discriminator 4
 2648 0060 0823     		movs	r3, #8
 2649 0062 02E0     		b	.L149
 2650              	.LVL195:
 2651              	.L166:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2652              		.loc 1 2153 0 discriminator 1
 2653 0064 1023     		movs	r3, #16
 2654 0066 00E0     		b	.L149
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 99


 2655              	.L163:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2656              		.loc 1 2153 0
 2657 0068 0223     		movs	r3, #2
 2658              	.LVL196:
 2659              	.L149:
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2660              		.loc 1 2156 0 is_stmt 1
 2661 006a 8022     		movs	r2, #128
 2662 006c 1202     		lsls	r2, r2, #8
 2663 006e E169     		ldr	r1, [r4, #28]
 2664              	.LVL197:
 2665 0070 9142     		cmp	r1, r2
 2666 0072 45D1     		bne	.L150
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2667              		.loc 1 2158 0
 2668 0074 022B     		cmp	r3, #2
 2669 0076 14D0     		beq	.L152
 2670 0078 02D8     		bhi	.L153
 2671 007a 002B     		cmp	r3, #0
 2672 007c 05D0     		beq	.L154
 2673 007e 33E0     		b	.L164
 2674              	.L153:
 2675 0080 042B     		cmp	r3, #4
 2676 0082 19D0     		beq	.L155
 2677 0084 082B     		cmp	r3, #8
 2678 0086 23D0     		beq	.L156
 2679 0088 2EE0     		b	.L164
 2680              	.L154:
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2681              		.loc 1 2161 0
 2682 008a FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2683              	.LVL198:
 2684 008e 4000     		lsls	r0, r0, #1
 2685 0090 6368     		ldr	r3, [r4, #4]
 2686 0092 5B08     		lsrs	r3, r3, #1
 2687 0094 C018     		adds	r0, r0, r3
 2688 0096 6168     		ldr	r1, [r4, #4]
 2689 0098 FFF7FEFF 		bl	__aeabi_uidiv
 2690              	.LVL199:
 2691 009c 83B2     		uxth	r3, r0
 2692              	.LVL200:
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2693              		.loc 1 2115 0
 2694 009e 0020     		movs	r0, #0
2162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 2695              		.loc 1 2162 0
 2696 00a0 24E0     		b	.L151
 2697              	.LVL201:
 2698              	.L152:
2164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2699              		.loc 1 2164 0
 2700 00a2 6368     		ldr	r3, [r4, #4]
 2701              	.LVL202:
 2702 00a4 5808     		lsrs	r0, r3, #1
 2703 00a6 3B4B     		ldr	r3, .L167+16
 2704 00a8 9C46     		mov	ip, r3
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 100


 2705 00aa 6044     		add	r0, r0, ip
 2706 00ac 6168     		ldr	r1, [r4, #4]
 2707 00ae FFF7FEFF 		bl	__aeabi_uidiv
 2708              	.LVL203:
 2709 00b2 83B2     		uxth	r3, r0
 2710              	.LVL204:
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2711              		.loc 1 2115 0
 2712 00b4 0020     		movs	r0, #0
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 2713              		.loc 1 2165 0
 2714 00b6 19E0     		b	.L151
 2715              	.LVL205:
 2716              	.L155:
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2717              		.loc 1 2167 0
 2718 00b8 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2719              	.LVL206:
 2720 00bc 4000     		lsls	r0, r0, #1
 2721 00be 6368     		ldr	r3, [r4, #4]
 2722 00c0 5B08     		lsrs	r3, r3, #1
 2723 00c2 C018     		adds	r0, r0, r3
 2724 00c4 6168     		ldr	r1, [r4, #4]
 2725 00c6 FFF7FEFF 		bl	__aeabi_uidiv
 2726              	.LVL207:
 2727 00ca 83B2     		uxth	r3, r0
 2728              	.LVL208:
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2729              		.loc 1 2115 0
 2730 00cc 0020     		movs	r0, #0
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 2731              		.loc 1 2168 0
 2732 00ce 0DE0     		b	.L151
 2733              	.LVL209:
 2734              	.L156:
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2735              		.loc 1 2170 0
 2736 00d0 6368     		ldr	r3, [r4, #4]
 2737              	.LVL210:
 2738 00d2 5808     		lsrs	r0, r3, #1
 2739 00d4 8023     		movs	r3, #128
 2740 00d6 5B02     		lsls	r3, r3, #9
 2741 00d8 9C46     		mov	ip, r3
 2742 00da 6044     		add	r0, r0, ip
 2743 00dc 6168     		ldr	r1, [r4, #4]
 2744 00de FFF7FEFF 		bl	__aeabi_uidiv
 2745              	.LVL211:
 2746 00e2 83B2     		uxth	r3, r0
 2747              	.LVL212:
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2748              		.loc 1 2115 0
 2749 00e4 0020     		movs	r0, #0
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2750              		.loc 1 2171 0
 2751 00e6 01E0     		b	.L151
 2752              	.LVL213:
 2753              	.L164:
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 101


2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2754              		.loc 1 2174 0
 2755 00e8 0120     		movs	r0, #1
2114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 2756              		.loc 1 2114 0
 2757 00ea 0023     		movs	r3, #0
 2758              	.LVL214:
 2759              	.L151:
2178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2760              		.loc 1 2178 0
 2761 00ec 0F22     		movs	r2, #15
 2762 00ee 1900     		movs	r1, r3
 2763 00f0 9143     		bics	r1, r2
 2764              	.LVL215:
2179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 2765              		.loc 1 2179 0
 2766 00f2 5A10     		asrs	r2, r3, #1
 2767 00f4 0723     		movs	r3, #7
 2768              	.LVL216:
 2769 00f6 1340     		ands	r3, r2
 2770 00f8 0B43     		orrs	r3, r1
 2771              	.LVL217:
2180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2772              		.loc 1 2180 0
 2773 00fa 2268     		ldr	r2, [r4]
 2774 00fc D360     		str	r3, [r2, #12]
 2775 00fe 40E0     		b	.L157
 2776              	.LVL218:
 2777              	.L150:
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2778              		.loc 1 2184 0
 2779 0100 022B     		cmp	r3, #2
 2780 0102 15D0     		beq	.L158
 2781 0104 02D8     		bhi	.L159
 2782 0106 002B     		cmp	r3, #0
 2783 0108 05D0     		beq	.L160
 2784 010a 39E0     		b	.L165
 2785              	.L159:
 2786 010c 042B     		cmp	r3, #4
 2787 010e 1CD0     		beq	.L161
 2788 0110 082B     		cmp	r3, #8
 2789 0112 27D0     		beq	.L162
 2790 0114 34E0     		b	.L165
 2791              	.L160:
2187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2792              		.loc 1 2187 0
 2793 0116 2568     		ldr	r5, [r4]
 2794 0118 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2795              	.LVL219:
 2796 011c 6168     		ldr	r1, [r4, #4]
 2797 011e 4B08     		lsrs	r3, r1, #1
 2798 0120 C018     		adds	r0, r0, r3
 2799 0122 FFF7FEFF 		bl	__aeabi_uidiv
 2800              	.LVL220:
 2801 0126 0004     		lsls	r0, r0, #16
 2802 0128 000C     		lsrs	r0, r0, #16
 2803 012a E860     		str	r0, [r5, #12]
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 102


2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2804              		.loc 1 2115 0
 2805 012c 0020     		movs	r0, #0
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 2806              		.loc 1 2188 0
 2807 012e 28E0     		b	.L157
 2808              	.LVL221:
 2809              	.L158:
2190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2810              		.loc 1 2190 0
 2811 0130 2568     		ldr	r5, [r4]
 2812 0132 6168     		ldr	r1, [r4, #4]
 2813 0134 4808     		lsrs	r0, r1, #1
 2814 0136 184B     		ldr	r3, .L167+20
 2815              	.LVL222:
 2816 0138 9C46     		mov	ip, r3
 2817 013a 6044     		add	r0, r0, ip
 2818 013c FFF7FEFF 		bl	__aeabi_uidiv
 2819              	.LVL223:
 2820 0140 0004     		lsls	r0, r0, #16
 2821 0142 000C     		lsrs	r0, r0, #16
 2822 0144 E860     		str	r0, [r5, #12]
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2823              		.loc 1 2115 0
 2824 0146 0020     		movs	r0, #0
2191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 2825              		.loc 1 2191 0
 2826 0148 1BE0     		b	.L157
 2827              	.LVL224:
 2828              	.L161:
2193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2829              		.loc 1 2193 0
 2830 014a 2568     		ldr	r5, [r4]
 2831 014c FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2832              	.LVL225:
 2833 0150 6168     		ldr	r1, [r4, #4]
 2834 0152 4B08     		lsrs	r3, r1, #1
 2835 0154 C018     		adds	r0, r0, r3
 2836 0156 FFF7FEFF 		bl	__aeabi_uidiv
 2837              	.LVL226:
 2838 015a 0004     		lsls	r0, r0, #16
 2839 015c 000C     		lsrs	r0, r0, #16
 2840 015e E860     		str	r0, [r5, #12]
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2841              		.loc 1 2115 0
 2842 0160 0020     		movs	r0, #0
2194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 2843              		.loc 1 2194 0
 2844 0162 0EE0     		b	.L157
 2845              	.LVL227:
 2846              	.L162:
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2847              		.loc 1 2196 0
 2848 0164 2568     		ldr	r5, [r4]
 2849 0166 6168     		ldr	r1, [r4, #4]
 2850 0168 4808     		lsrs	r0, r1, #1
 2851 016a 8023     		movs	r3, #128
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 103


 2852              	.LVL228:
 2853 016c 1B02     		lsls	r3, r3, #8
 2854 016e 9C46     		mov	ip, r3
 2855 0170 6044     		add	r0, r0, ip
 2856 0172 FFF7FEFF 		bl	__aeabi_uidiv
 2857              	.LVL229:
 2858 0176 0004     		lsls	r0, r0, #16
 2859 0178 000C     		lsrs	r0, r0, #16
 2860 017a E860     		str	r0, [r5, #12]
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2861              		.loc 1 2115 0
 2862 017c 0020     		movs	r0, #0
2197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2863              		.loc 1 2197 0
 2864 017e 00E0     		b	.L157
 2865              	.LVL230:
 2866              	.L165:
2200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2867              		.loc 1 2200 0
 2868 0180 0120     		movs	r0, #1
 2869              	.LVL231:
 2870              	.L157:
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2871              		.loc 1 2207 0
 2872              		@ sp needed
 2873              	.LVL232:
 2874 0182 70BD     		pop	{r4, r5, r6, pc}
 2875              	.L168:
 2876              		.align	2
 2877              	.L167:
 2878 0184 F369FFFF 		.word	-38413
 2879 0188 FFCFFFFF 		.word	-12289
 2880 018c FFF4FFFF 		.word	-2817
 2881 0190 00100240 		.word	1073876992
 2882 0194 0024F400 		.word	16000000
 2883 0198 00127A00 		.word	8000000
 2884              		.cfi_endproc
 2885              	.LFE72:
 2887              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 2888              		.align	2
 2889              		.global	UART_AdvFeatureConfig
 2890              		.code	16
 2891              		.thumb_func
 2893              	UART_AdvFeatureConfig:
 2894              	.LFB73:
2215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 2895              		.loc 1 2215 0
 2896              		.cfi_startproc
 2897              		@ args = 0, pretend = 0, frame = 0
 2898              		@ frame_needed = 0, uses_anonymous_args = 0
 2899              		@ link register save eliminated.
 2900              	.LVL233:
2220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2901              		.loc 1 2220 0
 2902 0000 436A     		ldr	r3, [r0, #36]
 2903 0002 DB07     		lsls	r3, r3, #31
 2904 0004 06D5     		bpl	.L170
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 104


2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2905              		.loc 1 2223 0
 2906 0006 0268     		ldr	r2, [r0]
 2907 0008 5168     		ldr	r1, [r2, #4]
 2908 000a 2C4B     		ldr	r3, .L178
 2909 000c 0B40     		ands	r3, r1
 2910 000e 816A     		ldr	r1, [r0, #40]
 2911 0010 0B43     		orrs	r3, r1
 2912 0012 5360     		str	r3, [r2, #4]
 2913              	.L170:
2227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2914              		.loc 1 2227 0
 2915 0014 436A     		ldr	r3, [r0, #36]
 2916 0016 9B07     		lsls	r3, r3, #30
 2917 0018 06D5     		bpl	.L171
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2918              		.loc 1 2230 0
 2919 001a 0268     		ldr	r2, [r0]
 2920 001c 5168     		ldr	r1, [r2, #4]
 2921 001e 284B     		ldr	r3, .L178+4
 2922 0020 0B40     		ands	r3, r1
 2923 0022 C16A     		ldr	r1, [r0, #44]
 2924 0024 0B43     		orrs	r3, r1
 2925 0026 5360     		str	r3, [r2, #4]
 2926              	.L171:
2234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2927              		.loc 1 2234 0
 2928 0028 436A     		ldr	r3, [r0, #36]
 2929 002a 5B07     		lsls	r3, r3, #29
 2930 002c 06D5     		bpl	.L172
2237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2931              		.loc 1 2237 0
 2932 002e 0268     		ldr	r2, [r0]
 2933 0030 5168     		ldr	r1, [r2, #4]
 2934 0032 244B     		ldr	r3, .L178+8
 2935 0034 0B40     		ands	r3, r1
 2936 0036 016B     		ldr	r1, [r0, #48]
 2937 0038 0B43     		orrs	r3, r1
 2938 003a 5360     		str	r3, [r2, #4]
 2939              	.L172:
2241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2940              		.loc 1 2241 0
 2941 003c 436A     		ldr	r3, [r0, #36]
 2942 003e 1B07     		lsls	r3, r3, #28
 2943 0040 06D5     		bpl	.L173
2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2944              		.loc 1 2244 0
 2945 0042 0268     		ldr	r2, [r0]
 2946 0044 5168     		ldr	r1, [r2, #4]
 2947 0046 204B     		ldr	r3, .L178+12
 2948 0048 0B40     		ands	r3, r1
 2949 004a 416B     		ldr	r1, [r0, #52]
 2950 004c 0B43     		orrs	r3, r1
 2951 004e 5360     		str	r3, [r2, #4]
 2952              	.L173:
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2953              		.loc 1 2248 0
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 105


 2954 0050 436A     		ldr	r3, [r0, #36]
 2955 0052 DB06     		lsls	r3, r3, #27
 2956 0054 06D5     		bpl	.L174
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2957              		.loc 1 2251 0
 2958 0056 0268     		ldr	r2, [r0]
 2959 0058 9168     		ldr	r1, [r2, #8]
 2960 005a 1C4B     		ldr	r3, .L178+16
 2961 005c 0B40     		ands	r3, r1
 2962 005e 816B     		ldr	r1, [r0, #56]
 2963 0060 0B43     		orrs	r3, r1
 2964 0062 9360     		str	r3, [r2, #8]
 2965              	.L174:
2255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2966              		.loc 1 2255 0
 2967 0064 436A     		ldr	r3, [r0, #36]
 2968 0066 9B06     		lsls	r3, r3, #26
 2969 0068 06D5     		bpl	.L175
2258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2970              		.loc 1 2258 0
 2971 006a 0268     		ldr	r2, [r0]
 2972 006c 9168     		ldr	r1, [r2, #8]
 2973 006e 184B     		ldr	r3, .L178+20
 2974 0070 0B40     		ands	r3, r1
 2975 0072 C16B     		ldr	r1, [r0, #60]
 2976 0074 0B43     		orrs	r3, r1
 2977 0076 9360     		str	r3, [r2, #8]
 2978              	.L175:
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2979              		.loc 1 2262 0
 2980 0078 436A     		ldr	r3, [r0, #36]
 2981 007a 5B06     		lsls	r3, r3, #25
 2982 007c 12D5     		bpl	.L176
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 2983              		.loc 1 2266 0
 2984 007e 0268     		ldr	r2, [r0]
 2985 0080 5168     		ldr	r1, [r2, #4]
 2986 0082 144B     		ldr	r3, .L178+24
 2987 0084 0B40     		ands	r3, r1
 2988 0086 016C     		ldr	r1, [r0, #64]
 2989 0088 0B43     		orrs	r3, r1
 2990 008a 5360     		str	r3, [r2, #4]
2268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2991              		.loc 1 2268 0
 2992 008c 8023     		movs	r3, #128
 2993 008e 5B03     		lsls	r3, r3, #13
 2994 0090 026C     		ldr	r2, [r0, #64]
 2995 0092 9A42     		cmp	r2, r3
 2996 0094 06D1     		bne	.L176
2271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2997              		.loc 1 2271 0
 2998 0096 0268     		ldr	r2, [r0]
 2999 0098 5168     		ldr	r1, [r2, #4]
 3000 009a 0F4B     		ldr	r3, .L178+28
 3001 009c 0B40     		ands	r3, r1
 3002 009e 416C     		ldr	r1, [r0, #68]
 3003 00a0 0B43     		orrs	r3, r1
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 106


 3004 00a2 5360     		str	r3, [r2, #4]
 3005              	.L176:
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3006              		.loc 1 2276 0
 3007 00a4 436A     		ldr	r3, [r0, #36]
 3008 00a6 1B06     		lsls	r3, r3, #24
 3009 00a8 06D5     		bpl	.L169
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3010              		.loc 1 2279 0
 3011 00aa 0168     		ldr	r1, [r0]
 3012 00ac 4A68     		ldr	r2, [r1, #4]
 3013 00ae 0B4B     		ldr	r3, .L178+32
 3014 00b0 1340     		ands	r3, r2
 3015 00b2 826C     		ldr	r2, [r0, #72]
 3016 00b4 1343     		orrs	r3, r2
 3017 00b6 4B60     		str	r3, [r1, #4]
 3018              	.L169:
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3019              		.loc 1 2281 0
 3020              		@ sp needed
 3021 00b8 7047     		bx	lr
 3022              	.L179:
 3023 00ba C046     		.align	2
 3024              	.L178:
 3025 00bc FFFFFDFF 		.word	-131073
 3026 00c0 FFFFFEFF 		.word	-65537
 3027 00c4 FFFFFBFF 		.word	-262145
 3028 00c8 FF7FFFFF 		.word	-32769
 3029 00cc FFEFFFFF 		.word	-4097
 3030 00d0 FFDFFFFF 		.word	-8193
 3031 00d4 FFFFEFFF 		.word	-1048577
 3032 00d8 FFFF9FFF 		.word	-6291457
 3033 00dc FFFFF7FF 		.word	-524289
 3034              		.cfi_endproc
 3035              	.LFE73:
 3037              		.section	.text.UART_CheckIdleState,"ax",%progbits
 3038              		.align	2
 3039              		.global	UART_CheckIdleState
 3040              		.code	16
 3041              		.thumb_func
 3043              	UART_CheckIdleState:
 3044              	.LFB74:
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
 3045              		.loc 1 2289 0
 3046              		.cfi_startproc
 3047              		@ args = 0, pretend = 0, frame = 0
 3048              		@ frame_needed = 0, uses_anonymous_args = 0
 3049              		@ link register save eliminated.
 3050              	.LVL234:
2295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3051              		.loc 1 2295 0
 3052 0000 0023     		movs	r3, #0
 3053 0002 C366     		str	r3, [r0, #108]
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3054              		.loc 1 2331 0
 3055 0004 2022     		movs	r2, #32
 3056 0006 6921     		movs	r1, #105
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 107


 3057 0008 4254     		strb	r2, [r0, r1]
2332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3058              		.loc 1 2332 0
 3059 000a 0131     		adds	r1, r1, #1
 3060 000c 4254     		strb	r2, [r0, r1]
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3061              		.loc 1 2335 0
 3062 000e 4832     		adds	r2, r2, #72
 3063 0010 8354     		strb	r3, [r0, r2]
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3064              		.loc 1 2338 0
 3065 0012 0020     		movs	r0, #0
 3066              	.LVL235:
 3067              		@ sp needed
 3068 0014 7047     		bx	lr
 3069              		.cfi_endproc
 3070              	.LFE74:
 3072 0016 C046     		.section	.text.HAL_UART_Init,"ax",%progbits
 3073              		.align	2
 3074              		.global	HAL_UART_Init
 3075              		.code	16
 3076              		.thumb_func
 3078              	HAL_UART_Init:
 3079              	.LFB35:
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 3080              		.loc 1 292 0
 3081              		.cfi_startproc
 3082              		@ args = 0, pretend = 0, frame = 0
 3083              		@ frame_needed = 0, uses_anonymous_args = 0
 3084              	.LVL236:
 3085 0000 10B5     		push	{r4, lr}
 3086              	.LCFI25:
 3087              		.cfi_def_cfa_offset 8
 3088              		.cfi_offset 4, -8
 3089              		.cfi_offset 14, -4
 3090 0002 041E     		subs	r4, r0, #0
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3091              		.loc 1 294 0
 3092 0004 2ED0     		beq	.L185
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3093              		.loc 1 310 0
 3094 0006 6923     		movs	r3, #105
 3095 0008 C35C     		ldrb	r3, [r0, r3]
 3096 000a 002B     		cmp	r3, #0
 3097 000c 04D1     		bne	.L183
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3098              		.loc 1 313 0
 3099 000e 0022     		movs	r2, #0
 3100 0010 6833     		adds	r3, r3, #104
 3101 0012 C254     		strb	r2, [r0, r3]
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3102              		.loc 1 316 0
 3103 0014 FFF7FEFF 		bl	HAL_UART_MspInit
 3104              	.LVL237:
 3105              	.L183:
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3106              		.loc 1 319 0
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 108


 3107 0018 2422     		movs	r2, #36
 3108 001a 6923     		movs	r3, #105
 3109 001c E254     		strb	r2, [r4, r3]
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3110              		.loc 1 322 0
 3111 001e 2268     		ldr	r2, [r4]
 3112 0020 1368     		ldr	r3, [r2]
 3113 0022 0121     		movs	r1, #1
 3114 0024 8B43     		bics	r3, r1
 3115 0026 1360     		str	r3, [r2]
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3116              		.loc 1 325 0
 3117 0028 2000     		movs	r0, r4
 3118 002a FFF7FEFF 		bl	UART_SetConfig
 3119              	.LVL238:
 3120 002e 0128     		cmp	r0, #1
 3121 0030 19D0     		beq	.L182
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3122              		.loc 1 330 0
 3123 0032 636A     		ldr	r3, [r4, #36]
 3124 0034 002B     		cmp	r3, #0
 3125 0036 02D0     		beq	.L184
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3126              		.loc 1 332 0
 3127 0038 2000     		movs	r0, r4
 3128 003a FFF7FEFF 		bl	UART_AdvFeatureConfig
 3129              	.LVL239:
 3130              	.L184:
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 3131              		.loc 1 341 0
 3132 003e 2268     		ldr	r2, [r4]
 3133 0040 5168     		ldr	r1, [r2, #4]
 3134 0042 094B     		ldr	r3, .L186
 3135 0044 0B40     		ands	r3, r1
 3136 0046 5360     		str	r3, [r2, #4]
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 3137              		.loc 1 353 0
 3138 0048 2268     		ldr	r2, [r4]
 3139 004a 9368     		ldr	r3, [r2, #8]
 3140 004c 0821     		movs	r1, #8
 3141 004e 8B43     		bics	r3, r1
 3142 0050 9360     		str	r3, [r2, #8]
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3143              		.loc 1 358 0
 3144 0052 2268     		ldr	r2, [r4]
 3145 0054 1168     		ldr	r1, [r2]
 3146 0056 0123     		movs	r3, #1
 3147 0058 0B43     		orrs	r3, r1
 3148 005a 1360     		str	r3, [r2]
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3149              		.loc 1 361 0
 3150 005c 2000     		movs	r0, r4
 3151 005e FFF7FEFF 		bl	UART_CheckIdleState
 3152              	.LVL240:
 3153 0062 00E0     		b	.L182
 3154              	.LVL241:
 3155              	.L185:
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 109


 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3156              		.loc 1 296 0
 3157 0064 0120     		movs	r0, #1
 3158              	.LVL242:
 3159              	.L182:
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3160              		.loc 1 362 0
 3161              		@ sp needed
 3162              	.LVL243:
 3163 0066 10BD     		pop	{r4, pc}
 3164              	.L187:
 3165              		.align	2
 3166              	.L186:
 3167 0068 FFF7FFFF 		.word	-2049
 3168              		.cfi_endproc
 3169              	.LFE35:
 3171              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 3172              		.align	2
 3173              		.global	HAL_HalfDuplex_Init
 3174              		.code	16
 3175              		.thumb_func
 3177              	HAL_HalfDuplex_Init:
 3178              	.LFB36:
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 3179              		.loc 1 371 0
 3180              		.cfi_startproc
 3181              		@ args = 0, pretend = 0, frame = 0
 3182              		@ frame_needed = 0, uses_anonymous_args = 0
 3183              	.LVL244:
 3184 0000 10B5     		push	{r4, lr}
 3185              	.LCFI26:
 3186              		.cfi_def_cfa_offset 8
 3187              		.cfi_offset 4, -8
 3188              		.cfi_offset 14, -4
 3189 0002 041E     		subs	r4, r0, #0
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3190              		.loc 1 373 0
 3191 0004 2ED0     		beq	.L192
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3192              		.loc 1 381 0
 3193 0006 6923     		movs	r3, #105
 3194 0008 C35C     		ldrb	r3, [r0, r3]
 3195 000a 002B     		cmp	r3, #0
 3196 000c 04D1     		bne	.L190
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3197              		.loc 1 384 0
 3198 000e 0022     		movs	r2, #0
 3199 0010 6833     		adds	r3, r3, #104
 3200 0012 C254     		strb	r2, [r0, r3]
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3201              		.loc 1 387 0
 3202 0014 FFF7FEFF 		bl	HAL_UART_MspInit
 3203              	.LVL245:
 3204              	.L190:
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3205              		.loc 1 390 0
 3206 0018 2422     		movs	r2, #36
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 110


 3207 001a 6923     		movs	r3, #105
 3208 001c E254     		strb	r2, [r4, r3]
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3209              		.loc 1 393 0
 3210 001e 2268     		ldr	r2, [r4]
 3211 0020 1368     		ldr	r3, [r2]
 3212 0022 0121     		movs	r1, #1
 3213 0024 8B43     		bics	r3, r1
 3214 0026 1360     		str	r3, [r2]
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3215              		.loc 1 396 0
 3216 0028 2000     		movs	r0, r4
 3217 002a FFF7FEFF 		bl	UART_SetConfig
 3218              	.LVL246:
 3219 002e 0128     		cmp	r0, #1
 3220 0030 19D0     		beq	.L189
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3221              		.loc 1 401 0
 3222 0032 636A     		ldr	r3, [r4, #36]
 3223 0034 002B     		cmp	r3, #0
 3224 0036 02D0     		beq	.L191
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3225              		.loc 1 403 0
 3226 0038 2000     		movs	r0, r4
 3227 003a FFF7FEFF 		bl	UART_AdvFeatureConfig
 3228              	.LVL247:
 3229              	.L191:
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 3230              		.loc 1 412 0
 3231 003e 2268     		ldr	r2, [r4]
 3232 0040 5168     		ldr	r1, [r2, #4]
 3233 0042 094B     		ldr	r3, .L193
 3234 0044 0B40     		ands	r3, r1
 3235 0046 5360     		str	r3, [r2, #4]
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3236              		.loc 1 427 0
 3237 0048 2268     		ldr	r2, [r4]
 3238 004a 9168     		ldr	r1, [r2, #8]
 3239 004c 0823     		movs	r3, #8
 3240 004e 0B43     		orrs	r3, r1
 3241 0050 9360     		str	r3, [r2, #8]
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3242              		.loc 1 430 0
 3243 0052 2268     		ldr	r2, [r4]
 3244 0054 1168     		ldr	r1, [r2]
 3245 0056 0123     		movs	r3, #1
 3246 0058 0B43     		orrs	r3, r1
 3247 005a 1360     		str	r3, [r2]
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3248              		.loc 1 433 0
 3249 005c 2000     		movs	r0, r4
 3250 005e FFF7FEFF 		bl	UART_CheckIdleState
 3251              	.LVL248:
 3252 0062 00E0     		b	.L189
 3253              	.LVL249:
 3254              	.L192:
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 111


 3255              		.loc 1 375 0
 3256 0064 0120     		movs	r0, #1
 3257              	.LVL250:
 3258              	.L189:
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3259              		.loc 1 434 0
 3260              		@ sp needed
 3261              	.LVL251:
 3262 0066 10BD     		pop	{r4, pc}
 3263              	.L194:
 3264              		.align	2
 3265              	.L193:
 3266 0068 FFF7FFFF 		.word	-2049
 3267              		.cfi_endproc
 3268              	.LFE36:
 3270              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 3271              		.align	2
 3272              		.global	HAL_MultiProcessor_Init
 3273              		.code	16
 3274              		.thumb_func
 3276              	HAL_MultiProcessor_Init:
 3277              	.LFB37:
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 3278              		.loc 1 456 0
 3279              		.cfi_startproc
 3280              		@ args = 0, pretend = 0, frame = 0
 3281              		@ frame_needed = 0, uses_anonymous_args = 0
 3282              	.LVL252:
 3283 0000 70B5     		push	{r4, r5, r6, lr}
 3284              	.LCFI27:
 3285              		.cfi_def_cfa_offset 16
 3286              		.cfi_offset 4, -16
 3287              		.cfi_offset 5, -12
 3288              		.cfi_offset 6, -8
 3289              		.cfi_offset 14, -4
 3290 0002 0400     		movs	r4, r0
 3291 0004 0D00     		movs	r5, r1
 3292 0006 1600     		movs	r6, r2
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3293              		.loc 1 458 0
 3294 0008 0028     		cmp	r0, #0
 3295 000a 3FD0     		beq	.L200
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3296              		.loc 1 466 0
 3297 000c 6923     		movs	r3, #105
 3298 000e C35C     		ldrb	r3, [r0, r3]
 3299 0010 002B     		cmp	r3, #0
 3300 0012 04D1     		bne	.L197
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3301              		.loc 1 469 0
 3302 0014 0022     		movs	r2, #0
 3303              	.LVL253:
 3304 0016 6833     		adds	r3, r3, #104
 3305 0018 C254     		strb	r2, [r0, r3]
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3306              		.loc 1 472 0
 3307 001a FFF7FEFF 		bl	HAL_UART_MspInit
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 112


 3308              	.LVL254:
 3309              	.L197:
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3310              		.loc 1 475 0
 3311 001e 2422     		movs	r2, #36
 3312 0020 6923     		movs	r3, #105
 3313 0022 E254     		strb	r2, [r4, r3]
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3314              		.loc 1 478 0
 3315 0024 2268     		ldr	r2, [r4]
 3316 0026 1368     		ldr	r3, [r2]
 3317 0028 0121     		movs	r1, #1
 3318 002a 8B43     		bics	r3, r1
 3319 002c 1360     		str	r3, [r2]
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3320              		.loc 1 481 0
 3321 002e 2000     		movs	r0, r4
 3322 0030 FFF7FEFF 		bl	UART_SetConfig
 3323              	.LVL255:
 3324 0034 0128     		cmp	r0, #1
 3325 0036 2AD0     		beq	.L196
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3326              		.loc 1 486 0
 3327 0038 636A     		ldr	r3, [r4, #36]
 3328 003a 002B     		cmp	r3, #0
 3329 003c 02D0     		beq	.L198
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3330              		.loc 1 488 0
 3331 003e 2000     		movs	r0, r4
 3332 0040 FFF7FEFF 		bl	UART_AdvFeatureConfig
 3333              	.LVL256:
 3334              	.L198:
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 3335              		.loc 1 497 0
 3336 0044 2268     		ldr	r2, [r4]
 3337 0046 5168     		ldr	r1, [r2, #4]
 3338 0048 114B     		ldr	r3, .L201
 3339 004a 0B40     		ands	r3, r1
 3340 004c 5360     		str	r3, [r2, #4]
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 3341              		.loc 1 509 0
 3342 004e 2268     		ldr	r2, [r4]
 3343 0050 9368     		ldr	r3, [r2, #8]
 3344 0052 0821     		movs	r1, #8
 3345 0054 8B43     		bics	r3, r1
 3346 0056 9360     		str	r3, [r2, #8]
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3347              		.loc 1 513 0
 3348 0058 8023     		movs	r3, #128
 3349 005a 1B01     		lsls	r3, r3, #4
 3350 005c 9E42     		cmp	r6, r3
 3351 005e 06D1     		bne	.L199
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3352              		.loc 1 516 0
 3353 0060 2268     		ldr	r2, [r4]
 3354 0062 5368     		ldr	r3, [r2, #4]
 3355 0064 1B02     		lsls	r3, r3, #8
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 113


 3356 0066 1B0A     		lsrs	r3, r3, #8
 3357 0068 2D06     		lsls	r5, r5, #24
 3358 006a 1D43     		orrs	r5, r3
 3359 006c 5560     		str	r5, [r2, #4]
 3360              	.L199:
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3361              		.loc 1 520 0
 3362 006e 2168     		ldr	r1, [r4]
 3363 0070 0A68     		ldr	r2, [r1]
 3364 0072 074B     		ldr	r3, .L201
 3365 0074 1A40     		ands	r2, r3
 3366 0076 3243     		orrs	r2, r6
 3367 0078 0A60     		str	r2, [r1]
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3368              		.loc 1 523 0
 3369 007a 2268     		ldr	r2, [r4]
 3370 007c 1168     		ldr	r1, [r2]
 3371 007e 0123     		movs	r3, #1
 3372 0080 0B43     		orrs	r3, r1
 3373 0082 1360     		str	r3, [r2]
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3374              		.loc 1 526 0
 3375 0084 2000     		movs	r0, r4
 3376 0086 FFF7FEFF 		bl	UART_CheckIdleState
 3377              	.LVL257:
 3378 008a 00E0     		b	.L196
 3379              	.LVL258:
 3380              	.L200:
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3381              		.loc 1 460 0
 3382 008c 0120     		movs	r0, #1
 3383              	.LVL259:
 3384              	.L196:
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3385              		.loc 1 527 0
 3386              		@ sp needed
 3387              	.LVL260:
 3388              	.LVL261:
 3389 008e 70BD     		pop	{r4, r5, r6, pc}
 3390              	.L202:
 3391              		.align	2
 3392              	.L201:
 3393 0090 FFF7FFFF 		.word	-2049
 3394              		.cfi_endproc
 3395              	.LFE37:
 3397              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 3398              		.align	2
 3399              		.global	HAL_MultiProcessor_EnableMuteMode
 3400              		.code	16
 3401              		.thumb_func
 3403              	HAL_MultiProcessor_EnableMuteMode:
 3404              	.LFB65:
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 3405              		.loc 1 1954 0
 3406              		.cfi_startproc
 3407              		@ args = 0, pretend = 0, frame = 0
 3408              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 114


 3409              	.LVL262:
 3410 0000 10B5     		push	{r4, lr}
 3411              	.LCFI28:
 3412              		.cfi_def_cfa_offset 8
 3413              		.cfi_offset 4, -8
 3414              		.cfi_offset 14, -4
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3415              		.loc 1 1956 0
 3416 0002 6823     		movs	r3, #104
 3417 0004 C35C     		ldrb	r3, [r0, r3]
 3418 0006 012B     		cmp	r3, #1
 3419 0008 10D0     		beq	.L205
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3420              		.loc 1 1956 0 is_stmt 0 discriminator 2
 3421 000a 0122     		movs	r2, #1
 3422 000c 6823     		movs	r3, #104
 3423 000e C254     		strb	r2, [r0, r3]
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3424              		.loc 1 1958 0 is_stmt 1 discriminator 2
 3425 0010 6832     		adds	r2, r2, #104
 3426 0012 443B     		subs	r3, r3, #68
 3427 0014 8354     		strb	r3, [r0, r2]
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3428              		.loc 1 1961 0 discriminator 2
 3429 0016 0168     		ldr	r1, [r0]
 3430 0018 0B68     		ldr	r3, [r1]
 3431 001a 8024     		movs	r4, #128
 3432 001c A401     		lsls	r4, r4, #6
 3433 001e 2343     		orrs	r3, r4
 3434 0020 0B60     		str	r3, [r1]
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3435              		.loc 1 1963 0 discriminator 2
 3436 0022 2023     		movs	r3, #32
 3437 0024 8354     		strb	r3, [r0, r2]
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3438              		.loc 1 1965 0 discriminator 2
 3439 0026 FFF7FEFF 		bl	UART_CheckIdleState
 3440              	.LVL263:
 3441 002a 00E0     		b	.L204
 3442              	.LVL264:
 3443              	.L205:
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3444              		.loc 1 1956 0
 3445 002c 0220     		movs	r0, #2
 3446              	.LVL265:
 3447              	.L204:
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3448              		.loc 1 1966 0
 3449              		@ sp needed
 3450 002e 10BD     		pop	{r4, pc}
 3451              		.cfi_endproc
 3452              	.LFE65:
 3454              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 3455              		.align	2
 3456              		.global	HAL_MultiProcessor_DisableMuteMode
 3457              		.code	16
 3458              		.thumb_func
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 115


 3460              	HAL_MultiProcessor_DisableMuteMode:
 3461              	.LFB66:
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 3462              		.loc 1 1975 0
 3463              		.cfi_startproc
 3464              		@ args = 0, pretend = 0, frame = 0
 3465              		@ frame_needed = 0, uses_anonymous_args = 0
 3466              	.LVL266:
 3467 0000 10B5     		push	{r4, lr}
 3468              	.LCFI29:
 3469              		.cfi_def_cfa_offset 8
 3470              		.cfi_offset 4, -8
 3471              		.cfi_offset 14, -4
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3472              		.loc 1 1977 0
 3473 0002 6823     		movs	r3, #104
 3474 0004 C35C     		ldrb	r3, [r0, r3]
 3475 0006 012B     		cmp	r3, #1
 3476 0008 0FD0     		beq	.L208
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3477              		.loc 1 1977 0 is_stmt 0 discriminator 2
 3478 000a 0122     		movs	r2, #1
 3479 000c 6823     		movs	r3, #104
 3480 000e C254     		strb	r2, [r0, r3]
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3481              		.loc 1 1979 0 is_stmt 1 discriminator 2
 3482 0010 6832     		adds	r2, r2, #104
 3483 0012 443B     		subs	r3, r3, #68
 3484 0014 8354     		strb	r3, [r0, r2]
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3485              		.loc 1 1982 0 discriminator 2
 3486 0016 0168     		ldr	r1, [r0]
 3487 0018 0C68     		ldr	r4, [r1]
 3488 001a 054B     		ldr	r3, .L209
 3489 001c 2340     		ands	r3, r4
 3490 001e 0B60     		str	r3, [r1]
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3491              		.loc 1 1984 0 discriminator 2
 3492 0020 2023     		movs	r3, #32
 3493 0022 8354     		strb	r3, [r0, r2]
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3494              		.loc 1 1986 0 discriminator 2
 3495 0024 FFF7FEFF 		bl	UART_CheckIdleState
 3496              	.LVL267:
 3497 0028 00E0     		b	.L207
 3498              	.LVL268:
 3499              	.L208:
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3500              		.loc 1 1977 0
 3501 002a 0220     		movs	r0, #2
 3502              	.LVL269:
 3503              	.L207:
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3504              		.loc 1 1987 0
 3505              		@ sp needed
 3506 002c 10BD     		pop	{r4, pc}
 3507              	.L210:
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 116


 3508 002e C046     		.align	2
 3509              	.L209:
 3510 0030 FFDFFFFF 		.word	-8193
 3511              		.cfi_endproc
 3512              	.LFE66:
 3514              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 3515              		.align	2
 3516              		.global	UART_WaitOnFlagUntilTimeout
 3517              		.code	16
 3518              		.thumb_func
 3520              	UART_WaitOnFlagUntilTimeout:
 3521              	.LFB75:
2350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Wait until flag is set */
 3522              		.loc 1 2350 0
 3523              		.cfi_startproc
 3524              		@ args = 4, pretend = 0, frame = 0
 3525              		@ frame_needed = 0, uses_anonymous_args = 0
 3526              	.LVL270:
 3527 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3528              	.LCFI30:
 3529              		.cfi_def_cfa_offset 20
 3530              		.cfi_offset 4, -20
 3531              		.cfi_offset 5, -16
 3532              		.cfi_offset 6, -12
 3533              		.cfi_offset 7, -8
 3534              		.cfi_offset 14, -4
 3535 0002 4746     		mov	r7, r8
 3536 0004 80B4     		push	{r7}
 3537              	.LCFI31:
 3538              		.cfi_def_cfa_offset 24
 3539              		.cfi_offset 8, -24
 3540 0006 0500     		movs	r5, r0
 3541 0008 0F00     		movs	r7, r1
 3542 000a 1600     		movs	r6, r2
 3543 000c 9846     		mov	r8, r3
 3544 000e 069C     		ldr	r4, [sp, #24]
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3545              		.loc 1 2352 0
 3546 0010 1DE0     		b	.L213
 3547              	.LVL271:
 3548              	.L216:
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3549              		.loc 1 2355 0
 3550 0012 631C     		adds	r3, r4, #1
 3551 0014 1BD0     		beq	.L213
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3552              		.loc 1 2357 0
 3553 0016 002C     		cmp	r4, #0
 3554 0018 05D0     		beq	.L214
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3555              		.loc 1 2357 0 is_stmt 0 discriminator 1
 3556 001a FFF7FEFF 		bl	HAL_GetTick
 3557              	.LVL272:
 3558 001e 4346     		mov	r3, r8
 3559 0020 C01A     		subs	r0, r0, r3
 3560 0022 8442     		cmp	r4, r0
 3561 0024 13D2     		bcs	.L213
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 117


 3562              	.L214:
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3563              		.loc 1 2360 0 is_stmt 1
 3564 0026 2A68     		ldr	r2, [r5]
 3565 0028 1168     		ldr	r1, [r2]
 3566 002a 0F4B     		ldr	r3, .L217
 3567 002c 0B40     		ands	r3, r1
 3568 002e 1360     		str	r3, [r2]
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3569              		.loc 1 2361 0
 3570 0030 2A68     		ldr	r2, [r5]
 3571 0032 9368     		ldr	r3, [r2, #8]
 3572 0034 0121     		movs	r1, #1
 3573 0036 8B43     		bics	r3, r1
 3574 0038 9360     		str	r3, [r2, #8]
2363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 3575              		.loc 1 2363 0
 3576 003a 2023     		movs	r3, #32
 3577 003c 6922     		movs	r2, #105
 3578 003e AB54     		strb	r3, [r5, r2]
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3579              		.loc 1 2364 0
 3580 0040 0132     		adds	r2, r2, #1
 3581 0042 AB54     		strb	r3, [r5, r2]
2367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 3582              		.loc 1 2367 0
 3583 0044 0022     		movs	r2, #0
 3584 0046 4833     		adds	r3, r3, #72
 3585 0048 EA54     		strb	r2, [r5, r3]
2368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3586              		.loc 1 2368 0
 3587 004a 0320     		movs	r0, #3
 3588 004c 09E0     		b	.L215
 3589              	.L213:
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3590              		.loc 1 2352 0
 3591 004e 2B68     		ldr	r3, [r5]
 3592 0050 DB69     		ldr	r3, [r3, #28]
 3593 0052 3A00     		movs	r2, r7
 3594 0054 9A43     		bics	r2, r3
 3595 0056 1300     		movs	r3, r2
 3596 0058 5A42     		rsbs	r2, r3, #0
 3597 005a 5341     		adcs	r3, r3, r2
 3598 005c B342     		cmp	r3, r6
 3599 005e D8D0     		beq	.L216
2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3600              		.loc 1 2372 0
 3601 0060 0020     		movs	r0, #0
 3602              	.L215:
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3603              		.loc 1 2373 0
 3604              		@ sp needed
 3605              	.LVL273:
 3606              	.LVL274:
 3607              	.LVL275:
 3608 0062 04BC     		pop	{r2}
 3609 0064 9046     		mov	r8, r2
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 118


 3610 0066 F0BD     		pop	{r4, r5, r6, r7, pc}
 3611              	.L218:
 3612              		.align	2
 3613              	.L217:
 3614 0068 5FFEFFFF 		.word	-417
 3615              		.cfi_endproc
 3616              	.LFE75:
 3618              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 3619              		.align	2
 3620              		.global	HAL_UART_Transmit
 3621              		.code	16
 3622              		.thumb_func
 3624              	HAL_UART_Transmit:
 3625              	.LFB41:
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 3626              		.loc 1 692 0
 3627              		.cfi_startproc
 3628              		@ args = 0, pretend = 0, frame = 8
 3629              		@ frame_needed = 0, uses_anonymous_args = 0
 3630              	.LVL276:
 3631 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3632              	.LCFI32:
 3633              		.cfi_def_cfa_offset 20
 3634              		.cfi_offset 4, -20
 3635              		.cfi_offset 5, -16
 3636              		.cfi_offset 6, -12
 3637              		.cfi_offset 7, -8
 3638              		.cfi_offset 14, -4
 3639 0002 85B0     		sub	sp, sp, #20
 3640              	.LCFI33:
 3641              		.cfi_def_cfa_offset 40
 3642 0004 0400     		movs	r4, r0
 3643 0006 0F00     		movs	r7, r1
 3644 0008 1600     		movs	r6, r2
 3645 000a 1D00     		movs	r5, r3
 3646              	.LVL277:
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3647              		.loc 1 697 0
 3648 000c 6923     		movs	r3, #105
 3649              	.LVL278:
 3650 000e C35C     		ldrb	r3, [r0, r3]
 3651 0010 202B     		cmp	r3, #32
 3652 0012 57D1     		bne	.L226
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3653              		.loc 1 699 0
 3654 0014 0029     		cmp	r1, #0
 3655 0016 57D0     		beq	.L227
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3656              		.loc 1 699 0 is_stmt 0 discriminator 1
 3657 0018 002A     		cmp	r2, #0
 3658 001a 57D0     		beq	.L228
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3659              		.loc 1 707 0 is_stmt 1
 3660 001c 8023     		movs	r3, #128
 3661 001e 5B01     		lsls	r3, r3, #5
 3662 0020 8268     		ldr	r2, [r0, #8]
 3663              	.LVL279:
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 119


 3664 0022 9A42     		cmp	r2, r3
 3665 0024 04D1     		bne	.L221
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3666              		.loc 1 707 0 is_stmt 0 discriminator 1
 3667 0026 0369     		ldr	r3, [r0, #16]
 3668 0028 002B     		cmp	r3, #0
 3669 002a 01D1     		bne	.L221
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3670              		.loc 1 709 0 is_stmt 1
 3671 002c CB07     		lsls	r3, r1, #31
 3672 002e 4FD4     		bmi	.L229
 3673              	.L221:
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3674              		.loc 1 716 0
 3675 0030 6823     		movs	r3, #104
 3676 0032 E35C     		ldrb	r3, [r4, r3]
 3677 0034 012B     		cmp	r3, #1
 3678 0036 4DD0     		beq	.L230
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3679              		.loc 1 716 0 is_stmt 0 discriminator 2
 3680 0038 0122     		movs	r2, #1
 3681 003a 6823     		movs	r3, #104
 3682 003c E254     		strb	r2, [r4, r3]
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3683              		.loc 1 718 0 is_stmt 1 discriminator 2
 3684 003e 0023     		movs	r3, #0
 3685 0040 E366     		str	r3, [r4, #108]
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3686              		.loc 1 719 0 discriminator 2
 3687 0042 2032     		adds	r2, r2, #32
 3688 0044 6933     		adds	r3, r3, #105
 3689 0046 E254     		strb	r2, [r4, r3]
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3690              		.loc 1 722 0 discriminator 2
 3691 0048 FFF7FEFF 		bl	HAL_GetTick
 3692              	.LVL280:
 3693 004c 0390     		str	r0, [sp, #12]
 3694              	.LVL281:
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 3695              		.loc 1 724 0 discriminator 2
 3696 004e 5023     		movs	r3, #80
 3697 0050 E652     		strh	r6, [r4, r3]
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(huart->TxXferCount > 0)
 3698              		.loc 1 725 0 discriminator 2
 3699 0052 0233     		adds	r3, r3, #2
 3700 0054 E652     		strh	r6, [r4, r3]
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3701              		.loc 1 726 0 discriminator 2
 3702 0056 20E0     		b	.L222
 3703              	.LVL282:
 3704              	.L225:
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3705              		.loc 1 728 0
 3706 0058 5222     		movs	r2, #82
 3707 005a A35A     		ldrh	r3, [r4, r2]
 3708 005c 013B     		subs	r3, r3, #1
 3709 005e 9BB2     		uxth	r3, r3
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 120


 3710 0060 A352     		strh	r3, [r4, r2]
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3711              		.loc 1 729 0
 3712 0062 0095     		str	r5, [sp]
 3713 0064 039B     		ldr	r3, [sp, #12]
 3714 0066 0022     		movs	r2, #0
 3715 0068 8021     		movs	r1, #128
 3716 006a 2000     		movs	r0, r4
 3717 006c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3718              	.LVL283:
 3719 0070 0028     		cmp	r0, #0
 3720 0072 31D1     		bne	.L231
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3721              		.loc 1 733 0
 3722 0074 8023     		movs	r3, #128
 3723 0076 5B01     		lsls	r3, r3, #5
 3724 0078 A268     		ldr	r2, [r4, #8]
 3725 007a 9A42     		cmp	r2, r3
 3726 007c 09D1     		bne	.L223
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3727              		.loc 1 733 0 is_stmt 0 discriminator 1
 3728 007e 2369     		ldr	r3, [r4, #16]
 3729 0080 002B     		cmp	r3, #0
 3730 0082 06D1     		bne	.L223
 3731              	.LVL284:
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData += 2;
 3732              		.loc 1 736 0 is_stmt 1
 3733 0084 3B88     		ldrh	r3, [r7]
 3734 0086 DB05     		lsls	r3, r3, #23
 3735 0088 DB0D     		lsrs	r3, r3, #23
 3736 008a 2268     		ldr	r2, [r4]
 3737 008c 1385     		strh	r3, [r2, #40]
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3738              		.loc 1 737 0
 3739 008e 0237     		adds	r7, r7, #2
 3740              	.LVL285:
 3741 0090 03E0     		b	.L222
 3742              	.LVL286:
 3743              	.L223:
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3744              		.loc 1 741 0
 3745 0092 3B78     		ldrb	r3, [r7]
 3746 0094 2268     		ldr	r2, [r4]
 3747 0096 1385     		strh	r3, [r2, #40]
 3748 0098 0137     		adds	r7, r7, #1
 3749              	.LVL287:
 3750              	.L222:
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3751              		.loc 1 726 0
 3752 009a 5223     		movs	r3, #82
 3753 009c E35A     		ldrh	r3, [r4, r3]
 3754 009e 9BB2     		uxth	r3, r3
 3755 00a0 002B     		cmp	r3, #0
 3756 00a2 D9D1     		bne	.L225
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3757              		.loc 1 744 0
 3758 00a4 0095     		str	r5, [sp]
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 121


 3759 00a6 039B     		ldr	r3, [sp, #12]
 3760 00a8 0022     		movs	r2, #0
 3761 00aa 4021     		movs	r1, #64
 3762 00ac 2000     		movs	r0, r4
 3763 00ae FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3764              	.LVL288:
 3765 00b2 0028     		cmp	r0, #0
 3766 00b4 12D1     		bne	.L232
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3767              		.loc 1 750 0
 3768 00b6 2022     		movs	r2, #32
 3769 00b8 6923     		movs	r3, #105
 3770 00ba E254     		strb	r2, [r4, r3]
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3771              		.loc 1 753 0
 3772 00bc 0022     		movs	r2, #0
 3773 00be 013B     		subs	r3, r3, #1
 3774 00c0 E254     		strb	r2, [r4, r3]
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3775              		.loc 1 755 0
 3776 00c2 0CE0     		b	.L220
 3777              	.LVL289:
 3778              	.L226:
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3779              		.loc 1 759 0
 3780 00c4 0220     		movs	r0, #2
 3781              	.LVL290:
 3782 00c6 0AE0     		b	.L220
 3783              	.LVL291:
 3784              	.L227:
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3785              		.loc 1 701 0
 3786 00c8 0120     		movs	r0, #1
 3787              	.LVL292:
 3788 00ca 08E0     		b	.L220
 3789              	.LVL293:
 3790              	.L228:
 3791 00cc 0120     		movs	r0, #1
 3792              	.LVL294:
 3793 00ce 06E0     		b	.L220
 3794              	.LVL295:
 3795              	.L229:
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3796              		.loc 1 711 0
 3797 00d0 0120     		movs	r0, #1
 3798              	.LVL296:
 3799 00d2 04E0     		b	.L220
 3800              	.LVL297:
 3801              	.L230:
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3802              		.loc 1 716 0
 3803 00d4 0220     		movs	r0, #2
 3804              	.LVL298:
 3805 00d6 02E0     		b	.L220
 3806              	.LVL299:
 3807              	.L231:
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 122


 3808              		.loc 1 731 0
 3809 00d8 0320     		movs	r0, #3
 3810 00da 00E0     		b	.L220
 3811              	.L232:
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3812              		.loc 1 746 0
 3813 00dc 0320     		movs	r0, #3
 3814              	.LVL300:
 3815              	.L220:
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3816              		.loc 1 761 0
 3817 00de 05B0     		add	sp, sp, #20
 3818              		@ sp needed
 3819              	.LVL301:
 3820              	.LVL302:
 3821              	.LVL303:
 3822 00e0 F0BD     		pop	{r4, r5, r6, r7, pc}
 3823              		.cfi_endproc
 3824              	.LFE41:
 3826 00e2 C046     		.section	.text.HAL_UART_Receive,"ax",%progbits
 3827              		.align	2
 3828              		.global	HAL_UART_Receive
 3829              		.code	16
 3830              		.thumb_func
 3832              	HAL_UART_Receive:
 3833              	.LFB42:
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 3834              		.loc 1 776 0
 3835              		.cfi_startproc
 3836              		@ args = 0, pretend = 0, frame = 8
 3837              		@ frame_needed = 0, uses_anonymous_args = 0
 3838              	.LVL304:
 3839 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3840              	.LCFI34:
 3841              		.cfi_def_cfa_offset 20
 3842              		.cfi_offset 4, -20
 3843              		.cfi_offset 5, -16
 3844              		.cfi_offset 6, -12
 3845              		.cfi_offset 7, -8
 3846              		.cfi_offset 14, -4
 3847 0002 85B0     		sub	sp, sp, #20
 3848              	.LCFI35:
 3849              		.cfi_def_cfa_offset 40
 3850 0004 0400     		movs	r4, r0
 3851 0006 0F00     		movs	r7, r1
 3852 0008 1600     		movs	r6, r2
 3853 000a 1D00     		movs	r5, r3
 3854              	.LVL305:
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3855              		.loc 1 782 0
 3856 000c 6A23     		movs	r3, #106
 3857              	.LVL306:
 3858 000e C35C     		ldrb	r3, [r0, r3]
 3859 0010 202B     		cmp	r3, #32
 3860 0012 6ED1     		bne	.L244
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3861              		.loc 1 784 0
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 123


 3862 0014 0029     		cmp	r1, #0
 3863 0016 6ED0     		beq	.L245
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3864              		.loc 1 784 0 is_stmt 0 discriminator 1
 3865 0018 002A     		cmp	r2, #0
 3866 001a 6ED0     		beq	.L246
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3867              		.loc 1 792 0 is_stmt 1
 3868 001c 8023     		movs	r3, #128
 3869 001e 5B01     		lsls	r3, r3, #5
 3870 0020 8268     		ldr	r2, [r0, #8]
 3871              	.LVL307:
 3872 0022 9A42     		cmp	r2, r3
 3873 0024 04D1     		bne	.L235
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3874              		.loc 1 792 0 is_stmt 0 discriminator 1
 3875 0026 0369     		ldr	r3, [r0, #16]
 3876 0028 002B     		cmp	r3, #0
 3877 002a 01D1     		bne	.L235
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3878              		.loc 1 794 0 is_stmt 1
 3879 002c CB07     		lsls	r3, r1, #31
 3880 002e 66D4     		bmi	.L247
 3881              	.L235:
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3882              		.loc 1 801 0
 3883 0030 6823     		movs	r3, #104
 3884 0032 E35C     		ldrb	r3, [r4, r3]
 3885 0034 012B     		cmp	r3, #1
 3886 0036 64D0     		beq	.L248
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3887              		.loc 1 801 0 is_stmt 0 discriminator 2
 3888 0038 0122     		movs	r2, #1
 3889 003a 6823     		movs	r3, #104
 3890 003c E254     		strb	r2, [r4, r3]
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 3891              		.loc 1 803 0 is_stmt 1 discriminator 2
 3892 003e 0023     		movs	r3, #0
 3893 0040 E366     		str	r3, [r4, #108]
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3894              		.loc 1 804 0 discriminator 2
 3895 0042 2132     		adds	r2, r2, #33
 3896 0044 6A33     		adds	r3, r3, #106
 3897 0046 E254     		strb	r2, [r4, r3]
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3898              		.loc 1 807 0 discriminator 2
 3899 0048 FFF7FEFF 		bl	HAL_GetTick
 3900              	.LVL308:
 3901 004c 0390     		str	r0, [sp, #12]
 3902              	.LVL309:
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 3903              		.loc 1 809 0 discriminator 2
 3904 004e 5823     		movs	r3, #88
 3905 0050 E652     		strh	r6, [r4, r3]
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3906              		.loc 1 810 0 discriminator 2
 3907 0052 0233     		adds	r3, r3, #2
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 124


 3908 0054 E652     		strh	r6, [r4, r3]
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3909              		.loc 1 813 0 discriminator 2
 3910 0056 A368     		ldr	r3, [r4, #8]
 3911 0058 8022     		movs	r2, #128
 3912 005a 5201     		lsls	r2, r2, #5
 3913 005c 9342     		cmp	r3, r2
 3914 005e 0AD1     		bne	.L236
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3915              		.loc 1 813 0 is_stmt 0 discriminator 1
 3916 0060 2369     		ldr	r3, [r4, #16]
 3917 0062 002B     		cmp	r3, #0
 3918 0064 03D1     		bne	.L237
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3919              		.loc 1 813 0 discriminator 3
 3920 0066 294A     		ldr	r2, .L250
 3921 0068 5C33     		adds	r3, r3, #92
 3922 006a E252     		strh	r2, [r4, r3]
 3923 006c 0FE0     		b	.L238
 3924              	.L237:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3925              		.loc 1 813 0 discriminator 4
 3926 006e FF22     		movs	r2, #255
 3927 0070 5C23     		movs	r3, #92
 3928 0072 E252     		strh	r2, [r4, r3]
 3929 0074 0BE0     		b	.L238
 3930              	.L236:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3931              		.loc 1 813 0 discriminator 2
 3932 0076 002B     		cmp	r3, #0
 3933 0078 09D1     		bne	.L238
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3934              		.loc 1 813 0 discriminator 5
 3935 007a 2369     		ldr	r3, [r4, #16]
 3936 007c 002B     		cmp	r3, #0
 3937 007e 03D1     		bne	.L239
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3938              		.loc 1 813 0 discriminator 6
 3939 0080 FF22     		movs	r2, #255
 3940 0082 5C33     		adds	r3, r3, #92
 3941 0084 E252     		strh	r2, [r4, r3]
 3942 0086 02E0     		b	.L238
 3943              	.L239:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3944              		.loc 1 813 0 discriminator 7
 3945 0088 7F22     		movs	r2, #127
 3946 008a 5C23     		movs	r3, #92
 3947 008c E252     		strh	r2, [r4, r3]
 3948              	.L238:
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3949              		.loc 1 814 0 is_stmt 1
 3950 008e 5C23     		movs	r3, #92
 3951 0090 E65A     		ldrh	r6, [r4, r3]
 3952              	.LVL310:
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3953              		.loc 1 817 0
 3954 0092 21E0     		b	.L240
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 125


 3955              	.LVL311:
 3956              	.L243:
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 3957              		.loc 1 819 0
 3958 0094 5A22     		movs	r2, #90
 3959 0096 A35A     		ldrh	r3, [r4, r2]
 3960 0098 013B     		subs	r3, r3, #1
 3961 009a 9BB2     		uxth	r3, r3
 3962 009c A352     		strh	r3, [r4, r2]
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3963              		.loc 1 820 0
 3964 009e 0095     		str	r5, [sp]
 3965 00a0 039B     		ldr	r3, [sp, #12]
 3966 00a2 0022     		movs	r2, #0
 3967 00a4 2021     		movs	r1, #32
 3968 00a6 2000     		movs	r0, r4
 3969 00a8 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3970              	.LVL312:
 3971 00ac 0028     		cmp	r0, #0
 3972 00ae 2AD1     		bne	.L249
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3973              		.loc 1 824 0
 3974 00b0 8023     		movs	r3, #128
 3975 00b2 5B01     		lsls	r3, r3, #5
 3976 00b4 A268     		ldr	r2, [r4, #8]
 3977 00b6 9A42     		cmp	r2, r3
 3978 00b8 08D1     		bne	.L241
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3979              		.loc 1 824 0 is_stmt 0 discriminator 1
 3980 00ba 2369     		ldr	r3, [r4, #16]
 3981 00bc 002B     		cmp	r3, #0
 3982 00be 05D1     		bne	.L241
 3983              	.LVL313:
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData +=2U;
 3984              		.loc 1 827 0 is_stmt 1
 3985 00c0 2368     		ldr	r3, [r4]
 3986 00c2 9B8C     		ldrh	r3, [r3, #36]
 3987 00c4 3340     		ands	r3, r6
 3988 00c6 3B80     		strh	r3, [r7]
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3989              		.loc 1 828 0
 3990 00c8 0237     		adds	r7, r7, #2
 3991              	.LVL314:
 3992 00ca 05E0     		b	.L240
 3993              	.LVL315:
 3994              	.L241:
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3995              		.loc 1 832 0
 3996 00cc 2368     		ldr	r3, [r4]
 3997 00ce 9A8C     		ldrh	r2, [r3, #36]
 3998 00d0 F3B2     		uxtb	r3, r6
 3999 00d2 1340     		ands	r3, r2
 4000 00d4 3B70     		strb	r3, [r7]
 4001 00d6 0137     		adds	r7, r7, #1
 4002              	.LVL316:
 4003              	.L240:
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 126


 4004              		.loc 1 817 0
 4005 00d8 5A23     		movs	r3, #90
 4006 00da E35A     		ldrh	r3, [r4, r3]
 4007 00dc 9BB2     		uxth	r3, r3
 4008 00de 002B     		cmp	r3, #0
 4009 00e0 D8D1     		bne	.L243
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4010              		.loc 1 837 0
 4011 00e2 2022     		movs	r2, #32
 4012 00e4 6A33     		adds	r3, r3, #106
 4013 00e6 E254     		strb	r2, [r4, r3]
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4014              		.loc 1 840 0
 4015 00e8 0022     		movs	r2, #0
 4016 00ea 023B     		subs	r3, r3, #2
 4017 00ec E254     		strb	r2, [r4, r3]
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4018              		.loc 1 842 0
 4019 00ee 0020     		movs	r0, #0
 4020 00f0 0AE0     		b	.L234
 4021              	.LVL317:
 4022              	.L244:
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4023              		.loc 1 846 0
 4024 00f2 0220     		movs	r0, #2
 4025              	.LVL318:
 4026 00f4 08E0     		b	.L234
 4027              	.LVL319:
 4028              	.L245:
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4029              		.loc 1 786 0
 4030 00f6 0120     		movs	r0, #1
 4031              	.LVL320:
 4032 00f8 06E0     		b	.L234
 4033              	.LVL321:
 4034              	.L246:
 4035 00fa 0120     		movs	r0, #1
 4036              	.LVL322:
 4037 00fc 04E0     		b	.L234
 4038              	.LVL323:
 4039              	.L247:
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4040              		.loc 1 796 0
 4041 00fe 0120     		movs	r0, #1
 4042              	.LVL324:
 4043 0100 02E0     		b	.L234
 4044              	.LVL325:
 4045              	.L248:
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4046              		.loc 1 801 0
 4047 0102 0220     		movs	r0, #2
 4048              	.LVL326:
 4049 0104 00E0     		b	.L234
 4050              	.LVL327:
 4051              	.L249:
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4052              		.loc 1 822 0
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 127


 4053 0106 0320     		movs	r0, #3
 4054              	.LVL328:
 4055              	.L234:
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4056              		.loc 1 848 0
 4057 0108 05B0     		add	sp, sp, #20
 4058              		@ sp needed
 4059              	.LVL329:
 4060              	.LVL330:
 4061              	.LVL331:
 4062 010a F0BD     		pop	{r4, r5, r6, r7, pc}
 4063              	.L251:
 4064              		.align	2
 4065              	.L250:
 4066 010c FF010000 		.word	511
 4067              		.cfi_endproc
 4068              	.LFE42:
 4070              		.section	.text.UART_Transmit_IT,"ax",%progbits
 4071              		.align	2
 4072              		.global	UART_Transmit_IT
 4073              		.code	16
 4074              		.thumb_func
 4076              	UART_Transmit_IT:
 4077              	.LFB88:
2661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Send an amount of data in interrupt mode.
2664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
2666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4078              		.loc 1 2670 0
 4079              		.cfi_startproc
 4080              		@ args = 0, pretend = 0, frame = 0
 4081              		@ frame_needed = 0, uses_anonymous_args = 0
 4082              		@ link register save eliminated.
 4083              	.LVL332:
2671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
2672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 4084              		.loc 1 2674 0
 4085 0000 6923     		movs	r3, #105
 4086 0002 C35C     		ldrb	r3, [r0, r3]
 4087 0004 212B     		cmp	r3, #33
 4088 0006 2FD1     		bne	.L257
2675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->TxXferCount == 0U)
 4089              		.loc 1 2676 0
 4090 0008 3133     		adds	r3, r3, #49
 4091 000a C35A     		ldrh	r3, [r0, r3]
 4092 000c 9BB2     		uxth	r3, r3
 4093 000e 002B     		cmp	r3, #0
 4094 0010 0BD1     		bne	.L254
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 128


2677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
2679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 4095              		.loc 1 2679 0
 4096 0012 0268     		ldr	r2, [r0]
 4097 0014 1368     		ldr	r3, [r2]
 4098 0016 8021     		movs	r1, #128
 4099 0018 8B43     		bics	r3, r1
 4100 001a 1360     		str	r3, [r2]
2680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 4101              		.loc 1 2682 0
 4102 001c 0268     		ldr	r2, [r0]
 4103 001e 1168     		ldr	r1, [r2]
 4104 0020 4023     		movs	r3, #64
 4105 0022 0B43     		orrs	r3, r1
 4106 0024 1360     		str	r3, [r2]
2683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_OK;
 4107              		.loc 1 2684 0
 4108 0026 0020     		movs	r0, #0
 4109              	.LVL333:
 4110 0028 1FE0     		b	.L253
 4111              	.LVL334:
 4112              	.L254:
2685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 4113              		.loc 1 2688 0
 4114 002a 8023     		movs	r3, #128
 4115 002c 5B01     		lsls	r3, r3, #5
 4116 002e 8268     		ldr	r2, [r0, #8]
 4117 0030 9A42     		cmp	r2, r3
 4118 0032 0CD1     		bne	.L255
 4119              		.loc 1 2688 0 is_stmt 0 discriminator 1
 4120 0034 0369     		ldr	r3, [r0, #16]
 4121 0036 002B     		cmp	r3, #0
 4122 0038 09D1     		bne	.L255
 4123              	.LVL335:
2689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
2691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 4124              		.loc 1 2691 0 is_stmt 1
 4125 003a C36C     		ldr	r3, [r0, #76]
 4126 003c 1B88     		ldrh	r3, [r3]
 4127 003e DB05     		lsls	r3, r3, #23
 4128 0040 DB0D     		lsrs	r3, r3, #23
 4129 0042 0268     		ldr	r2, [r0]
 4130 0044 1385     		strh	r3, [r2, #40]
 4131              	.LVL336:
2692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 4132              		.loc 1 2692 0
 4133 0046 C36C     		ldr	r3, [r0, #76]
 4134 0048 0233     		adds	r3, r3, #2
 4135 004a C364     		str	r3, [r0, #76]
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 129


 4136 004c 05E0     		b	.L256
 4137              	.L255:
2693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
2695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFFU);
 4138              		.loc 1 2696 0
 4139 004e C36C     		ldr	r3, [r0, #76]
 4140 0050 5A1C     		adds	r2, r3, #1
 4141 0052 C264     		str	r2, [r0, #76]
 4142 0054 1B78     		ldrb	r3, [r3]
 4143 0056 0268     		ldr	r2, [r0]
 4144 0058 1385     		strh	r3, [r2, #40]
 4145              	.L256:
2697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 4146              		.loc 1 2698 0
 4147 005a 5222     		movs	r2, #82
 4148 005c 835A     		ldrh	r3, [r0, r2]
 4149 005e 013B     		subs	r3, r3, #1
 4150 0060 9BB2     		uxth	r3, r3
 4151 0062 8352     		strh	r3, [r0, r2]
2699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_OK;
 4152              		.loc 1 2700 0
 4153 0064 0020     		movs	r0, #0
 4154              	.LVL337:
 4155 0066 00E0     		b	.L253
 4156              	.LVL338:
 4157              	.L257:
2701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 4158              		.loc 1 2705 0
 4159 0068 0220     		movs	r0, #2
 4160              	.LVL339:
 4161              	.L253:
2706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4162              		.loc 1 2707 0
 4163              		@ sp needed
 4164 006a 7047     		bx	lr
 4165              		.cfi_endproc
 4166              	.LFE88:
 4168              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 4169              		.align	2
 4170              		.global	UART_EndTransmit_IT
 4171              		.code	16
 4172              		.thumb_func
 4174              	UART_EndTransmit_IT:
 4175              	.LFB89:
2708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
2711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 130


2712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART module.
2713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4176              		.loc 1 2716 0
 4177              		.cfi_startproc
 4178              		@ args = 0, pretend = 0, frame = 0
 4179              		@ frame_needed = 0, uses_anonymous_args = 0
 4180              	.LVL340:
 4181 0000 10B5     		push	{r4, lr}
 4182              	.LCFI36:
 4183              		.cfi_def_cfa_offset 8
 4184              		.cfi_offset 4, -8
 4185              		.cfi_offset 14, -4
2717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
2718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 4186              		.loc 1 2718 0
 4187 0002 0268     		ldr	r2, [r0]
 4188 0004 1368     		ldr	r3, [r2]
 4189 0006 4021     		movs	r1, #64
 4190 0008 8B43     		bics	r3, r1
 4191 000a 1360     		str	r3, [r2]
2719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4192              		.loc 1 2721 0
 4193 000c 2022     		movs	r2, #32
 4194 000e 6923     		movs	r3, #105
 4195 0010 C254     		strb	r2, [r0, r3]
2722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 4196              		.loc 1 2723 0
 4197 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 4198              	.LVL341:
2724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4199              		.loc 1 2726 0
 4200 0016 0020     		movs	r0, #0
 4201              		@ sp needed
 4202 0018 10BD     		pop	{r4, pc}
 4203              		.cfi_endproc
 4204              	.LFE89:
 4206 001a C046     		.section	.text.UART_Receive_IT,"ax",%progbits
 4207              		.align	2
 4208              		.global	UART_Receive_IT
 4209              		.code	16
 4210              		.thumb_func
 4212              	UART_Receive_IT:
 4213              	.LFB90:
2727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Receive an amount of data in interrupt mode.
2730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
2732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 131


2733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4214              		.loc 1 2736 0
 4215              		.cfi_startproc
 4216              		@ args = 0, pretend = 0, frame = 0
 4217              		@ frame_needed = 0, uses_anonymous_args = 0
 4218              	.LVL342:
 4219 0000 10B5     		push	{r4, lr}
 4220              	.LCFI37:
 4221              		.cfi_def_cfa_offset 8
 4222              		.cfi_offset 4, -8
 4223              		.cfi_offset 14, -4
2737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
2738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 4224              		.loc 1 2738 0
 4225 0002 5C23     		movs	r3, #92
 4226 0004 C25A     		ldrh	r2, [r0, r3]
 4227              	.LVL343:
2739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t  uhdata;
2740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 4228              		.loc 1 2742 0
 4229 0006 0E33     		adds	r3, r3, #14
 4230 0008 C35C     		ldrb	r3, [r0, r3]
 4231 000a 222B     		cmp	r3, #34
 4232 000c 30D1     		bne	.L260
2743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 4233              		.loc 1 2744 0
 4234 000e 0368     		ldr	r3, [r0]
 4235 0010 998C     		ldrh	r1, [r3, #36]
 4236 0012 89B2     		uxth	r1, r1
 4237              	.LVL344:
2745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 4238              		.loc 1 2745 0
 4239 0014 8023     		movs	r3, #128
 4240 0016 5B01     		lsls	r3, r3, #5
 4241 0018 8468     		ldr	r4, [r0, #8]
 4242 001a 9C42     		cmp	r4, r3
 4243 001c 09D1     		bne	.L261
 4244              		.loc 1 2745 0 is_stmt 0 discriminator 1
 4245 001e 0369     		ldr	r3, [r0, #16]
 4246 0020 002B     		cmp	r3, #0
 4247 0022 06D1     		bne	.L261
 4248              	.LVL345:
2746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
2748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
 4249              		.loc 1 2748 0 is_stmt 1
 4250 0024 0A40     		ands	r2, r1
 4251              	.LVL346:
 4252 0026 436D     		ldr	r3, [r0, #84]
 4253 0028 1A80     		strh	r2, [r3]
 4254              	.LVL347:
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 132


2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pRxBuffPtr +=2U;
 4255              		.loc 1 2749 0
 4256 002a 436D     		ldr	r3, [r0, #84]
 4257              	.LVL348:
 4258 002c 0233     		adds	r3, r3, #2
 4259 002e 4365     		str	r3, [r0, #84]
 4260 0030 06E0     		b	.L262
 4261              	.LVL349:
 4262              	.L261:
2750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
 4263              		.loc 1 2753 0
 4264 0032 446D     		ldr	r4, [r0, #84]
 4265 0034 631C     		adds	r3, r4, #1
 4266 0036 4365     		str	r3, [r0, #84]
 4267 0038 D3B2     		uxtb	r3, r2
 4268 003a 0A00     		movs	r2, r1
 4269              	.LVL350:
 4270 003c 1A40     		ands	r2, r3
 4271 003e 2270     		strb	r2, [r4]
 4272              	.L262:
2754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
 4273              		.loc 1 2756 0
 4274 0040 5A22     		movs	r2, #90
 4275 0042 835A     		ldrh	r3, [r0, r2]
 4276 0044 013B     		subs	r3, r3, #1
 4277 0046 9BB2     		uxth	r3, r3
 4278 0048 8352     		strh	r3, [r0, r2]
 4279 004a 002B     		cmp	r3, #0
 4280 004c 17D1     		bne	.L264
2757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4281              		.loc 1 2759 0
 4282 004e 0268     		ldr	r2, [r0]
 4283 0050 1168     		ldr	r1, [r2]
 4284              	.LVL351:
 4285 0052 0C4B     		ldr	r3, .L265
 4286 0054 0B40     		ands	r3, r1
 4287 0056 1360     		str	r3, [r2]
2760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4288              		.loc 1 2762 0
 4289 0058 0268     		ldr	r2, [r0]
 4290 005a 9368     		ldr	r3, [r2, #8]
 4291 005c 0121     		movs	r1, #1
 4292 005e 8B43     		bics	r3, r1
 4293 0060 9360     		str	r3, [r2, #8]
2763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 4294              		.loc 1 2765 0
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 133


 4295 0062 2022     		movs	r2, #32
 4296 0064 6A23     		movs	r3, #106
 4297 0066 C254     		strb	r2, [r0, r3]
2766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 4298              		.loc 1 2767 0
 4299 0068 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 4300              	.LVL352:
2768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_OK;
 4301              		.loc 1 2769 0
 4302 006c 0020     		movs	r0, #0
 4303 006e 07E0     		b	.L263
 4304              	.LVL353:
 4305              	.L260:
2770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
2773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
2777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4306              		.loc 1 2777 0
 4307 0070 0268     		ldr	r2, [r0]
 4308              	.LVL354:
 4309 0072 9169     		ldr	r1, [r2, #24]
 4310 0074 0823     		movs	r3, #8
 4311 0076 0B43     		orrs	r3, r1
 4312 0078 9361     		str	r3, [r2, #24]
 4313              	.LVL355:
2778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 4314              		.loc 1 2779 0
 4315 007a 0220     		movs	r0, #2
 4316              	.LVL356:
 4317 007c 00E0     		b	.L263
 4318              	.LVL357:
 4319              	.L264:
2772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4320              		.loc 1 2772 0
 4321 007e 0020     		movs	r0, #0
 4322              	.LVL358:
 4323              	.L263:
2780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4324              		.loc 1 2781 0
 4325              		@ sp needed
 4326 0080 10BD     		pop	{r4, pc}
 4327              	.L266:
 4328 0082 C046     		.align	2
 4329              	.L265:
 4330 0084 DFFEFFFF 		.word	-289
 4331              		.cfi_endproc
 4332              	.LFE90:
 4334              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 4335              		.align	2
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 134


 4336              		.global	HAL_UART_IRQHandler
 4337              		.code	16
 4338              		.thumb_func
 4340              	HAL_UART_IRQHandler:
 4341              	.LFB56:
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 4342              		.loc 1 1657 0
 4343              		.cfi_startproc
 4344              		@ args = 0, pretend = 0, frame = 0
 4345              		@ frame_needed = 0, uses_anonymous_args = 0
 4346              	.LVL359:
 4347 0000 70B5     		push	{r4, r5, r6, lr}
 4348              	.LCFI38:
 4349              		.cfi_def_cfa_offset 16
 4350              		.cfi_offset 4, -16
 4351              		.cfi_offset 5, -12
 4352              		.cfi_offset 6, -8
 4353              		.cfi_offset 14, -4
 4354 0002 0400     		movs	r4, r0
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 4355              		.loc 1 1658 0
 4356 0004 0168     		ldr	r1, [r0]
 4357 0006 CB69     		ldr	r3, [r1, #28]
 4358              	.LVL360:
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr3its;
 4359              		.loc 1 1659 0
 4360 0008 0D68     		ldr	r5, [r1]
 4361              	.LVL361:
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (errorflags == RESET)
 4362              		.loc 1 1664 0
 4363 000a 0F22     		movs	r2, #15
 4364 000c 1A40     		ands	r2, r3
 4365              	.LVL362:
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4366              		.loc 1 1665 0
 4367 000e 07D1     		bne	.L268
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4368              		.loc 1 1668 0
 4369 0010 9806     		lsls	r0, r3, #26
 4370 0012 05D5     		bpl	.L268
 4371              	.LVL363:
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4372              		.loc 1 1668 0 is_stmt 0 discriminator 1
 4373 0014 A806     		lsls	r0, r5, #26
 4374 0016 03D5     		bpl	.L268
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
 4375              		.loc 1 1670 0 is_stmt 1
 4376 0018 2000     		movs	r0, r4
 4377 001a FFF7FEFF 		bl	UART_Receive_IT
 4378              	.LVL364:
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4379              		.loc 1 1671 0
 4380 001e 7BE0     		b	.L267
 4381              	.LVL365:
 4382              	.L268:
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(   (errorflags != RESET)
 4383              		.loc 1 1676 0
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 135


 4384 0020 8868     		ldr	r0, [r1, #8]
 4385              	.LVL366:
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
 4386              		.loc 1 1677 0
 4387 0022 002A     		cmp	r2, #0
 4388 0024 69D0     		beq	.L270
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
 4389              		.loc 1 1678 0
 4390 0026 0122     		movs	r2, #1
 4391              	.LVL367:
 4392 0028 1040     		ands	r0, r2
 4393              	.LVL368:
 4394 002a 03D1     		bne	.L271
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4395              		.loc 1 1679 0
 4396 002c 2032     		adds	r2, r2, #32
 4397 002e FF32     		adds	r2, r2, #255
 4398 0030 1542     		tst	r5, r2
 4399 0032 62D0     		beq	.L270
 4400              	.L271:
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4401              		.loc 1 1682 0
 4402 0034 DA07     		lsls	r2, r3, #31
 4403 0036 06D5     		bpl	.L272
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4404              		.loc 1 1682 0 is_stmt 0 discriminator 1
 4405 0038 EA05     		lsls	r2, r5, #23
 4406 003a 04D5     		bpl	.L272
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4407              		.loc 1 1684 0 is_stmt 1
 4408 003c 0122     		movs	r2, #1
 4409 003e 0A62     		str	r2, [r1, #32]
1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4410              		.loc 1 1686 0
 4411 0040 E16E     		ldr	r1, [r4, #108]
 4412 0042 0A43     		orrs	r2, r1
 4413 0044 E266     		str	r2, [r4, #108]
 4414              	.L272:
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4415              		.loc 1 1690 0
 4416 0046 9A07     		lsls	r2, r3, #30
 4417 0048 08D5     		bpl	.L273
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4418              		.loc 1 1690 0 is_stmt 0 discriminator 1
 4419 004a 0028     		cmp	r0, #0
 4420 004c 06D0     		beq	.L273
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4421              		.loc 1 1692 0 is_stmt 1
 4422 004e 2268     		ldr	r2, [r4]
 4423 0050 0221     		movs	r1, #2
 4424 0052 1162     		str	r1, [r2, #32]
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4425              		.loc 1 1694 0
 4426 0054 E16E     		ldr	r1, [r4, #108]
 4427 0056 0422     		movs	r2, #4
 4428 0058 0A43     		orrs	r2, r1
 4429 005a E266     		str	r2, [r4, #108]
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 136


 4430              	.L273:
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4431              		.loc 1 1698 0
 4432 005c 5A07     		lsls	r2, r3, #29
 4433 005e 08D5     		bpl	.L274
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4434              		.loc 1 1698 0 is_stmt 0 discriminator 1
 4435 0060 0028     		cmp	r0, #0
 4436 0062 06D0     		beq	.L274
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4437              		.loc 1 1700 0 is_stmt 1
 4438 0064 2268     		ldr	r2, [r4]
 4439 0066 0421     		movs	r1, #4
 4440 0068 1162     		str	r1, [r2, #32]
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4441              		.loc 1 1702 0
 4442 006a E16E     		ldr	r1, [r4, #108]
 4443 006c 0222     		movs	r2, #2
 4444 006e 0A43     		orrs	r2, r1
 4445 0070 E266     		str	r2, [r4, #108]
 4446              	.L274:
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 4447              		.loc 1 1706 0
 4448 0072 1A07     		lsls	r2, r3, #28
 4449 0074 09D5     		bpl	.L275
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 4450              		.loc 1 1706 0 is_stmt 0 discriminator 1
 4451 0076 AA06     		lsls	r2, r5, #26
 4452 0078 01D4     		bmi	.L276
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4453              		.loc 1 1707 0 is_stmt 1
 4454 007a 0028     		cmp	r0, #0
 4455 007c 05D0     		beq	.L275
 4456              	.L276:
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4457              		.loc 1 1709 0
 4458 007e 2168     		ldr	r1, [r4]
 4459 0080 0822     		movs	r2, #8
 4460 0082 0A62     		str	r2, [r1, #32]
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4461              		.loc 1 1711 0
 4462 0084 E16E     		ldr	r1, [r4, #108]
 4463 0086 0A43     		orrs	r2, r1
 4464 0088 E266     		str	r2, [r4, #108]
 4465              	.L275:
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4466              		.loc 1 1715 0
 4467 008a E26E     		ldr	r2, [r4, #108]
 4468 008c 002A     		cmp	r2, #0
 4469 008e 43D0     		beq	.L267
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4470              		.loc 1 1718 0
 4471 0090 9B06     		lsls	r3, r3, #26
 4472 0092 04D5     		bpl	.L277
 4473              	.LVL369:
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4474              		.loc 1 1718 0 is_stmt 0 discriminator 1
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 137


 4475 0094 AB06     		lsls	r3, r5, #26
 4476 0096 02D5     		bpl	.L277
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4477              		.loc 1 1720 0 is_stmt 1
 4478 0098 2000     		movs	r0, r4
 4479 009a FFF7FEFF 		bl	UART_Receive_IT
 4480              	.LVL370:
 4481              	.L277:
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 4482              		.loc 1 1725 0
 4483 009e E36E     		ldr	r3, [r4, #108]
 4484 00a0 1B07     		lsls	r3, r3, #28
 4485 00a2 03D4     		bmi	.L278
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {  
 4486              		.loc 1 1726 0 discriminator 1
 4487 00a4 2368     		ldr	r3, [r4]
 4488 00a6 9B68     		ldr	r3, [r3, #8]
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 4489              		.loc 1 1725 0 discriminator 1
 4490 00a8 5B06     		lsls	r3, r3, #25
 4491 00aa 20D5     		bpl	.L279
 4492              	.L278:
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4493              		.loc 1 1731 0
 4494 00ac 2000     		movs	r0, r4
 4495 00ae FFF7FEFF 		bl	UART_EndRxTransfer
 4496              	.LVL371:
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 4497              		.loc 1 1734 0
 4498 00b2 2368     		ldr	r3, [r4]
 4499 00b4 9A68     		ldr	r2, [r3, #8]
 4500 00b6 5206     		lsls	r2, r2, #25
 4501 00b8 15D5     		bpl	.L280
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4502              		.loc 1 1736 0
 4503 00ba 9A68     		ldr	r2, [r3, #8]
 4504 00bc 4021     		movs	r1, #64
 4505 00be 8A43     		bics	r2, r1
 4506 00c0 9A60     		str	r2, [r3, #8]
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
 4507              		.loc 1 1739 0
 4508 00c2 636E     		ldr	r3, [r4, #100]
 4509 00c4 002B     		cmp	r3, #0
 4510 00c6 0AD0     		beq	.L281
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4511              		.loc 1 1743 0
 4512 00c8 144A     		ldr	r2, .L283
 4513 00ca 5A63     		str	r2, [r3, #52]
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             {
 4514              		.loc 1 1746 0
 4515 00cc 606E     		ldr	r0, [r4, #100]
 4516 00ce FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4517              	.LVL372:
 4518 00d2 0028     		cmp	r0, #0
 4519 00d4 20D0     		beq	.L267
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             }
 4520              		.loc 1 1749 0
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 138


 4521 00d6 606E     		ldr	r0, [r4, #100]
 4522 00d8 436B     		ldr	r3, [r0, #52]
 4523 00da 9847     		blx	r3
 4524              	.LVL373:
 4525 00dc 1CE0     		b	.L267
 4526              	.L281:
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
 4527              		.loc 1 1755 0
 4528 00de 2000     		movs	r0, r4
 4529 00e0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4530              	.LVL374:
 4531 00e4 18E0     		b	.L267
 4532              	.L280:
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 4533              		.loc 1 1761 0
 4534 00e6 2000     		movs	r0, r4
 4535 00e8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4536              	.LVL375:
 4537 00ec 14E0     		b	.L267
 4538              	.L279:
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 4539              		.loc 1 1768 0
 4540 00ee 2000     		movs	r0, r4
 4541 00f0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4542              	.LVL376:
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4543              		.loc 1 1769 0
 4544 00f4 0023     		movs	r3, #0
 4545 00f6 E366     		str	r3, [r4, #108]
 4546 00f8 0EE0     		b	.L267
 4547              	.LVL377:
 4548              	.L270:
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4549              		.loc 1 1790 0
 4550 00fa 1A06     		lsls	r2, r3, #24
 4551 00fc 05D5     		bpl	.L282
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4552              		.loc 1 1790 0 is_stmt 0 discriminator 1
 4553 00fe 2A06     		lsls	r2, r5, #24
 4554 0100 03D5     		bpl	.L282
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 4555              		.loc 1 1792 0 is_stmt 1
 4556 0102 2000     		movs	r0, r4
 4557 0104 FFF7FEFF 		bl	UART_Transmit_IT
 4558              	.LVL378:
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4559              		.loc 1 1793 0
 4560 0108 06E0     		b	.L267
 4561              	.LVL379:
 4562              	.L282:
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4563              		.loc 1 1797 0
 4564 010a 5B06     		lsls	r3, r3, #25
 4565 010c 04D5     		bpl	.L267
 4566              	.LVL380:
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4567              		.loc 1 1797 0 is_stmt 0 discriminator 1
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 139


 4568 010e 6B06     		lsls	r3, r5, #25
 4569 0110 02D5     		bpl	.L267
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 4570              		.loc 1 1799 0 is_stmt 1
 4571 0112 2000     		movs	r0, r4
 4572 0114 FFF7FEFF 		bl	UART_EndTransmit_IT
 4573              	.LVL381:
 4574              	.L267:
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4575              		.loc 1 1803 0
 4576              		@ sp needed
 4577              	.LVL382:
 4578              	.LVL383:
 4579 0118 70BD     		pop	{r4, r5, r6, pc}
 4580              	.L284:
 4581 011a C046     		.align	2
 4582              	.L283:
 4583 011c 00000000 		.word	UART_DMAAbortOnError
 4584              		.cfi_endproc
 4585              	.LFE56:
 4587              		.text
 4588              	.Letext0:
 4589              		.file 2 "d:\\app\\armgcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 4590              		.file 3 "d:\\app\\armgcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 4591              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h"
 4592              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 4593              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 4594              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 4595              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 4596              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 4597              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 140


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_uart.c
D:\App\cygwin\tmp\ccvn8Z9H.s:20     .text.UART_EndTxTransfer:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:24     .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
D:\App\cygwin\tmp\ccvn8Z9H.s:50     .text.UART_EndRxTransfer:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:54     .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
D:\App\cygwin\tmp\ccvn8Z9H.s:84     .text.UART_EndRxTransfer:0000001c $d
D:\App\cygwin\tmp\ccvn8Z9H.s:89     .text.HAL_UART_MspInit:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:94     .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
D:\App\cygwin\tmp\ccvn8Z9H.s:109    .text.HAL_UART_MspDeInit:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:114    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
D:\App\cygwin\tmp\ccvn8Z9H.s:129    .text.HAL_UART_DeInit:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:134    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
D:\App\cygwin\tmp\ccvn8Z9H.s:201    .text.HAL_UART_Transmit_IT:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:206    .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
D:\App\cygwin\tmp\ccvn8Z9H.s:314    .text.HAL_UART_Receive_IT:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:319    .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
D:\App\cygwin\tmp\ccvn8Z9H.s:485    .text.HAL_UART_Receive_IT:000000b0 $d
D:\App\cygwin\tmp\ccvn8Z9H.s:490    .text.HAL_UART_Transmit_DMA:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:495    .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
D:\App\cygwin\tmp\ccvn8Z9H.s:629    .text.HAL_UART_Transmit_DMA:0000009c $d
D:\App\cygwin\tmp\ccvn8Z9H.s:1325   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
D:\App\cygwin\tmp\ccvn8Z9H.s:1403   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
D:\App\cygwin\tmp\ccvn8Z9H.s:1588   .text.UART_DMAError:00000000 UART_DMAError
D:\App\cygwin\tmp\ccvn8Z9H.s:636    .text.HAL_UART_Receive_DMA:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:641    .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
D:\App\cygwin\tmp\ccvn8Z9H.s:781    .text.HAL_UART_Receive_DMA:000000a4 $d
D:\App\cygwin\tmp\ccvn8Z9H.s:1452   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
D:\App\cygwin\tmp\ccvn8Z9H.s:1539   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
D:\App\cygwin\tmp\ccvn8Z9H.s:788    .text.HAL_UART_DMAPause:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:793    .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
D:\App\cygwin\tmp\ccvn8Z9H.s:876    .text.HAL_UART_DMAPause:00000060 $d
D:\App\cygwin\tmp\ccvn8Z9H.s:881    .text.HAL_UART_DMAResume:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:886    .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
D:\App\cygwin\tmp\ccvn8Z9H.s:965    .text.HAL_UART_DMAStop:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:970    .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
D:\App\cygwin\tmp\ccvn8Z9H.s:1051   .text.HAL_UART_Abort:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:1056   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
D:\App\cygwin\tmp\ccvn8Z9H.s:1154   .text.HAL_UART_Abort:00000078 $d
D:\App\cygwin\tmp\ccvn8Z9H.s:1159   .text.HAL_UART_AbortTransmit:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:1164   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
D:\App\cygwin\tmp\ccvn8Z9H.s:1223   .text.HAL_UART_AbortReceive:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:1228   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
D:\App\cygwin\tmp\ccvn8Z9H.s:1296   .text.HAL_UART_AbortReceive:00000050 $d
D:\App\cygwin\tmp\ccvn8Z9H.s:1301   .text.HAL_UART_TxCpltCallback:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:1306   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
D:\App\cygwin\tmp\ccvn8Z9H.s:1321   .text.UART_DMATransmitCplt:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:1379   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:1384   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
D:\App\cygwin\tmp\ccvn8Z9H.s:1399   .text.UART_DMATxHalfCplt:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:1428   .text.HAL_UART_RxCpltCallback:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:1433   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
D:\App\cygwin\tmp\ccvn8Z9H.s:1448   .text.UART_DMAReceiveCplt:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:1510   .text.UART_DMAReceiveCplt:00000040 $d
D:\App\cygwin\tmp\ccvn8Z9H.s:1515   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:1520   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
D:\App\cygwin\tmp\ccvn8Z9H.s:1535   .text.UART_DMARxHalfCplt:00000000 $t
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 141


D:\App\cygwin\tmp\ccvn8Z9H.s:1564   .text.HAL_UART_ErrorCallback:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:1569   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
D:\App\cygwin\tmp\ccvn8Z9H.s:1584   .text.UART_DMAError:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:1659   .text.UART_DMAAbortOnError:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:1663   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
D:\App\cygwin\tmp\ccvn8Z9H.s:1695   .text.HAL_UART_AbortCpltCallback:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:1700   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
D:\App\cygwin\tmp\ccvn8Z9H.s:1715   .text.HAL_UART_Abort_IT:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:1720   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
D:\App\cygwin\tmp\ccvn8Z9H.s:1896   .text.HAL_UART_Abort_IT:000000d0 $d
D:\App\cygwin\tmp\ccvn8Z9H.s:1970   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
D:\App\cygwin\tmp\ccvn8Z9H.s:1907   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
D:\App\cygwin\tmp\ccvn8Z9H.s:1903   .text.UART_DMARxAbortCallback:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:1966   .text.UART_DMATxAbortCallback:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:2029   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:2034   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
D:\App\cygwin\tmp\ccvn8Z9H.s:2049   .text.HAL_UART_AbortTransmit_IT:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:2054   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
D:\App\cygwin\tmp\ccvn8Z9H.s:2139   .text.HAL_UART_AbortTransmit_IT:00000060 $d
D:\App\cygwin\tmp\ccvn8Z9H.s:2148   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
D:\App\cygwin\tmp\ccvn8Z9H.s:2144   .text.UART_DMATxOnlyAbortCallback:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:2181   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:2186   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
D:\App\cygwin\tmp\ccvn8Z9H.s:2201   .text.HAL_UART_AbortReceive_IT:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:2206   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
D:\App\cygwin\tmp\ccvn8Z9H.s:2304   .text.HAL_UART_AbortReceive_IT:00000074 $d
D:\App\cygwin\tmp\ccvn8Z9H.s:2314   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
D:\App\cygwin\tmp\ccvn8Z9H.s:2310   .text.UART_DMARxOnlyAbortCallback:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:2351   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:2356   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
D:\App\cygwin\tmp\ccvn8Z9H.s:2377   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:2382   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
D:\App\cygwin\tmp\ccvn8Z9H.s:2443   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:2448   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
D:\App\cygwin\tmp\ccvn8Z9H.s:2509   .text.HAL_UART_GetState:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:2514   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
D:\App\cygwin\tmp\ccvn8Z9H.s:2540   .text.HAL_UART_GetError:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:2545   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
D:\App\cygwin\tmp\ccvn8Z9H.s:2564   .text.UART_SetConfig:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:2569   .text.UART_SetConfig:00000000 UART_SetConfig
D:\App\cygwin\tmp\ccvn8Z9H.s:2878   .text.UART_SetConfig:00000184 $d
D:\App\cygwin\tmp\ccvn8Z9H.s:2888   .text.UART_AdvFeatureConfig:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:2893   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
D:\App\cygwin\tmp\ccvn8Z9H.s:3025   .text.UART_AdvFeatureConfig:000000bc $d
D:\App\cygwin\tmp\ccvn8Z9H.s:3038   .text.UART_CheckIdleState:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:3043   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
D:\App\cygwin\tmp\ccvn8Z9H.s:3073   .text.HAL_UART_Init:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:3078   .text.HAL_UART_Init:00000000 HAL_UART_Init
D:\App\cygwin\tmp\ccvn8Z9H.s:3167   .text.HAL_UART_Init:00000068 $d
D:\App\cygwin\tmp\ccvn8Z9H.s:3172   .text.HAL_HalfDuplex_Init:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:3177   .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
D:\App\cygwin\tmp\ccvn8Z9H.s:3266   .text.HAL_HalfDuplex_Init:00000068 $d
D:\App\cygwin\tmp\ccvn8Z9H.s:3271   .text.HAL_MultiProcessor_Init:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:3276   .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
D:\App\cygwin\tmp\ccvn8Z9H.s:3393   .text.HAL_MultiProcessor_Init:00000090 $d
D:\App\cygwin\tmp\ccvn8Z9H.s:3398   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:3403   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
ARM GAS  D:\App\cygwin\tmp\ccvn8Z9H.s 			page 142


D:\App\cygwin\tmp\ccvn8Z9H.s:3455   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:3460   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
D:\App\cygwin\tmp\ccvn8Z9H.s:3510   .text.HAL_MultiProcessor_DisableMuteMode:00000030 $d
D:\App\cygwin\tmp\ccvn8Z9H.s:3515   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:3520   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
D:\App\cygwin\tmp\ccvn8Z9H.s:3614   .text.UART_WaitOnFlagUntilTimeout:00000068 $d
D:\App\cygwin\tmp\ccvn8Z9H.s:3619   .text.HAL_UART_Transmit:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:3624   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
D:\App\cygwin\tmp\ccvn8Z9H.s:3827   .text.HAL_UART_Receive:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:3832   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
D:\App\cygwin\tmp\ccvn8Z9H.s:4066   .text.HAL_UART_Receive:0000010c $d
D:\App\cygwin\tmp\ccvn8Z9H.s:4071   .text.UART_Transmit_IT:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:4076   .text.UART_Transmit_IT:00000000 UART_Transmit_IT
D:\App\cygwin\tmp\ccvn8Z9H.s:4169   .text.UART_EndTransmit_IT:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:4174   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
D:\App\cygwin\tmp\ccvn8Z9H.s:4207   .text.UART_Receive_IT:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:4212   .text.UART_Receive_IT:00000000 UART_Receive_IT
D:\App\cygwin\tmp\ccvn8Z9H.s:4330   .text.UART_Receive_IT:00000084 $d
D:\App\cygwin\tmp\ccvn8Z9H.s:4335   .text.HAL_UART_IRQHandler:00000000 $t
D:\App\cygwin\tmp\ccvn8Z9H.s:4340   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
D:\App\cygwin\tmp\ccvn8Z9H.s:4583   .text.HAL_UART_IRQHandler:0000011c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
__aeabi_uidiv
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_GetTick
